var Jobs=webpackJsonpJobs([0],[function(t,n,e){"use strict";e.d(n,"i",function(){return r}),e.d(n,"j",function(){return i}),e.d(n,"o",function(){return u}),e.d(n,"l",function(){return c}),e.d(n,"q",function(){return o}),e.d(n,"w",function(){return a}),e.d(n,"h",function(){return f}),e.d(n,"r",function(){return s}),e.d(n,"a",function(){return l}),e.d(n,"d",function(){return h}),e.d(n,"e",function(){return d}),e.d(n,"g",function(){return b}),e.d(n,"f",function(){return v}),e.d(n,"k",function(){return p}),e.d(n,"n",function(){return g}),e.d(n,"p",function(){return _}),e.d(n,"t",function(){return y}),e.d(n,"s",function(){return m}),e.d(n,"u",function(){return O}),e.d(n,"v",function(){return j}),n.b=function(t){return t>1?0:t<-1?u:Math.acos(t)},n.c=function(t){return t>1?c:t<-1?-c:Math.asin(t)},n.m=function(t){return(t=y(t/2))*t};var r=1e-6,i=1e-12,u=Math.PI,c=u/2,o=u/4,a=2*u,f=180/u,s=u/180,l=Math.abs,h=Math.atan,d=Math.atan2,b=Math.cos,v=Math.ceil,p=Math.exp,g=(Math.floor,Math.log),_=Math.pow,y=Math.sin,m=Math.sign||function(t){return t>0?1:t<0?-1:0},O=Math.sqrt,j=Math.tan},function(t,n,e){"use strict";var r=e(50);e.d(n,"a",function(){return r.a});var i=e(208);e.d(n,"d",function(){return i.a});var u=e(104);e.d(n,"e",function(){return u.a});var c=e(209);e.d(n,"f",function(){return c.a});var o=e(51);e.d(n,"g",function(){return o.a});var a=e(52);e.d(n,"h",function(){return a.a});var f=e(210);e.d(n,"i",function(){return f.a});var s=e(238);e.d(n,"j",function(){return s.a});var l=e(4);e.d(n,"k",function(){return l.b});var h=e(56);e.d(n,"l",function(){return h.a});var d=e(105);e.d(n,"m",function(){return d.a});var b=e(108);e.d(n,"n",function(){return b.b});var v=e(239);e.d(n,"o",function(){return v.a});var p=e(240);e.d(n,"p",function(){return p.a});var g=e(57);e.d(n,"q",function(){return g.a});var _=e(54);e.d(n,"c",function(){return _.c}),e.d(n,"b",function(){return _.a})},function(t,n,e){"use strict";function r(t,n,e,c){function o(n){return t(n=new Date(+n)),n}return o.floor=o,o.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},o.round=function(t){var n=o(t),e=o.ceil(t);return t-n<e-t?n:e},o.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},o.range=function(e,r,i){var u=[];if(e=o.ceil(e),i=null==i?1:Math.floor(i),!(e<r&&i>0))return u;do{u.push(new Date(+e))}while(n(e,i),t(e),e<r);return u},o.filter=function(e){return r(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(o.count=function(n,r){return i.setTime(+n),u.setTime(+r),t(i),t(u),Math.floor(e(i,u))},o.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?o.filter(c?function(n){return c(n)%t==0}:function(n){return o.count(0,n)%t==0}):o:null}),o}n.a=r;var i=new Date,u=new Date},function(t,n,e){"use strict";var r=e(92);e.d(n,"b",function(){return r.c}),e.d(n,"d",function(){return r.b}),e.d(n,"c",function(){return r.a});var i=e(17);e.d(n,"a",function(){return i.a});var u=e(93);e.d(n,"e",function(){return u.a});var c=e(184);e.d(n,"f",function(){return c.a});var o=e(185);e.d(n,"g",function(){return o.a});var a=e(95);e.d(n,"h",function(){return a.a});var f=e(97);e.d(n,"i",function(){return f.a});var s=e(186);e.d(n,"j",function(){return s.a});var l=e(189);e.d(n,"w",function(){return l.a});var h=e(190);e.d(n,"x",function(){return h.a});var d=e(101);e.d(n,"y",function(){return d.a});var b=e(191);e.d(n,"k",function(){return b.a});var v=e(192);e.d(n,"l",function(){return v.a});var p=e(193);e.d(n,"m",function(){return p.a});var g=e(194);e.d(n,"n",function(){return g.a});var _=e(102);e.d(n,"o",function(){return _.a});var y=e(94);e.d(n,"p",function(){return y.a});var m=e(195);e.d(n,"q",function(){return m.a});var O=e(48);e.d(n,"r",function(){return O.a});var j=e(99);e.d(n,"s",function(){return j.a});var x=e(196);e.d(n,"t",function(){return x.a});var w=e(197);e.d(n,"u",function(){return w.a});var M=e(198);e.d(n,"v",function(){return M.a});var k=e(100);e.d(n,"B",function(){return k.a}),e.d(n,"z",function(){return k.b}),e.d(n,"A",function(){return k.c});var T=e(103);e.d(n,"C",function(){return T.a});var N=e(96);e.d(n,"D",function(){return N.a});var S=e(199);e.d(n,"E",function(){return S.a})},function(t,n,e){"use strict";function r(t,n){this._groups=t,this._parents=n}function i(){return new r([[document.documentElement]],P)}e.d(n,"c",function(){return P}),n.a=r;var u=e(211),c=e(212),o=e(213),a=e(214),f=e(106),s=e(216),l=e(217),h=e(218),d=e(219),b=e(220),v=e(221),p=e(222),g=e(223),_=e(224),y=e(225),m=e(226),O=e(108),j=e(227),x=e(228),w=e(229),M=e(230),k=e(231),T=e(232),N=e(233),S=e(234),A=e(235),E=e(236),C=e(54),z=e(237),P=[null];r.prototype=i.prototype={constructor:r,select:u.a,selectAll:c.a,filter:o.a,data:a.a,enter:f.b,exit:s.a,merge:l.a,order:h.a,sort:d.a,call:b.a,nodes:v.a,node:p.a,size:g.a,empty:_.a,each:y.a,attr:m.a,style:O.a,property:j.a,classed:x.a,text:w.a,html:M.a,raise:k.a,lower:T.a,append:N.a,insert:S.a,remove:A.a,datum:E.a,on:C.b,dispatch:z.a},n.b=i},function(t,n,e){"use strict";var r=e(58);e.d(n,"a",function(){return r.a});var i=e(115);e.d(n,"b",function(){return i.a});var u=e(61);e.d(n,"c",function(){return u.b});var c=e(113);e.d(n,"d",function(){return c.a});var o=e(116);e.d(n,"g",function(){return o.a});var a=e(33);e.d(n,"m",function(){return a.a});var f=e(117);e.d(n,"n",function(){return f.a});var s=e(245);e.d(n,"r",function(){return s.a});var l=e(118);e.d(n,"s",function(){return l.a});var h=e(246);e.d(n,"t",function(){return h.a}),e.d(n,"u",function(){return h.b});var d=e(249);e.d(n,"v",function(){return d.a});var b=e(112);e.d(n,"o",function(){return b.a}),e.d(n,"p",function(){return b.b}),e.d(n,"q",function(){return b.c});var v=e(250);e.d(n,"j",function(){return v.a}),e.d(n,"k",function(){return v.b});var p=e(251);e.d(n,"l",function(){return p.a});var g=e(252);e.d(n,"h",function(){return g.a}),e.d(n,"i",function(){return g.b});var _=e(253);e.d(n,"e",function(){return _.b}),e.d(n,"f",function(){return _.a});var y=e(254);e.d(n,"w",function(){return y.a})},function(t,n,e){"use strict";function r(t,n,e){function r(d){var v,p,g,_;if(e.state!==f)return c();for(v in a)if((_=a[v]).name===e.name){if(_.state===l)return Object(u.c)(r);_.state===h?(_.state=b,_.timer.stop(),_.on.call("interrupt",t,t.__data__,_.index,_.group),delete a[v]):+v<n&&(_.state=b,_.timer.stop(),delete a[v])}if(Object(u.c)(function(){e.state===l&&(e.state=h,e.timer.restart(i,e.delay,e.time),i(d))}),e.state=s,e.on.call("start",t,t.__data__,e.index,e.group),e.state===s){for(e.state=l,o=new Array(g=e.tween.length),v=0,p=-1;v<g;++v)(_=e.tween[v].value.call(t,t.__data__,e.index,e.group))&&(o[++p]=_);o.length=p+1}}function i(n){for(var r=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(c),e.state=d,1),i=-1,u=o.length;++i<u;)o[i].call(null,r);e.state===d&&(e.on.call("end",t,t.__data__,e.index,e.group),c())}function c(){e.state=b,e.timer.stop(),delete a[n];for(var r in a)return;delete t.__transition}var o,a=t.__transition;a[n]=e,e.timer=Object(u.d)(function(t){e.state=f,e.timer.restart(r,e.delay,e.time),e.delay<=t&&r(t-e.delay)},0,e.time)}e.d(n,"c",function(){return f}),e.d(n,"d",function(){return s}),e.d(n,"b",function(){return d}),e.d(n,"a",function(){return b}),n.g=function(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>a)throw new Error("too late");return e},n.h=function(t,n){var e=t.__transition;if(!e||!(e=e[n])||e.state>s)throw new Error("too late");return e},n.f=function(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("too late");return e};var i=e(12),u=e(34),c=Object(i.a)("start","end","interrupt"),o=[],a=0,f=1,s=2,l=3,h=4,d=5,b=6;n.e=function(t,n,e,i,u,f){var s=t.__transition;if(s){if(e in s)return}else t.__transition={};r(t,e,{name:n,index:i,group:u,on:c,tween:o,time:f.time,delay:f.delay,duration:f.duration,ease:f.ease,timer:null,state:a})}},function(t,n,e){"use strict";var r=e(59);e.d(n,"a",function(){return r.e}),e.d(n,"f",function(){return r.g}),e.d(n,"d",function(){return r.f});var i=e(243);e.d(n,"e",function(){return i.a}),e.d(n,"c",function(){return i.b});var u=e(244);e.d(n,"b",function(){return u.a})},function(t,n,e){"use strict";function r(t){return Object(h.b)({point:function(n,e){var r=t(n,e);return this.stream.point(r[0],r[1])}})}function i(t){function n(t){return t=O(t[0]*s.r,t[1]*s.r),[t[0]*T+_,y-t[1]*T]}function e(t){return(t=O.invert((t[0]-_)/T,(y-t[1])/T))&&[t[0]*s.h,t[1]*s.h]}function i(t,n){return t=g(t,n),[t[0]*T+_,y-t[1]*T]}function h(){O=Object(a.a)(m=Object(l.b)(C,z,P),g);var t=g(A,E);return _=N-t[0]*T,y=S+t[1]*T,p()}function p(){return M=k=null,n}var g,_,y,m,O,j,x,w,M,k,T=150,N=480,S=250,A=0,E=0,C=0,z=0,P=0,q=null,R=u.a,L=null,D=f.a,U=.5,F=Object(b.a)(i,U);return n.stream=function(t){return M&&k===t?M:M=v(r(m)(R(F(D(k=t)))))},n.preclip=function(t){return arguments.length?(R=t,q=void 0,p()):R},n.postclip=function(t){return arguments.length?(D=t,L=j=x=w=null,p()):D},n.clipAngle=function(t){return arguments.length?(R=+t?Object(c.a)(q=t*s.r):(q=null,u.a),p()):q*s.h},n.clipExtent=function(t){return arguments.length?(D=null==t?(L=j=x=w=null,f.a):Object(o.a)(L=+t[0][0],j=+t[0][1],x=+t[1][0],w=+t[1][1]),p()):null==L?null:[[L,j],[x,w]]},n.scale=function(t){return arguments.length?(T=+t,h()):T},n.translate=function(t){return arguments.length?(N=+t[0],S=+t[1],h()):[N,S]},n.center=function(t){return arguments.length?(A=t[0]%360*s.r,E=t[1]%360*s.r,h()):[A*s.h,E*s.h]},n.rotate=function(t){return arguments.length?(C=t[0]%360*s.r,z=t[1]%360*s.r,P=t.length>2?t[2]%360*s.r:0,h()):[C*s.h,z*s.h,P*s.h]},n.precision=function(t){return arguments.length?(F=Object(b.a)(i,U=t*t),p()):Object(s.u)(U)},n.fitExtent=function(t,e){return Object(d.a)(n,t,e)},n.fitSize=function(t,e){return Object(d.b)(n,t,e)},function(){return g=t.apply(this,arguments),n.invert=g.invert&&e,h()}}n.a=function(t){return i(function(){return t})()},n.b=i;var u=e(131),c=e(137),o=e(38),a=e(130),f=e(72),s=e(0),l=e(37),h=e(39),d=e(75),b=e(348),v=Object(h.b)({point:function(t,n){this.stream.point(t*s.r,n*s.r)}})},function(t,n,e){"use strict";e.d(n,"d",function(){return r}),e.d(n,"c",function(){return i}),e.d(n,"b",function(){return u}),e.d(n,"a",function(){return c}),e.d(n,"e",function(){return o});var r=1e3,i=6e4,u=36e5,c=864e5,o=6048e5},function(t,n,e){"use strict";function r(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function i(t){return Object(u.k)().transition(t)}n.a=r,n.b=i,n.c=function(){return++x};var u=e(1),c=e(260),o=e(261),a=e(262),f=e(263),s=e(264),l=e(265),h=e(266),d=e(267),b=e(268),v=e(269),p=e(270),g=e(271),_=e(272),y=e(273),m=e(274),O=e(275),j=e(35),x=0,w=u.k.prototype;r.prototype=i.prototype={constructor:r,select:v.a,selectAll:p.a,filter:l.a,merge:h.a,selection:g.a,transition:O.a,call:w.call,nodes:w.nodes,node:w.node,size:w.size,empty:w.empty,each:w.each,on:d.a,attr:c.a,attrTween:o.a,style:_.a,styleTween:y.a,text:m.a,remove:b.a,tween:j.a,delay:a.a,duration:f.a,ease:s.a}},function(t,n,e){"use strict";n.a=function(){}},function(t,n,e){"use strict";var r=e(206);e.d(n,"a",function(){return r.a})},function(t,n,e){"use strict";var r=e(295);e.d(n,"a",function(){return r.a})},function(t,n,e){"use strict";function r(t,n){t&&o.hasOwnProperty(t.type)&&o[t.type](t,n)}function i(t,n,e){var r,i=-1,u=t.length-e;for(n.lineStart();++i<u;)r=t[i],n.point(r[0],r[1],r[2]);n.lineEnd()}function u(t,n){var e=-1,r=t.length;for(n.polygonStart();++e<r;)i(t[e],n,1);n.polygonEnd()}var c={Feature:function(t,n){r(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,i=-1,u=e.length;++i<u;)r(e[i].geometry,n)}},o={Sphere:function(t,n){n.sphere()},Point:function(t,n){t=t.coordinates,n.point(t[0],t[1],t[2])},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)t=e[r],n.point(t[0],t[1],t[2])},LineString:function(t,n){i(t.coordinates,n,0)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,u=e.length;++r<u;)i(e[r],n,0)},Polygon:function(t,n){u(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)u(e[r],n)},GeometryCollection:function(t,n){for(var e=t.geometries,i=-1,u=e.length;++i<u;)r(e[i],n)}};n.a=function(t,n){t&&c.hasOwnProperty(t.type)?c[t.type](t,n):r(t,n)}},function(t,n,e){"use strict";e.d(n,"a",function(){return i}),e.d(n,"b",function(){return u});var r=Array.prototype,i=r.map,u=r.slice},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";n.a=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";function r(){this.reset()}function i(t,n,e){var r=t.s=n+e,i=r-n,u=r-i;t.t=n-u+(e-i)}n.a=function(){return new r},r.prototype={constructor:r,reset:function(){this.s=this.t=0},add:function(t){i(u,t,this.t),i(this,u.s,this.s),this.s?this.t+=u.t:this.s=u.t},valueOf:function(){return this.s}};var u=new r},function(t,n,e){"use strict";n.a=function(){return Math.random()}},function(t,n,e){"use strict";n.a=function(t){return null===t?NaN:+t}},function(t,n,e){"use strict";function r(t,n){return function(e){return t+e*n}}function i(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}function u(t,n){var e=n-t;return e?r(t,e):Object(c.a)(isNaN(t)?n:t)}n.c=function(t,n){var e=n-t;return e?r(t,e>180||e<-180?e-360*Math.round(e/360):e):Object(c.a)(isNaN(t)?n:t)},n.b=function(t){return 1==(t=+t)?u:function(n,e){return e-n?i(n,e,t):Object(c.a)(isNaN(n)?e:n)}},n.a=u;var c=e(114)},function(t,n,e){"use strict";var r=e(296);e.d(n,"d",function(){return r.a});var i=e(297);e.d(n,"e",function(){return i.a});var u=e(64);e.d(n,"c",function(){return u.a});var c=e(298);e.d(n,"b",function(){return c.a});var o=e(299);e.d(n,"f",function(){return o.a});var a=e(300);e.d(n,"a",function(){return a.a})},function(t,n,e){"use strict";n.g=function(t){return[Object(r.e)(t[1],t[0]),Object(r.c)(t[2])]},n.a=function(t){var n=t[0],e=t[1],i=Object(r.g)(e);return[i*Object(r.g)(n),i*Object(r.t)(n),Object(r.t)(e)]},n.d=function(t,n){return t[0]*n[0]+t[1]*n[1]+t[2]*n[2]},n.c=function(t,n){return[t[1]*n[2]-t[2]*n[1],t[2]*n[0]-t[0]*n[2],t[0]*n[1]-t[1]*n[0]]},n.b=function(t,n){t[0]+=n[0],t[1]+=n[1],t[2]+=n[2]},n.f=function(t,n){return[t[0]*n,t[1]*n,t[2]*n]},n.e=function(t){var n=Object(r.u)(t[0]*t[0]+t[1]*t[1]+t[2]*t[2]);t[0]/=n,t[1]/=n,t[2]/=n};var r=e(0)},function(t,n,e){"use strict";n.b=function(t){return function(n,e){var i=Object(r.g)(n),u=Object(r.g)(e),c=t(i*u);return[c*u*Object(r.t)(n),c*Object(r.t)(e)]}},n.a=function(t){return function(n,e){var i=Object(r.u)(n*n+e*e),u=t(i),c=Object(r.t)(u),o=Object(r.g)(u);return[Object(r.e)(n*c,i*o),Object(r.c)(i&&e*c/i)]}};var r=e(0)},function(t,n,e){"use strict";n.a=function(t,n,e,r,i){for(var u,c=t.children,o=-1,a=c.length,f=t.value&&(r-n)/t.value;++o<a;)(u=c[o]).y0=e,u.y1=i,u.x0=n,u.x1=n+=u.value*f}},function(t,n,e){"use strict";function r(t){var n=t.domain;return t.ticks=function(t){var e=n();return Object(u.B)(e[0],e[e.length-1],null==t?10:t)},t.tickFormat=function(t,e){return Object(a.a)(n(),t,e)},t.nice=function(e){null==e&&(e=10);var r,i=n(),c=0,o=i.length-1,a=i[c],f=i[o];return f<a&&(r=a,a=f,f=r,r=c,c=o,o=r),(r=Object(u.z)(a,f,e))>0?(a=Math.floor(a/r)*r,f=Math.ceil(f/r)*r,r=Object(u.z)(a,f,e)):r<0&&(a=Math.ceil(a*r)/r,f=Math.floor(f*r)/r,r=Object(u.z)(a,f,e)),r>0?(i[c]=Math.floor(a/r)*r,i[o]=Math.ceil(f/r)*r,n(i)):r<0&&(i[c]=Math.ceil(a*r)/r,i[o]=Math.floor(f*r)/r,n(i)),t},t}function i(){var t=Object(o.b)(o.c,c.m);return t.copy=function(){return Object(o.a)(t,i())},r(t)}n.b=r,n.a=i;var u=e(3),c=e(5),o=e(42),a=e(408)},function(t,n,e){"use strict";n.a=function(t){return t.match(/.{6}/g).map(function(t){return"#"+t})}},function(t,n,e){"use strict";e.d(n,"a",function(){return r}),e.d(n,"d",function(){return i}),e.d(n,"e",function(){return u}),e.d(n,"h",function(){return c}),e.d(n,"i",function(){return o}),e.d(n,"k",function(){return a}),e.d(n,"l",function(){return f}),e.d(n,"f",function(){return s}),e.d(n,"j",function(){return l}),e.d(n,"g",function(){return h}),e.d(n,"m",function(){return d}),n.b=function(t){return t>1?0:t<-1?l:Math.acos(t)},n.c=function(t){return t>=1?h:t<=-1?-h:Math.asin(t)};var r=Math.abs,i=Math.atan2,u=Math.cos,c=Math.max,o=Math.min,a=Math.sin,f=Math.sqrt,s=1e-12,l=Math.PI,h=l/2,d=2*l},function(t,n,e){"use strict";n.a=function(t,n){if((i=t.length)>1)for(var e,r,i,u=1,c=t[n[0]],o=c.length;u<i;++u)for(r=c,c=t[n[u]],e=0;e<o;++e)c[e][1]+=c[e][0]=isNaN(r[e][1])?r[e][0]:r[e][1]}},function(t,n,e){"use strict";n.a=function(t){for(var n=t.length,e=new Array(n);--n>=0;)e[n]=n;return e}},function(t,n,e){"use strict";function r(t,n,e){return(t[0]-e[0])*(n[1]-t[1])-(t[0]-n[0])*(e[1]-t[1])}function i(t,n){return n[1]-t[1]||n[0]-t[0]}function u(t,n){var e,r,u,v=t.sort(i).pop();for(f=[],o=new Array(t.length),c=new b.b,a=new b.b;;)if(u=h.c,v&&(!u||v[1]<u.y||v[1]===u.y&&v[0]<u.x))v[0]===e&&v[1]===r||(Object(s.a)(v),e=v[0],r=v[1]),v=t.pop();else{if(!u)break;Object(s.b)(u.arc)}if(Object(l.d)(),n){var p=+n[0][0],g=+n[0][1],_=+n[1][0],y=+n[1][1];Object(d.a)(p,g,_,y),Object(l.b)(p,g,_,y)}this.edges=f,this.cells=o,c=a=f=o=null}e.d(n,"f",function(){return v}),e.d(n,"g",function(){return p}),e.d(n,"a",function(){return c}),e.d(n,"b",function(){return o}),e.d(n,"c",function(){return a}),e.d(n,"e",function(){return f}),n.d=u;var c,o,a,f,s=e(467),l=e(170),h=e(171),d=e(89),b=e(88),v=1e-6,p=1e-12;u.prototype={constructor:u,polygons:function(){var t=this.edges;return this.cells.map(function(n){var e=n.halfedges.map(function(e){return Object(l.a)(n,t[e])});return e.data=n.site.data,e})},triangles:function(){var t=[],n=this.edges;return this.cells.forEach(function(e,i){if(c=(u=e.halfedges).length)for(var u,c,o,a=e.site,f=-1,s=n[u[c-1]],l=s.left===a?s.right:s.left;++f<c;)o=l,l=(s=n[u[f]]).left===a?s.right:s.left,o&&l&&i<o.index&&i<l.index&&r(a,o,l)<0&&t.push([a.data,o.data,l.data])}),t},links:function(){return this.edges.filter(function(t){return t.right}).map(function(t){return{source:t.left.data,target:t.right.data}})},find:function(t,n,e){for(var r,i,u=this,c=u._found||0,o=u.cells.length;!(i=u.cells[c]);)if(++c>=o)return null;var a=t-i.site[0],f=n-i.site[1],s=a*a+f*f;do{i=u.cells[r=c],c=null,i.halfedges.forEach(function(e){var r=u.edges[e],o=r.left;if(o!==i.site&&o||(o=r.right)){var a=t-o[0],f=n-o[1],l=a*a+f*f;l<s&&(s=l,c=o.index)}})}while(null!==c);return u._found=r,null==e||s<=e*e?i.site:null}}},function(t,n,e){"use strict";n.a=function(t,n){return t=+t,n-=t,function(e){return t+n*e}}},function(t,n,e){"use strict";var r=e(63);e.d(n,"b",function(){return r.b}),e.d(n,"d",function(){return r.c}),e.d(n,"e",function(){return r.d});var i=e(257);e.d(n,"c",function(){return i.a});var u=e(258);e.d(n,"a",function(){return u.a})},function(t,n,e){"use strict";function r(t,n){var e,r;return function(){var i=Object(u.h)(this,t),c=i.tween;if(c!==e)for(var o=0,a=(r=e=c).length;o<a;++o)if(r[o].name===n){(r=r.slice()).splice(o,1);break}i.tween=r}}function i(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var c=Object(u.h)(this,t),o=c.tween;if(o!==r){i=(r=o).slice();for(var a={name:n,value:e},f=0,s=i.length;f<s;++f)if(i[f].name===n){i[f]=a;break}f===s&&i.push(a)}c.tween=i}}n.b=function(t,n,e){var r=t._id;return t.each(function(){var t=Object(u.h)(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return Object(u.f)(t,r).value[n]}};var u=e(6);n.a=function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var c,o=Object(u.f)(this.node(),e).tween,a=0,f=o.length;a<f;++a)if((c=o[a]).name===t)return c.value;return null}return this.each((null==n?r:i)(e,t,n))}},function(t,n,e){"use strict";var r=e(71);n.a=function(t){return(t=Object(r.a)(Math.abs(t)))?t[1]:NaN}},function(t,n,e){"use strict";function r(t,n){return[t>f.o?t-f.w:t<-f.o?t+f.w:t,n]}function i(t,n,e){return(t%=f.w)?n||e?Object(a.a)(c(t),o(n,e)):c(t):n||e?o(n,e):r}function u(t){return function(n,e){return n+=t,[n>f.o?n-f.w:n<-f.o?n+f.w:n,e]}}function c(t){var n=u(t);return n.invert=u(-t),n}function o(t,n){function e(t,n){var e=Object(f.g)(n),o=Object(f.g)(t)*e,a=Object(f.t)(t)*e,s=Object(f.t)(n),l=s*r+o*i;return[Object(f.e)(a*u-l*c,o*r-s*i),Object(f.c)(l*u+a*c)]}var r=Object(f.g)(t),i=Object(f.t)(t),u=Object(f.g)(n),c=Object(f.t)(n);return e.invert=function(t,n){var e=Object(f.g)(n),o=Object(f.g)(t)*e,a=Object(f.t)(t)*e,s=Object(f.t)(n),l=s*u-a*c;return[Object(f.e)(a*u+s*c,o*r+l*i),Object(f.c)(l*r-o*i)]},e}n.b=i;var a=e(130),f=e(0);r.invert=r,n.a=function(t){function n(n){return n=t(n[0]*f.r,n[1]*f.r),n[0]*=f.h,n[1]*=f.h,n}return t=i(t[0]*f.r,t[1]*f.r,t.length>2?t[2]*f.r:0),n.invert=function(n){return n=t.invert(n[0]*f.r,n[1]*f.r),n[0]*=f.h,n[1]*=f.h,n},n}},function(t,n,e){"use strict";n.a=function(t,n,e,s){function l(r,i){return t<=r&&r<=e&&n<=i&&i<=s}function h(r,i,u,c){var o=0,a=0;if(null==r||(o=d(r,u))!==(a=d(i,u))||v(r,i)<0^u>0)do{c.point(0===o||3===o?t:e,o>1?s:n)}while((o=(o+u+4)%4)!==a);else c.point(i[0],i[1])}function d(i,u){return Object(r.a)(i[0]-t)<r.i?u>0?0:3:Object(r.a)(i[0]-e)<r.i?u>0?2:1:Object(r.a)(i[1]-n)<r.i?u>0?1:0:u>0?3:2}function b(t,n){return v(t.x,n.x)}function v(t,n){var e=d(t,1),r=d(n,1);return e!==r?e-r:0===e?n[1]-t[1]:1===e?t[0]-n[0]:2===e?t[1]-n[1]:n[0]-t[0]}return function(r){function d(t,n){l(t,n)&&N.point(t,n)}function v(){for(var n=0,e=0,r=_.length;e<r;++e)for(var i,u,c=_[e],o=1,a=c.length,f=c[0],l=f[0],h=f[1];o<a;++o)i=l,u=h,l=(f=c[o])[0],h=f[1],u<=s?h>s&&(l-i)*(s-u)>(h-u)*(t-i)&&++n:h<=s&&(l-i)*(s-u)<(h-u)*(t-i)&&--n;return n}function p(r,i){var c=l(r,i);if(_&&y.push([r,i]),k)m=r,O=i,j=c,k=!1,c&&(N.lineStart(),N.point(r,i));else if(c&&M)N.point(r,i);else{var o=[x=Math.max(f,Math.min(a,x)),w=Math.max(f,Math.min(a,w))],h=[r=Math.max(f,Math.min(a,r)),i=Math.max(f,Math.min(a,i))];Object(u.a)(o,h,t,n,e,s)?(M||(N.lineStart(),N.point(o[0],o[1])),N.point(h[0],h[1]),c||N.lineEnd(),T=!1):c&&(N.lineStart(),N.point(r,i),T=!1)}x=r,w=i,M=c}var g,_,y,m,O,j,x,w,M,k,T,N=r,S=Object(i.a)(),A={point:d,lineStart:function(){A.point=p,_&&_.push(y=[]),k=!0,M=!1,x=w=NaN},lineEnd:function(){g&&(p(m,O),j&&M&&S.rejoin(),g.push(S.result())),A.point=d,M&&N.lineEnd()},polygonStart:function(){N=S,g=[],_=[],T=!0},polygonEnd:function(){var t=v(),n=T&&t,e=(g=Object(o.n)(g)).length;(n||e)&&(r.polygonStart(),n&&(r.lineStart(),h(null,null,1,r),r.lineEnd()),e&&Object(c.a)(g,b,t,h,r),r.polygonEnd()),N=r,g=_=y=null}};return A}};var r=e(0),i=e(133),u=e(338),c=e(134),o=e(3),a=1e9,f=-a},function(t,n,e){"use strict";function r(t){return function(n){var e=new i;for(var r in t)e[r]=t[r];return e.stream=n,e}}function i(){}n.b=r,n.a=function(t){return{stream:r(t)}},i.prototype={constructor:i,point:function(t,n){this.stream.point(t,n)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}}},function(t,n,e){"use strict";n.a=function(t,n,e,r,i){for(var u,c=t.children,o=-1,a=c.length,f=t.value&&(i-e)/t.value;++o<a;)(u=c[o]).x0=n,u.x1=r,u.y0=e,u.y1=e+=u.value*f}},function(t,n,e){"use strict";var r=e(80);n.a=function(t,n){return function(e,i){var u=Object(r.a)(e).mimeType(t).response(n);if(null!=i){if("function"!=typeof i)throw new Error("invalid callback: "+i);return u.get(i)}return u}}},function(t,n,e){"use strict";function r(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:Object(l.a)(n)}function i(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}function u(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}function c(t,n,e,r){var i=t[0],u=t[1],c=n[0],o=n[1];return u<i?(i=e(u,i),c=r(o,c)):(i=e(i,u),c=r(c,o)),function(t){return c(i(t))}}function o(t,n,e,r){var i=Math.min(t.length,n.length)-1,u=new Array(i),c=new Array(i),o=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++o<i;)u[o]=e(t[o],t[o+1]),c[o]=r(n[o],n[o+1]);return function(n){var e=Object(a.b)(t,n,1,i)-1;return c[e](u[e](n))}}n.c=r,n.a=function(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())},n.b=function(t,n){function e(){return l=Math.min(p.length,g.length)>2?o:c,b=v=null,a}function a(n){return(b||(b=l(p,g,y?i(t):t,_)))(+n)}var l,b,v,p=d,g=d,_=f.a,y=!1;return a.invert=function(t){return(v||(v=l(g,p,r,y?u(n):n)))(+t)},a.domain=function(t){return arguments.length?(p=s.a.call(t,h.a),e()):p.slice()},a.range=function(t){return arguments.length?(g=s.b.call(t),e()):g.slice()},a.rangeRound=function(t){return g=s.b.call(t),_=f.r,e()},a.clamp=function(t){return arguments.length?(y=!!t,e()):y},a.interpolate=function(t){return arguments.length?(_=t,e()):_},e()};var a=e(3),f=e(5),s=e(15),l=e(81),h=e(151),d=[0,1]},function(t,n,e){"use strict";var r=e(2);e.d(n,"g",function(){return r.a});var i=e(414);e.d(n,"h",function(){return i.a}),e.d(n,"i",function(){return i.b}),e.d(n,"L",function(){return i.a}),e.d(n,"M",function(){return i.b});var u=e(415);e.d(n,"r",function(){return u.a}),e.d(n,"s",function(){return u.b}),e.d(n,"V",function(){return u.a}),e.d(n,"W",function(){return u.b});var c=e(416);e.d(n,"j",function(){return c.a}),e.d(n,"k",function(){return c.b});var o=e(417);e.d(n,"e",function(){return o.a}),e.d(n,"f",function(){return o.b});var a=e(418);e.d(n,"a",function(){return a.b}),e.d(n,"b",function(){return a.a});var f=e(419);e.d(n,"B",function(){return f.g}),e.d(n,"C",function(){return f.h}),e.d(n,"t",function(){return f.g}),e.d(n,"u",function(){return f.h}),e.d(n,"l",function(){return f.c}),e.d(n,"m",function(){return f.d}),e.d(n,"x",function(){return f.k}),e.d(n,"y",function(){return f.l}),e.d(n,"z",function(){return f.m}),e.d(n,"A",function(){return f.n}),e.d(n,"v",function(){return f.i}),e.d(n,"w",function(){return f.j}),e.d(n,"c",function(){return f.a}),e.d(n,"d",function(){return f.b}),e.d(n,"p",function(){return f.e}),e.d(n,"q",function(){return f.f});var s=e(420);e.d(n,"n",function(){return s.a}),e.d(n,"o",function(){return s.b});var l=e(421);e.d(n,"D",function(){return l.a}),e.d(n,"E",function(){return l.b});var h=e(422);e.d(n,"N",function(){return h.a}),e.d(n,"O",function(){return h.b});var d=e(423);e.d(n,"J",function(){return d.a}),e.d(n,"K",function(){return d.b});var b=e(424);e.d(n,"F",function(){return b.a}),e.d(n,"G",function(){return b.b});var v=e(425);e.d(n,"_5",function(){return v.g}),e.d(n,"_6",function(){return v.h}),e.d(n,"X",function(){return v.g}),e.d(n,"Y",function(){return v.h}),e.d(n,"P",function(){return v.c}),e.d(n,"Q",function(){return v.d}),e.d(n,"_1",function(){return v.k}),e.d(n,"_2",function(){return v.l}),e.d(n,"_3",function(){return v.m}),e.d(n,"_4",function(){return v.n}),e.d(n,"Z",function(){return v.i}),e.d(n,"_0",function(){return v.j}),e.d(n,"H",function(){return v.a}),e.d(n,"I",function(){return v.b}),e.d(n,"T",function(){return v.e}),e.d(n,"U",function(){return v.f});var p=e(426);e.d(n,"R",function(){return p.a}),e.d(n,"S",function(){return p.b});var g=e(427);e.d(n,"_7",function(){return g.a}),e.d(n,"_8",function(){return g.b})},function(t,n,e){"use strict";function r(t){this._context=t}r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:this._context.lineTo(t,n)}}},n.a=function(t){return new r(t)}},function(t,n,e){"use strict";n.a=function(){}},function(t,n,e){"use strict";function r(t,n,e){t._context.bezierCurveTo((2*t._x0+t._x1)/3,(2*t._y0+t._y1)/3,(t._x0+2*t._x1)/3,(t._y0+2*t._y1)/3,(t._x0+4*t._x1+n)/6,(t._y0+4*t._y1+e)/6)}function i(t){this._context=t}n.c=r,n.a=i,i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){switch(this._point){case 3:r(this,this._x1,this._y1);case 2:this._context.lineTo(this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,this._context.lineTo((5*this._x0+this._x1)/6,(5*this._y0+this._y1)/6);default:r(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n.b=function(t){return new i(t)}},function(t,n,e){"use strict";function r(t,n,e){t._context.bezierCurveTo(t._x1+t._k*(t._x2-t._x0),t._y1+t._k*(t._y2-t._y0),t._x2+t._k*(t._x1-n),t._y2+t._k*(t._y1-e),t._x2,t._y2)}function i(t,n){this._context=t,this._k=(1-n)/6}n.c=r,n.a=i,i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:r(this,this._x1,this._y1)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2,this._x1=t,this._y1=n;break;case 2:this._point=3;default:r(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.b=function t(n){function e(t){return new i(t,n)}return e.tension=function(n){return t(+n)},e}(0)},function(t,n,e){"use strict";var r=e(21);n.a=function(t,n,e){if(null==e&&(e=r.a),i=t.length){if((n=+n)<=0||i<2)return+e(t[0],0,t);if(n>=1)return+e(t[i-1],i-1,t);var i,u=(i-1)*n,c=Math.floor(u),o=+e(t[c],c,t);return o+(+e(t[c+1],c+1,t)-o)*(u-c)}}},function(t,n,e){"use strict";var r=e(207);e.d(n,"a",function(){return r.a});var i=e(109);e.d(n,"b",function(){return i.a}),e.d(n,"c",function(){return i.b})},function(t,n,e){"use strict";function r(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===c.b&&n.documentElement.namespaceURI===c.b?n.createElement(t):n.createElementNS(e,t)}}function i(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}var u=e(51),c=e(52);n.a=function(t){var n=Object(u.a)(t);return(n.local?i:r)(n)}},function(t,n,e){"use strict";var r=e(52);n.a=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),r.a.hasOwnProperty(n)?{space:r.a[n],local:t}:t}},function(t,n,e){"use strict";e.d(n,"b",function(){return r});var r="http://www.w3.org/1999/xhtml";n.a={svg:"http://www.w3.org/2000/svg",xhtml:r,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"}},function(t,n,e){"use strict";var r=e(54);n.a=function(){for(var t,n=r.c;t=n.sourceEvent;)n=t;return n}},function(t,n,e){"use strict";function r(t,n,e){return t=i(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function i(t,n,e){return function(r){var i=f;f=r;try{t.call(this,this.__data__,n,e)}finally{f=i}}}function u(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}function c(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,u=n.length;r<u;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function o(t,n,e){var u=a.hasOwnProperty(t.type)?r:i;return function(r,i,c){var o,a=this.__on,f=u(n,i,c);if(a)for(var s=0,l=a.length;s<l;++s)if((o=a[s]).type===t.type&&o.name===t.name)return this.removeEventListener(o.type,o.listener,o.capture),this.addEventListener(o.type,o.listener=f,o.capture=e),void(o.value=n);this.addEventListener(t.type,f,e),o={type:t.type,name:t.name,value:n,listener:f,capture:e},a?a.push(o):this.__on=[o]}}e.d(n,"c",function(){return f}),n.a=function(t,n,e,r){var i=f;t.sourceEvent=f,f=t;try{return n.apply(e,r)}finally{f=i}};var a={},f=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(a={mouseenter:"mouseover",mouseleave:"mouseout"})),n.b=function(t,n,e){var r,i,a=u(t+""),f=a.length;if(!(arguments.length<2)){for(s=n?o:c,null==e&&(e=!1),r=0;r<f;++r)this.each(s(a[r],n,e));return this}var s=this.node().__on;if(s)for(var l,h=0,d=s.length;h<d;++h)for(r=0,l=s[h];r<f;++r)if((i=a[r]).type===l.type&&i.name===l.name)return l.value}},function(t,n,e){"use strict";n.a=function(t,n){var e=t.ownerSVGElement||t;if(e.createSVGPoint){var r=e.createSVGPoint();return r.x=n.clientX,r.y=n.clientY,r=r.matrixTransform(t.getScreenCTM().inverse()),[r.x,r.y]}var i=t.getBoundingClientRect();return[n.clientX-i.left-t.clientLeft,n.clientY-i.top-t.clientTop]}},function(t,n,e){"use strict";function r(){}n.a=function(t){return null==t?r:function(){return this.querySelector(t)}}},function(t,n,e){"use strict";n.a=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView}},function(t,n,e){"use strict";var r=e(7),i=e(112),u=e(115),c=e(116),o=e(33),a=e(117),f=e(118),s=e(114);n.a=function(t,n){var e,l=typeof n;return null==n||"boolean"===l?Object(s.a)(n):("number"===l?o.a:"string"===l?(e=Object(r.a)(n))?(n=e,i.a):f.a:n instanceof r.a?i.a:n instanceof Date?c.a:Array.isArray(n)?u.a:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?a.a:o.a)(t,n)}},function(t,n,e){"use strict";function r(){}function i(t){var n;return t=(t+"").trim().toLowerCase(),(n=O.exec(t))?(n=parseInt(n[1],16),new f(n>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1)):(n=j.exec(t))?u(parseInt(n[1],16)):(n=x.exec(t))?new f(n[1],n[2],n[3],1):(n=w.exec(t))?new f(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=M.exec(t))?c(n[1],n[2],n[3],n[4]):(n=k.exec(t))?c(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=T.exec(t))?s(n[1],n[2]/100,n[3]/100,1):(n=N.exec(t))?s(n[1],n[2]/100,n[3]/100,n[4]):S.hasOwnProperty(t)?u(S[t]):"transparent"===t?new f(NaN,NaN,NaN,0):null}function u(t){return new f(t>>16&255,t>>8&255,255&t,1)}function c(t,n,e,r){return r<=0&&(t=n=e=NaN),new f(t,n,e,r)}function o(t){return t instanceof r||(t=i(t)),t?(t=t.rgb(),new f(t.r,t.g,t.b,t.opacity)):new f}function a(t,n,e,r){return 1===arguments.length?o(t):new f(t,n,e,null==r?1:r)}function f(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function s(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new d(t,n,e,r)}function l(t){if(t instanceof d)return new d(t.h,t.s,t.l,t.opacity);if(t instanceof r||(t=i(t)),!t)return new d;if(t instanceof d)return t;var n=(t=t.rgb()).r/255,e=t.g/255,u=t.b/255,c=Math.min(n,e,u),o=Math.max(n,e,u),a=NaN,f=o-c,s=(o+c)/2;return f?(a=n===o?(e-u)/f+6*(e<u):e===o?(u-n)/f+2:(n-e)/f+4,f/=s<.5?o+c:2-o-c,a*=60):f=s>0&&s<1?0:a,new d(a,f,s,t.opacity)}function h(t,n,e,r){return 1===arguments.length?l(t):new d(t,n,e,null==r?1:r)}function d(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function b(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}n.a=r,e.d(n,"d",function(){return p}),e.d(n,"c",function(){return g}),n.e=i,n.h=o,n.g=a,n.b=f,n.f=h;var v=e(60),p=.7,g=1/p,_="\\s*([+-]?\\d+)\\s*",y="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",m="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",O=/^#([0-9a-f]{3})$/,j=/^#([0-9a-f]{6})$/,x=new RegExp("^rgb\\("+[_,_,_]+"\\)$"),w=new RegExp("^rgb\\("+[m,m,m]+"\\)$"),M=new RegExp("^rgba\\("+[_,_,_,y]+"\\)$"),k=new RegExp("^rgba\\("+[m,m,m,y]+"\\)$"),T=new RegExp("^hsl\\("+[y,m,m]+"\\)$"),N=new RegExp("^hsla\\("+[y,m,m,y]+"\\)$"),S={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Object(v.a)(r,i,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),Object(v.a)(f,a,Object(v.b)(r,{brighter:function(t){return t=null==t?g:Math.pow(g,t),new f(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?p:Math.pow(p,t),new f(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Object(v.a)(d,h,Object(v.b)(r,{brighter:function(t){return t=null==t?g:Math.pow(g,t),new d(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?p:Math.pow(p,t),new d(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new f(b(t>=240?t-240:t+120,i,r),b(t,i,r),b(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}))},function(t,n,e){"use strict";n.b=function(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e},n.a=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t}},function(t,n,e){"use strict";function r(t,n,e,r,i){var u=t*t,c=u*t;return((1-3*t+3*u-c)*n+(4-6*u+3*c)*e+(1+3*t+3*u-3*c)*r+c*i)/6}n.a=r,n.b=function(t){var n=t.length-1;return function(e){var i=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),u=t[i],c=t[i+1],o=i>0?t[i-1]:2*u-c,a=i<n-1?t[i+2]:2*c-u;return r((e-i/n)*n,o,u,c,a)}}},function(t,n,e){"use strict";e(255);var r=e(10);e.d(n,"c",function(){return r.b});var i=e(286);e.d(n,"a",function(){return i.a});var u=e(119);e.d(n,"b",function(){return u.a})},function(t,n,e){"use strict";function r(){return y||(j(i),y=O.now()+m)}function i(){y=0}function u(){this._call=this._time=this._next=null}function c(t,n,e){var r=new u;return r.restart(t,n,e),r}function o(){r(),++b;for(var t,n=h;n;)(t=y-n._time)>=0&&n._call.call(null,t),n=n._next;--b}function a(){y=(_=O.now())+m,b=v=0;try{o()}finally{b=0,s(),y=0}}function f(){var t=O.now(),n=t-_;n>g&&(m-=n,_=t)}function s(){for(var t,n,e=h,r=1/0;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:h=n);d=t,l(r)}function l(t){b||(v&&(v=clearTimeout(v)),t-y>24?(t<1/0&&(v=setTimeout(a,t-O.now()-m)),p&&(p=clearInterval(p))):(p||(_=O.now(),p=setInterval(f,g)),b=1,j(a)))}n.b=r,n.a=u,n.c=c,n.d=o;var h,d,b=0,v=0,p=0,g=1e3,_=0,y=0,m=0,O="object"==typeof performance&&performance.now?performance:Date,j="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};u.prototype=c.prototype={constructor:u,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?r():+e)+(null==n?0:+n),this._next||d===this||(d?d._next=this:h=this,d=this),this._call=t,this._time=e,l()},stop:function(){this._call&&(this._call=null,this._time=1/0,l())}}},function(t,n,e){"use strict";function r(){}function i(t,n){var e=new r;if(t instanceof r)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var i,u=-1,c=t.length;if(null==n)for(;++u<c;)e.set(u,t[u]);else for(;++u<c;)e.set(n(i=t[u],u,t),i)}else if(t)for(var o in t)e.set(o,t[o]);return e}e.d(n,"b",function(){return u});var u="$";r.prototype=i.prototype={constructor:r,has:function(t){return u+t in this},get:function(t){return this[u+t]},set:function(t,n){return this[u+t]=n,this},remove:function(t){var n=u+t;return n in this&&delete this[n]},clear:function(){for(var t in this)t[0]===u&&delete this[t]},keys:function(){var t=[];for(var n in this)n[0]===u&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)n[0]===u&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)n[0]===u&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)n[0]===u&&++t;return t},empty:function(){for(var t in this)if(t[0]===u)return!1;return!0},each:function(t){for(var n in this)n[0]===u&&t(this[n],n.slice(1),this)}},n.a=i},function(t,n,e){"use strict";var r=e(66);e.d(n,"e",function(){return r.a});var i=e(301);e.d(n,"c",function(){return i.c}),e.d(n,"d",function(){return i.d}),e.d(n,"a",function(){return i.a}),e.d(n,"b",function(){return i.b});var u=e(302);e.d(n,"h",function(){return u.c}),e.d(n,"i",function(){return u.d}),e.d(n,"f",function(){return u.a}),e.d(n,"g",function(){return u.b})},function(t,n,e){"use strict";function r(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}function i(t,n){var e=r(t);return function(r,i){return n(e(r),i,t)}}function u(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}var c={},o={},a=34,f=10,s=13;n.a=function(t){function n(t,n){function e(){if(b)return o;if(v)return v=!1,c;var n,e,r=l;if(t.charCodeAt(r)===a){for(;l++<u&&t.charCodeAt(l)!==a||t.charCodeAt(++l)===a;);return(n=l)>=u?b=!0:(e=t.charCodeAt(l++))===f?v=!0:e===s&&(v=!0,t.charCodeAt(l)===f&&++l),t.slice(r+1,n-1).replace(/""/g,'"')}for(;l<u;){if((e=t.charCodeAt(n=l++))===f)v=!0;else if(e===s)v=!0,t.charCodeAt(l)===f&&++l;else if(e!==d)continue;return t.slice(r,n)}return b=!0,t.slice(r,u)}var r,i=[],u=t.length,l=0,h=0,b=u<=0,v=!1;for(t.charCodeAt(u-1)===f&&--u,t.charCodeAt(u-1)===s&&--u;(r=e())!==o;){for(var p=[];r!==c&&r!==o;)p.push(r),r=e();n&&null==(p=n(p,h++))||i.push(p)}return i}function e(n){return n.map(l).join(t)}function l(t){return null==t?"":h.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}var h=new RegExp('["'+t+"\n\r]"),d=t.charCodeAt(0);return{parse:function(t,e){var u,c,o=n(t,function(t,n){if(u)return u(t,n-1);c=t,u=e?i(t,e):r(t)});return o.columns=c,o},parseRows:n,format:function(n,e){return null==e&&(e=u(n)),[e.map(l).join(t)].concat(n.map(function(n){return e.map(function(t){return l(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(e).join("\n")}}}},function(t,n,e){"use strict";n.a=function(){return 1e-6*(Math.random()-.5)}},function(t,n,e){"use strict";var r=e(306);e.d(n,"a",function(){return r.a})},function(t,n,e){"use strict";n.a=function(t,n,e,r,i){this.node=t,this.x0=n,this.y0=e,this.x1=r,this.y1=i}},function(t,n,e){"use strict";var r=e(324);e.d(n,"b",function(){return r.a}),e.d(n,"a",function(){return r.b}),e.d(n,"d",function(){return r.c});var i=e(124);e.d(n,"c",function(){return i.a});var u=e(125);e.d(n,"e",function(){return u.a});var c=e(330);e.d(n,"f",function(){return c.a});var o=e(331);e.d(n,"g",function(){return o.a});var a=e(332);e.d(n,"h",function(){return a.a})},function(t,n,e){"use strict";n.a=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]}},function(t,n,e){"use strict";n.a=function(t){return t}},function(t,n,e){"use strict";function r(t,n){function e(t,n){var e=Object(i.u)(o-2*u*Object(i.t)(n))/u;return[e*Object(i.t)(t*=u),a-e*Object(i.g)(t)]}var r=Object(i.t)(t),u=(r+Object(i.t)(n))/2;if(Object(i.a)(u)<i.i)return Object(c.a)(t);var o=1+r*(2*u-r),a=Object(i.u)(o)/u;return e.invert=function(t,n){var e=a-n;return[Object(i.e)(t,Object(i.a)(e))/u*Object(i.s)(e),Object(i.c)((o-(t*t+e*e)*u*u)/(2*u))]},e}n.a=r;var i=e(0),u=e(74),c=e(349);n.b=function(){return Object(u.a)(r).scale(155.424).center([0,33.6442])}},function(t,n,e){"use strict";n.a=function(t){var n=0,e=r.o/3,u=Object(i.b)(t),c=u(n,e);return c.parallels=function(t){return arguments.length?u(n=t[0]*r.r,e=t[1]*r.r):[n*r.h,e*r.h]},c};var r=e(0),i=e(8)},function(t,n,e){"use strict";function r(t,n,e){var r=n[1][0]-n[0][0],c=n[1][1]-n[0][1],o=t.clipExtent&&t.clipExtent();t.scale(150).translate([0,0]),null!=o&&t.clipExtent(null),Object(i.a)(e,t.stream(u.a));var a=u.a.result(),f=Math.min(r/(a[1][0]-a[0][0]),c/(a[1][1]-a[0][1])),s=+n[0][0]+(r-f*(a[1][0]+a[0][0]))/2,l=+n[0][1]+(c-f*(a[1][1]+a[0][1]))/2;return null!=o&&t.clipExtent(o),t.scale(150*f).translate([s,l])}n.a=r,n.b=function(t,n,e){return r(t,[[0,0],n],e)};var i=e(14),u=e(140)},function(t,n,e){"use strict";function r(t,n){return[t,Object(u.n)(Object(u.v)((u.l+n)/2))]}function i(t){function n(){var n=u.o*l(),o=f(Object(c.a)(f.rotate()).invert([0,0]));return d(null==b?[[o[0]-n,o[1]-n],[o[0]+n,o[1]+n]]:t===r?[[Math.max(o[0]-n,b),e],[Math.min(o[0]+n,i),a]]:[[b,Math.max(o[1]-n,e)],[i,Math.min(o[1]+n,a)]])}var e,i,a,f=Object(o.a)(t),s=f.center,l=f.scale,h=f.translate,d=f.clipExtent,b=null;return f.scale=function(t){return arguments.length?(l(t),n()):l()},f.translate=function(t){return arguments.length?(h(t),n()):h()},f.center=function(t){return arguments.length?(s(t),n()):s()},f.clipExtent=function(t){return arguments.length?(null==t?b=e=i=a=null:(b=+t[0][0],e=+t[0][1],i=+t[1][0],a=+t[1][1]),n()):null==b?null:[[b,e],[i,a]]},n()}n.c=r,n.b=i;var u=e(0),c=e(37),o=e(8);r.invert=function(t,n){return[t,2*Object(u.d)(Object(u.k)(n))-u.l]},n.a=function(){return i(r).scale(961/u.w)}},function(t,n,e){"use strict";function r(t,n){var e,r,u,a,f,s=new o(t),l=+t.value&&(s.value=t.value),h=[s];for(null==n&&(n=i);e=h.pop();)if(l&&(e.value=+e.data.value),(u=n(e.data))&&(f=u.length))for(e.children=new Array(f),a=f-1;a>=0;--a)h.push(r=e.children[a]=new o(u[a])),r.parent=e,r.depth=e.depth+1;return s.eachBefore(c)}function i(t){return t.children}function u(t){t.data=t.data.data}function c(t){var n=0;do{t.height=n}while((t=t.parent)&&t.height<++n)}function o(t){this.data=t,this.depth=this.height=0,this.parent=null}n.c=r,n.b=c,n.a=o;var a=e(363),f=e(364),s=e(365),l=e(366),h=e(367),d=e(368),b=e(369),v=e(370),p=e(371),g=e(372),_=e(373);o.prototype=r.prototype={constructor:o,count:a.a,each:f.a,eachAfter:l.a,eachBefore:s.a,sum:h.a,sort:d.a,path:b.a,ancestors:v.a,descendants:p.a,leaves:g.a,links:_.a,copy:function(){return r(this).eachBefore(u)}}},function(t,n,e){"use strict";function r(t){if("function"!=typeof t)throw new Error;return t}n.a=function(t){return null==t?null:r(t)},n.b=r},function(t,n,e){"use strict";function r(t,n,e,r,c,o){for(var a,f,s,l,h,d,b,v,p,g,_,y=[],m=n.children,O=0,j=0,x=m.length,w=n.value;O<x;){s=c-e,l=o-r;do{h=m[j++].value}while(!h&&j<x);for(d=b=h,_=h*h*(g=Math.max(l/s,s/l)/(w*t)),p=Math.max(b/_,_/d);j<x;++j){if(h+=f=m[j].value,f<d&&(d=f),f>b&&(b=f),_=h*h*g,(v=Math.max(b/_,_/d))>p){h-=f;break}p=v}y.push(a={value:h,dice:s<l,children:m.slice(O,j)}),a.dice?Object(i.a)(a,e,r,c,w?r+=l*h/w:o):Object(u.a)(a,e,r,w?e+=s*h/w:c,o),w-=h,O=j}return y}e.d(n,"b",function(){return c}),n.c=r;var i=e(26),u=e(40),c=(1+Math.sqrt(5))/2;n.a=function t(n){function e(t,e,i,u,c){r(n,t,e,i,u,c)}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(c)},function(t,n,e){"use strict";function r(t){return function(n,e){t(null==n?e:null)}}function i(t){var n=t.responseType;return n&&"text"!==n?t.response:t.responseText}var u=e(23),c=e(12);n.a=function(t,n){function e(t){var n,e=d.status;if(!e&&i(d)||e>=200&&e<300||304===e){if(f)try{n=f.call(o,d)}catch(t){return void l.call("error",o,t)}else n=d;l.call("load",o,n)}else l.call("error",o,t)}var o,a,f,s,l=Object(c.a)("beforesend","progress","load","error"),h=Object(u.c)(),d=new XMLHttpRequest,b=null,v=null,p=0;if("undefined"==typeof XDomainRequest||"withCredentials"in d||!/^(http(s)?:)?\/\//.test(t)||(d=new XDomainRequest),"onload"in d?d.onload=d.onerror=d.ontimeout=e:d.onreadystatechange=function(t){d.readyState>3&&e(t)},d.onprogress=function(t){l.call("progress",o,t)},o={header:function(t,n){return t=(t+"").toLowerCase(),arguments.length<2?h.get(t):(null==n?h.remove(t):h.set(t,n+""),o)},mimeType:function(t){return arguments.length?(a=null==t?null:t+"",o):a},responseType:function(t){return arguments.length?(s=t,o):s},timeout:function(t){return arguments.length?(p=+t,o):p},user:function(t){return arguments.length<1?b:(b=null==t?null:t+"",o)},password:function(t){return arguments.length<1?v:(v=null==t?null:t+"",o)},response:function(t){return f=t,o},get:function(t,n){return o.send("GET",t,n)},post:function(t,n){return o.send("POST",t,n)},send:function(n,e,i){return d.open(n,t,!0,b,v),null==a||h.has("accept")||h.set("accept",a+",*/*"),d.setRequestHeader&&h.each(function(t,n){d.setRequestHeader(n,t)}),null!=a&&d.overrideMimeType&&d.overrideMimeType(a),null!=s&&(d.responseType=s),p>0&&(d.timeout=p),null==i&&"function"==typeof e&&(i=e,e=null),null!=i&&1===i.length&&(i=r(i)),null!=i&&o.on("error",i).on("load",function(t){i(null,t)}),l.call("beforesend",o,d),d.send(null==e?null:e),o},abort:function(){return d.abort(),o},on:function(){var t=l.on.apply(l,arguments);return t===l?o:t}},null!=n){if("function"!=typeof n)throw new Error("invalid callback: "+n);return o.get(n)}return o}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";var r=e(83);e.d(n,"d",function(){return r.a}),e.d(n,"c",function(){return r.b}),e.d(n,"f",function(){return r.c}),e.d(n,"g",function(){return r.d}),e.d(n,"h",function(){return r.e});var i=e(154);e.d(n,"e",function(){return i.a});var u=e(155);e.d(n,"a",function(){return u.a});var c=e(428);e.d(n,"b",function(){return c.a})},function(t,n,e){"use strict";function r(t){return i=Object(f.a)(t),u=i.format,c=i.parse,o=i.utcFormat,a=i.utcParse,i}e.d(n,"b",function(){return u}),e.d(n,"c",function(){return c}),e.d(n,"d",function(){return o}),e.d(n,"e",function(){return a}),n.a=r;var i,u,c,o,a,f=e(154);r({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]})},function(t,n,e){"use strict";var r=e(13),i=e(16),u=e(44),c=e(85);n.a=function(){function t(t){var i,u,c,l=t.length,h=!1;for(null==a&&(s=f(c=Object(r.a)())),i=0;i<=l;++i)!(i<l&&o(u=t[i],i,t))===h&&((h=!h)?s.lineStart():s.lineEnd()),h&&s.point(+n(u,i,t),+e(u,i,t));if(c)return s=null,c+""||null}var n=c.a,e=c.b,o=Object(i.a)(!0),a=null,f=u.a,s=null;return t.x=function(e){return arguments.length?(n="function"==typeof e?e:Object(i.a)(+e),t):n},t.y=function(n){return arguments.length?(e="function"==typeof n?n:Object(i.a)(+n),t):e},t.defined=function(n){return arguments.length?(o="function"==typeof n?n:Object(i.a)(!!n),t):o},t.curve=function(n){return arguments.length?(f=n,null!=a&&(s=f(a)),t):f},t.context=function(n){return arguments.length?(null==n?a=s=null:s=f(a=n),t):a},t}},function(t,n,e){"use strict";n.a=function(t){return t[0]},n.b=function(t){return t[1]}},function(t,n,e){"use strict";function r(t,n,e){var r=t._x1,i=t._y1,c=t._x2,o=t._y2;if(t._l01_a>u.f){var a=2*t._l01_2a+3*t._l01_a*t._l12_a+t._l12_2a,f=3*t._l01_a*(t._l01_a+t._l12_a);r=(r*a-t._x0*t._l12_2a+t._x2*t._l01_2a)/f,i=(i*a-t._y0*t._l12_2a+t._y2*t._l01_2a)/f}if(t._l23_a>u.f){var s=2*t._l23_2a+3*t._l23_a*t._l12_a+t._l12_2a,l=3*t._l23_a*(t._l23_a+t._l12_a);c=(c*s+t._x1*t._l23_2a-n*t._l12_2a)/l,o=(o*s+t._y1*t._l23_2a-e*t._l12_2a)/l}t._context.bezierCurveTo(r,i,c,o,t._x2,t._y2)}function i(t,n){this._context=t,this._alpha=n}n.b=r;var u=e(29),c=e(47);i.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x2,this._y2);break;case 3:this.point(this._x2,this._y2)}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,i=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+i*i,this._alpha))}switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3;default:r(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.a=function t(n){function e(t){return n?new i(t,n):new c.a(t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},function(t,n,e){"use strict";function r(t){for(var n,e=0,r=-1,i=t.length;++r<i;)(n=+t[r][1])&&(e+=n);return e}n.b=r;var i=e(31);n.a=function(t){var n=t.map(r);return Object(i.a)(t).sort(function(t,e){return n[t]-n[e]})}},function(t,n,e){"use strict";function r(){this._=null}function i(t,n){var e=n,r=n.R,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.R=r.L,e.R&&(e.R.U=e),r.L=e}function u(t,n){var e=n,r=n.L,i=e.U;i?i.L===e?i.L=r:i.R=r:t._=r,r.U=i,e.U=r,e.L=r.R,e.L&&(e.L.U=e),r.R=e}function c(t){for(;t.L;)t=t.L;return t}n.a=function(t){t.U=t.C=t.L=t.R=t.P=t.N=null},r.prototype={constructor:r,insert:function(t,n){var e,r,o;if(t){if(n.P=t,n.N=t.N,t.N&&(t.N.P=n),t.N=n,t.R){for(t=t.R;t.L;)t=t.L;t.L=n}else t.R=n;e=t}else this._?(t=c(this._),n.P=null,n.N=t,t.P=t.L=n,e=t):(n.P=n.N=null,this._=n,e=null);for(n.L=n.R=null,n.U=e,n.C=!0,t=n;e&&e.C;)e===(r=e.U).L?(o=r.R)&&o.C?(e.C=o.C=!1,r.C=!0,t=r):(t===e.R&&(i(this,e),e=(t=e).U),e.C=!1,r.C=!0,u(this,r)):(o=r.L)&&o.C?(e.C=o.C=!1,r.C=!0,t=r):(t===e.L&&(u(this,e),e=(t=e).U),e.C=!1,r.C=!0,i(this,r)),e=t.U;this._.C=!1},remove:function(t){t.N&&(t.N.P=t.P),t.P&&(t.P.N=t.N),t.N=t.P=null;var n,e,r,o=t.U,a=t.L,f=t.R;if(e=a?f?c(f):a:f,o?o.L===t?o.L=e:o.R=e:this._=e,a&&f?(r=e.C,e.C=t.C,e.L=a,a.U=e,e!==f?(o=e.U,e.U=t.U,t=e.R,o.L=t,e.R=f,f.U=e):(e.U=o,o=e,t=e.R)):(r=t.C,t=e),t&&(t.U=o),!r)if(t&&t.C)t.C=!1;else{do{if(t===this._)break;if(t===o.L){if((n=o.R).C&&(n.C=!1,o.C=!0,i(this,o),n=o.R),n.L&&n.L.C||n.R&&n.R.C){n.R&&n.R.C||(n.L.C=!1,n.C=!0,u(this,n),n=o.R),n.C=o.C,o.C=n.R.C=!1,i(this,o),t=this._;break}}else if((n=o.L).C&&(n.C=!1,o.C=!0,u(this,o),n=o.L),n.L&&n.L.C||n.R&&n.R.C){n.L&&n.L.C||(n.R.C=!1,n.C=!0,i(this,n),n=o.L),n.C=o.C,o.C=n.L.C=!1,u(this,o),t=this._;break}n.C=!0,t=o,o=o.U}while(!t.C);t&&(t.C=!1)}}},n.b=r},function(t,n,e){"use strict";function r(t,n,e,r){t[0]||t[1]?t.left===e?t[1]=r:t[0]=r:(t[0]=r,t.left=n,t.right=e)}function i(t,n,e,r,i){var u,c=t[0],o=t[1],a=c[0],f=c[1],s=0,l=1,h=o[0]-a,d=o[1]-f;if(u=n-a,h||!(u>0)){if(u/=h,h<0){if(u<s)return;u<l&&(l=u)}else if(h>0){if(u>l)return;u>s&&(s=u)}if(u=r-a,h||!(u<0)){if(u/=h,h<0){if(u>l)return;u>s&&(s=u)}else if(h>0){if(u<s)return;u<l&&(l=u)}if(u=e-f,d||!(u>0)){if(u/=d,d<0){if(u<s)return;u<l&&(l=u)}else if(d>0){if(u>l)return;u>s&&(s=u)}if(u=i-f,d||!(u<0)){if(u/=d,d<0){if(u>l)return;u>s&&(s=u)}else if(d>0){if(u<s)return;u<l&&(l=u)}return!(s>0||l<1)||(s>0&&(t[0]=[a+s*h,f+s*d]),l<1&&(t[1]=[a+l*h,f+l*d]),!0)}}}}}function u(t,n,e,r,i){var u=t[1];if(u)return!0;var c,o,a=t[0],f=t.left,s=t.right,l=f[0],h=f[1],d=s[0],b=s[1],v=(l+d)/2,p=(h+b)/2;if(b===h){if(v<n||v>=r)return;if(l>d){if(a){if(a[1]>=i)return}else a=[v,e];u=[v,i]}else{if(a){if(a[1]<e)return}else a=[v,i];u=[v,e]}}else if(c=(l-d)/(b-h),o=p-c*v,c<-1||c>1)if(l>d){if(a){if(a[1]>=i)return}else a=[(e-o)/c,e];u=[(i-o)/c,i]}else{if(a){if(a[1]<e)return}else a=[(i-o)/c,i];u=[(e-o)/c,e]}else if(h<b){if(a){if(a[0]>=r)return}else a=[n,c*n+o];u=[r,c*r+o]}else{if(a){if(a[0]<n)return}else a=[r,c*r+o];u=[n,c*n+o]}return t[0]=a,t[1]=u,!0}n.c=function(t,n,e,i){var u=[null,null],o=c.e.push(u)-1;return u.left=t,u.right=n,e&&r(u,t,n,e),i&&r(u,n,t,i),c.b[t.index].halfedges.push(o),c.b[n.index].halfedges.push(o),u},n.b=function(t,n,e){var r=[n,e];return r.left=t,r},n.d=r,n.a=function(t,n,e,r){for(var o,a=c.e.length;a--;)u(o=c.e[a],t,n,e,r)&&i(o,t,n,e,r)&&(Math.abs(o[0][0]-o[1][0])>c.f||Math.abs(o[0][1]-o[1][1])>c.f)||delete c.e[a]};var c=e(32)},,function(t,n,e){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var r=e(183);e.d(n,"version",function(){return r.a});var i=e(3);e.d(n,"bisect",function(){return i.b}),e.d(n,"bisectRight",function(){return i.d}),e.d(n,"bisectLeft",function(){return i.c}),e.d(n,"ascending",function(){return i.a}),e.d(n,"bisector",function(){return i.e}),e.d(n,"cross",function(){return i.f}),e.d(n,"descending",function(){return i.g}),e.d(n,"deviation",function(){return i.h}),e.d(n,"extent",function(){return i.i}),e.d(n,"histogram",function(){return i.j}),e.d(n,"thresholdFreedmanDiaconis",function(){return i.w}),e.d(n,"thresholdScott",function(){return i.x}),e.d(n,"thresholdSturges",function(){return i.y}),e.d(n,"max",function(){return i.k}),e.d(n,"mean",function(){return i.l}),e.d(n,"median",function(){return i.m}),e.d(n,"merge",function(){return i.n}),e.d(n,"min",function(){return i.o}),e.d(n,"pairs",function(){return i.p}),e.d(n,"permute",function(){return i.q}),e.d(n,"quantile",function(){return i.r}),e.d(n,"range",function(){return i.s}),e.d(n,"scan",function(){return i.t}),e.d(n,"shuffle",function(){return i.u}),e.d(n,"sum",function(){return i.v}),e.d(n,"ticks",function(){return i.B}),e.d(n,"tickIncrement",function(){return i.z}),e.d(n,"tickStep",function(){return i.A}),e.d(n,"transpose",function(){return i.C}),e.d(n,"variance",function(){return i.D}),e.d(n,"zip",function(){return i.E});var u=e(200);e.d(n,"axisTop",function(){return u.d}),e.d(n,"axisRight",function(){return u.c}),e.d(n,"axisBottom",function(){return u.a}),e.d(n,"axisLeft",function(){return u.b});var c=e(204);e.d(n,"brush",function(){return c.a}),e.d(n,"brushX",function(){return c.c}),e.d(n,"brushY",function(){return c.d}),e.d(n,"brushSelection",function(){return c.b});var o=e(290);e.d(n,"chord",function(){return o.a}),e.d(n,"ribbon",function(){return o.b});var a=e(23);e.d(n,"nest",function(){return a.d}),e.d(n,"set",function(){return a.e}),e.d(n,"map",function(){return a.c}),e.d(n,"keys",function(){return a.b}),e.d(n,"values",function(){return a.f}),e.d(n,"entries",function(){return a.a});var f=e(7);e.d(n,"color",function(){return f.a}),e.d(n,"rgb",function(){return f.f}),e.d(n,"hsl",function(){return f.d}),e.d(n,"lab",function(){return f.e}),e.d(n,"hcl",function(){return f.c}),e.d(n,"cubehelix",function(){return f.b});var s=e(12);e.d(n,"dispatch",function(){return s.a});var l=e(49);e.d(n,"drag",function(){return l.a}),e.d(n,"dragDisable",function(){return l.b}),e.d(n,"dragEnable",function(){return l.c});var h=e(65);e.d(n,"dsvFormat",function(){return h.e}),e.d(n,"csvParse",function(){return h.c}),e.d(n,"csvParseRows",function(){return h.d}),e.d(n,"csvFormat",function(){return h.a}),e.d(n,"csvFormatRows",function(){return h.b}),e.d(n,"tsvParse",function(){return h.h}),e.d(n,"tsvParseRows",function(){return h.i}),e.d(n,"tsvFormat",function(){return h.f}),e.d(n,"tsvFormatRows",function(){return h.g});var d=e(121);e.d(n,"easeLinear",function(){return d.y}),e.d(n,"easeQuad",function(){return d.D}),e.d(n,"easeQuadIn",function(){return d.E}),e.d(n,"easeQuadOut",function(){return d.G}),e.d(n,"easeQuadInOut",function(){return d.F}),e.d(n,"easeCubic",function(){return d.m}),e.d(n,"easeCubicIn",function(){return d.n}),e.d(n,"easeCubicOut",function(){return d.p}),e.d(n,"easeCubicInOut",function(){return d.o}),e.d(n,"easePoly",function(){return d.z}),e.d(n,"easePolyIn",function(){return d.A}),e.d(n,"easePolyOut",function(){return d.C}),e.d(n,"easePolyInOut",function(){return d.B}),e.d(n,"easeSin",function(){return d.H}),e.d(n,"easeSinIn",function(){return d.I}),e.d(n,"easeSinOut",function(){return d.K}),e.d(n,"easeSinInOut",function(){return d.J}),e.d(n,"easeExp",function(){return d.u}),e.d(n,"easeExpIn",function(){return d.v}),e.d(n,"easeExpOut",function(){return d.x}),e.d(n,"easeExpInOut",function(){return d.w}),e.d(n,"easeCircle",function(){return d.i}),e.d(n,"easeCircleIn",function(){return d.j}),e.d(n,"easeCircleOut",function(){return d.l}),e.d(n,"easeCircleInOut",function(){return d.k}),e.d(n,"easeBounce",function(){return d.e}),e.d(n,"easeBounceIn",function(){return d.f}),e.d(n,"easeBounceOut",function(){return d.h}),e.d(n,"easeBounceInOut",function(){return d.g}),e.d(n,"easeBack",function(){return d.a}),e.d(n,"easeBackIn",function(){return d.b}),e.d(n,"easeBackOut",function(){return d.d}),e.d(n,"easeBackInOut",function(){return d.c}),e.d(n,"easeElastic",function(){return d.q}),e.d(n,"easeElasticIn",function(){return d.r}),e.d(n,"easeElasticOut",function(){return d.t}),e.d(n,"easeElasticInOut",function(){return d.s});var b=e(303);e.d(n,"forceCenter",function(){return b.a}),e.d(n,"forceCollide",function(){return b.b}),e.d(n,"forceLink",function(){return b.c}),e.d(n,"forceManyBody",function(){return b.d}),e.d(n,"forceRadial",function(){return b.e}),e.d(n,"forceSimulation",function(){return b.f}),e.d(n,"forceX",function(){return b.g}),e.d(n,"forceY",function(){return b.h});var v=e(70);e.d(n,"formatDefaultLocale",function(){return v.b}),e.d(n,"format",function(){return v.a}),e.d(n,"formatPrefix",function(){return v.d}),e.d(n,"formatLocale",function(){return v.c}),e.d(n,"formatSpecifier",function(){return v.e}),e.d(n,"precisionFixed",function(){return v.f}),e.d(n,"precisionPrefix",function(){return v.g}),e.d(n,"precisionRound",function(){return v.h});var p=e(333);e.d(n,"geoArea",function(){return p.c}),e.d(n,"geoBounds",function(){return p.h}),e.d(n,"geoCentroid",function(){return p.i}),e.d(n,"geoCircle",function(){return p.j}),e.d(n,"geoClipAntimeridian",function(){return p.k}),e.d(n,"geoClipCircle",function(){return p.l}),e.d(n,"geoClipExtent",function(){return p.m}),e.d(n,"geoClipRectangle",function(){return p.n}),e.d(n,"geoContains",function(){return p.u}),e.d(n,"geoDistance",function(){return p.v}),e.d(n,"geoGraticule",function(){return p.A}),e.d(n,"geoGraticule10",function(){return p.B}),e.d(n,"geoInterpolate",function(){return p.D}),e.d(n,"geoLength",function(){return p.E}),e.d(n,"geoPath",function(){return p.L}),e.d(n,"geoAlbers",function(){return p.a}),e.d(n,"geoAlbersUsa",function(){return p.b}),e.d(n,"geoAzimuthalEqualArea",function(){return p.d}),e.d(n,"geoAzimuthalEqualAreaRaw",function(){return p.e}),e.d(n,"geoAzimuthalEquidistant",function(){return p.f}),e.d(n,"geoAzimuthalEquidistantRaw",function(){return p.g}),e.d(n,"geoConicConformal",function(){return p.o}),e.d(n,"geoConicConformalRaw",function(){return p.p}),e.d(n,"geoConicEqualArea",function(){return p.q}),e.d(n,"geoConicEqualAreaRaw",function(){return p.r}),e.d(n,"geoConicEquidistant",function(){return p.s}),e.d(n,"geoConicEquidistantRaw",function(){return p.t}),e.d(n,"geoEquirectangular",function(){return p.w}),e.d(n,"geoEquirectangularRaw",function(){return p.x}),e.d(n,"geoGnomonic",function(){return p.y}),e.d(n,"geoGnomonicRaw",function(){return p.z}),e.d(n,"geoIdentity",function(){return p.C}),e.d(n,"geoProjection",function(){return p.M}),e.d(n,"geoProjectionMutator",function(){return p.N}),e.d(n,"geoMercator",function(){return p.F}),e.d(n,"geoMercatorRaw",function(){return p.G}),e.d(n,"geoNaturalEarth1",function(){return p.H}),e.d(n,"geoNaturalEarth1Raw",function(){return p.I}),e.d(n,"geoOrthographic",function(){return p.J}),e.d(n,"geoOrthographicRaw",function(){return p.K}),e.d(n,"geoStereographic",function(){return p.P}),e.d(n,"geoStereographicRaw",function(){return p.Q}),e.d(n,"geoTransverseMercator",function(){return p.T}),e.d(n,"geoTransverseMercatorRaw",function(){return p.U}),e.d(n,"geoRotation",function(){return p.O}),e.d(n,"geoStream",function(){return p.R}),e.d(n,"geoTransform",function(){return p.S});var g=e(361);e.d(n,"cluster",function(){return g.a}),e.d(n,"hierarchy",function(){return g.b}),e.d(n,"pack",function(){return g.c}),e.d(n,"packSiblings",function(){return g.e}),e.d(n,"packEnclose",function(){return g.d}),e.d(n,"partition",function(){return g.f}),e.d(n,"stratify",function(){return g.g}),e.d(n,"tree",function(){return g.h}),e.d(n,"treemap",function(){return g.i}),e.d(n,"treemapBinary",function(){return g.j}),e.d(n,"treemapDice",function(){return g.k}),e.d(n,"treemapSlice",function(){return g.m}),e.d(n,"treemapSliceDice",function(){return g.n}),e.d(n,"treemapSquarify",function(){return g.o}),e.d(n,"treemapResquarify",function(){return g.l});var _=e(5);e.d(n,"interpolate",function(){return _.a}),e.d(n,"interpolateArray",function(){return _.b}),e.d(n,"interpolateBasis",function(){return _.c}),e.d(n,"interpolateBasisClosed",function(){return _.d}),e.d(n,"interpolateDate",function(){return _.g}),e.d(n,"interpolateNumber",function(){return _.m}),e.d(n,"interpolateObject",function(){return _.n}),e.d(n,"interpolateRound",function(){return _.r}),e.d(n,"interpolateString",function(){return _.s}),e.d(n,"interpolateTransformCss",function(){return _.t}),e.d(n,"interpolateTransformSvg",function(){return _.u}),e.d(n,"interpolateZoom",function(){return _.v}),e.d(n,"interpolateRgb",function(){return _.o}),e.d(n,"interpolateRgbBasis",function(){return _.p}),e.d(n,"interpolateRgbBasisClosed",function(){return _.q}),e.d(n,"interpolateHsl",function(){return _.j}),e.d(n,"interpolateHslLong",function(){return _.k}),e.d(n,"interpolateLab",function(){return _.l}),e.d(n,"interpolateHcl",function(){return _.h}),e.d(n,"interpolateHclLong",function(){return _.i}),e.d(n,"interpolateCubehelix",function(){return _.e}),e.d(n,"interpolateCubehelixLong",function(){return _.f}),e.d(n,"quantize",function(){return _.w});var y=e(13);e.d(n,"path",function(){return y.a});var m=e(383);e.d(n,"polygonArea",function(){return m.a}),e.d(n,"polygonCentroid",function(){return m.b}),e.d(n,"polygonHull",function(){return m.d}),e.d(n,"polygonContains",function(){return m.c}),e.d(n,"polygonLength",function(){return m.e});var O=e(68);e.d(n,"quadtree",function(){return O.a});var j=e(390);e.d(n,"queue",function(){return j.a});var x=e(393);e.d(n,"randomUniform",function(){return x.f}),e.d(n,"randomNormal",function(){return x.e}),e.d(n,"randomLogNormal",function(){return x.d}),e.d(n,"randomBates",function(){return x.a}),e.d(n,"randomIrwinHall",function(){return x.c}),e.d(n,"randomExponential",function(){return x.b});var w=e(398);e.d(n,"request",function(){return w.d}),e.d(n,"html",function(){return w.b}),e.d(n,"json",function(){return w.c}),e.d(n,"text",function(){return w.e}),e.d(n,"xml",function(){return w.g}),e.d(n,"csv",function(){return w.a}),e.d(n,"tsv",function(){return w.f});var M=e(405);e.d(n,"scaleBand",function(){return M.i}),e.d(n,"scalePoint",function(){return M.o}),e.d(n,"scaleIdentity",function(){return M.j}),e.d(n,"scaleLinear",function(){return M.l}),e.d(n,"scaleLog",function(){return M.m}),e.d(n,"scaleOrdinal",function(){return M.n}),e.d(n,"scaleImplicit",function(){return M.k}),e.d(n,"scalePow",function(){return M.p}),e.d(n,"scaleSqrt",function(){return M.t}),e.d(n,"scaleQuantile",function(){return M.q}),e.d(n,"scaleQuantize",function(){return M.r}),e.d(n,"scaleThreshold",function(){return M.u}),e.d(n,"scaleTime",function(){return M.v}),e.d(n,"scaleUtc",function(){return M.w}),e.d(n,"schemeCategory10",function(){return M.x}),e.d(n,"schemeCategory20b",function(){return M.z}),e.d(n,"schemeCategory20c",function(){return M.A}),e.d(n,"schemeCategory20",function(){return M.y}),e.d(n,"interpolateCubehelixDefault",function(){return M.b}),e.d(n,"interpolateRainbow",function(){return M.f}),e.d(n,"interpolateWarm",function(){return M.h}),e.d(n,"interpolateCool",function(){return M.a}),e.d(n,"interpolateViridis",function(){return M.g}),e.d(n,"interpolateMagma",function(){return M.d}),e.d(n,"interpolateInferno",function(){return M.c}),e.d(n,"interpolatePlasma",function(){return M.e}),e.d(n,"scaleSequential",function(){return M.s});var k=e(1);e.d(n,"creator",function(){return k.a}),e.d(n,"local",function(){return k.d}),e.d(n,"matcher",function(){return k.e}),e.d(n,"mouse",function(){return k.f}),e.d(n,"namespace",function(){return k.g}),e.d(n,"namespaces",function(){return k.h}),e.d(n,"select",function(){return k.i}),e.d(n,"selectAll",function(){return k.j}),e.d(n,"selection",function(){return k.k}),e.d(n,"selector",function(){return k.l}),e.d(n,"selectorAll",function(){return k.m}),e.d(n,"style",function(){return k.n}),e.d(n,"touch",function(){return k.o}),e.d(n,"touches",function(){return k.p}),e.d(n,"window",function(){return k.q}),e.d(n,"event",function(){return k.c}),e.d(n,"customEvent",function(){return k.b});var T=e(438);e.d(n,"arc",function(){return T.a}),e.d(n,"area",function(){return T.b}),e.d(n,"line",function(){return T.v}),e.d(n,"pie",function(){return T.A}),e.d(n,"areaRadial",function(){return T.c}),e.d(n,"radialArea",function(){return T.C}),e.d(n,"lineRadial",function(){return T.w}),e.d(n,"radialLine",function(){return T.D}),e.d(n,"pointRadial",function(){return T.B}),e.d(n,"linkHorizontal",function(){return T.x}),e.d(n,"linkVertical",function(){return T.z}),e.d(n,"linkRadial",function(){return T.y}),e.d(n,"symbol",function(){return T.P}),e.d(n,"symbols",function(){return T.X}),e.d(n,"symbolCircle",function(){return T.Q}),e.d(n,"symbolCross",function(){return T.R}),e.d(n,"symbolDiamond",function(){return T.S}),e.d(n,"symbolSquare",function(){return T.T}),e.d(n,"symbolStar",function(){return T.U}),e.d(n,"symbolTriangle",function(){return T.V}),e.d(n,"symbolWye",function(){return T.W}),e.d(n,"curveBasisClosed",function(){return T.e}),e.d(n,"curveBasisOpen",function(){return T.f}),e.d(n,"curveBasis",function(){return T.d}),e.d(n,"curveBundle",function(){return T.g}),e.d(n,"curveCardinalClosed",function(){return T.i}),e.d(n,"curveCardinalOpen",function(){return T.j}),e.d(n,"curveCardinal",function(){return T.h}),e.d(n,"curveCatmullRomClosed",function(){return T.l}),e.d(n,"curveCatmullRomOpen",function(){return T.m}),e.d(n,"curveCatmullRom",function(){return T.k}),e.d(n,"curveLinearClosed",function(){return T.o}),e.d(n,"curveLinear",function(){return T.n}),e.d(n,"curveMonotoneX",function(){return T.p}),e.d(n,"curveMonotoneY",function(){return T.q}),e.d(n,"curveNatural",function(){return T.r}),e.d(n,"curveStep",function(){return T.s}),e.d(n,"curveStepAfter",function(){return T.t}),e.d(n,"curveStepBefore",function(){return T.u}),e.d(n,"stack",function(){return T.E}),e.d(n,"stackOffsetExpand",function(){return T.G}),e.d(n,"stackOffsetDiverging",function(){return T.F}),e.d(n,"stackOffsetNone",function(){return T.H}),e.d(n,"stackOffsetSilhouette",function(){return T.I}),e.d(n,"stackOffsetWiggle",function(){return T.J}),e.d(n,"stackOrderAscending",function(){return T.K}),e.d(n,"stackOrderDescending",function(){return T.L}),e.d(n,"stackOrderInsideOut",function(){return T.M}),e.d(n,"stackOrderNone",function(){return T.N}),e.d(n,"stackOrderReverse",function(){return T.O});var N=e(43);e.d(n,"timeInterval",function(){return N.g}),e.d(n,"timeMillisecond",function(){return N.h}),e.d(n,"timeMilliseconds",function(){return N.i}),e.d(n,"utcMillisecond",function(){return N.L}),e.d(n,"utcMilliseconds",function(){return N.M}),e.d(n,"timeSecond",function(){return N.r}),e.d(n,"timeSeconds",function(){return N.s}),e.d(n,"utcSecond",function(){return N.V}),e.d(n,"utcSeconds",function(){return N.W}),e.d(n,"timeMinute",function(){return N.j}),e.d(n,"timeMinutes",function(){return N.k}),e.d(n,"timeHour",function(){return N.e}),e.d(n,"timeHours",function(){return N.f}),e.d(n,"timeDay",function(){return N.a}),e.d(n,"timeDays",function(){return N.b}),e.d(n,"timeWeek",function(){return N.B}),e.d(n,"timeWeeks",function(){return N.C}),e.d(n,"timeSunday",function(){return N.t}),e.d(n,"timeSundays",function(){return N.u}),e.d(n,"timeMonday",function(){return N.l}),e.d(n,"timeMondays",function(){return N.m}),e.d(n,"timeTuesday",function(){return N.x}),e.d(n,"timeTuesdays",function(){return N.y}),e.d(n,"timeWednesday",function(){return N.z}),e.d(n,"timeWednesdays",function(){return N.A}),e.d(n,"timeThursday",function(){return N.v}),e.d(n,"timeThursdays",function(){return N.w}),e.d(n,"timeFriday",function(){return N.c}),e.d(n,"timeFridays",function(){return N.d}),e.d(n,"timeSaturday",function(){return N.p}),e.d(n,"timeSaturdays",function(){return N.q}),e.d(n,"timeMonth",function(){return N.n}),e.d(n,"timeMonths",function(){return N.o}),e.d(n,"timeYear",function(){return N.D}),e.d(n,"timeYears",function(){return N.E}),e.d(n,"utcMinute",function(){return N.N}),e.d(n,"utcMinutes",function(){return N.O}),e.d(n,"utcHour",function(){return N.J}),e.d(n,"utcHours",function(){return N.K}),e.d(n,"utcDay",function(){return N.F}),e.d(n,"utcDays",function(){return N.G}),e.d(n,"utcWeek",function(){return N._5}),e.d(n,"utcWeeks",function(){return N._6}),e.d(n,"utcSunday",function(){return N.X}),e.d(n,"utcSundays",function(){return N.Y}),e.d(n,"utcMonday",function(){return N.P}),e.d(n,"utcMondays",function(){return N.Q}),e.d(n,"utcTuesday",function(){return N._1}),e.d(n,"utcTuesdays",function(){return N._2}),e.d(n,"utcWednesday",function(){return N._3}),e.d(n,"utcWednesdays",function(){return N._4}),e.d(n,"utcThursday",function(){return N.Z}),e.d(n,"utcThursdays",function(){return N._0}),e.d(n,"utcFriday",function(){return N.H}),e.d(n,"utcFridays",function(){return N.I}),e.d(n,"utcSaturday",function(){return N.T}),e.d(n,"utcSaturdays",function(){return N.U}),e.d(n,"utcMonth",function(){return N.R}),e.d(n,"utcMonths",function(){return N.S}),e.d(n,"utcYear",function(){return N._7}),e.d(n,"utcYears",function(){return N._8});var S=e(82);e.d(n,"timeFormatDefaultLocale",function(){return S.d}),e.d(n,"timeFormat",function(){return S.c}),e.d(n,"timeParse",function(){return S.f}),e.d(n,"utcFormat",function(){return S.g}),e.d(n,"utcParse",function(){return S.h}),e.d(n,"timeFormatLocale",function(){return S.e}),e.d(n,"isoFormat",function(){return S.a}),e.d(n,"isoParse",function(){return S.b});var A=e(34);e.d(n,"now",function(){return A.b}),e.d(n,"timer",function(){return A.d}),e.d(n,"timerFlush",function(){return A.e}),e.d(n,"timeout",function(){return A.c}),e.d(n,"interval",function(){return A.a});var E=e(62);e.d(n,"transition",function(){return E.c}),e.d(n,"active",function(){return E.a}),e.d(n,"interrupt",function(){return E.b});var C=e(463);e.d(n,"voronoi",function(){return C.a});var z=e(468);e.d(n,"zoom",function(){return z.a}),e.d(n,"zoomTransform",function(){return z.c}),e.d(n,"zoomIdentity",function(){return z.b})},function(t,n,e){"use strict";e.d(n,"b",function(){return c}),e.d(n,"a",function(){return o});var r=e(17),i=e(93),u=Object(i.a)(r.a),c=u.right,o=u.left;n.c=c},function(t,n,e){"use strict";function r(t){return function(n,e){return Object(i.a)(t(n),e)}}var i=e(17);n.a=function(t){return 1===t.length&&(t=r(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)<0?r=u+1:i=u}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var u=r+i>>>1;t(n[u],e)>0?i=u:r=u+1}return r}}}},function(t,n,e){"use strict";function r(t,n){return[t,n]}n.b=r,n.a=function(t,n){null==n&&(n=r);for(var e=0,i=t.length-1,u=t[0],c=new Array(i<0?0:i);e<i;)c[e]=n(u,u=t[++e]);return c}},function(t,n,e){"use strict";var r=e(96);n.a=function(t,n){var e=Object(r.a)(t,n);return e?Math.sqrt(e):e}},function(t,n,e){"use strict";var r=e(21);n.a=function(t,n){var e,i,u=t.length,c=0,o=-1,a=0,f=0;if(null==n)for(;++o<u;)isNaN(e=Object(r.a)(t[o]))||(f+=(i=e-a)*(e-(a+=i/++c)));else for(;++o<u;)isNaN(e=Object(r.a)(n(t[o],o,t)))||(f+=(i=e-a)*(e-(a+=i/++c)));if(c>1)return f/(c-1)}},function(t,n,e){"use strict";n.a=function(t,n){var e,r,i,u=t.length,c=-1;if(null==n){for(;++c<u;)if(null!=(e=t[c])&&e>=e)for(r=i=e;++c<u;)null!=(e=t[c])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++c<u;)if(null!=(e=n(t[c],c,t))&&e>=e)for(r=i=e;++c<u;)null!=(e=n(t[c],c,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]}},function(t,n,e){"use strict";e.d(n,"b",function(){return i}),e.d(n,"a",function(){return u});var r=Array.prototype,i=r.slice,u=r.map},function(t,n,e){"use strict";n.a=function(t,n,e){t=+t,n=+n,e=(i=arguments.length)<2?(n=t,t=0,1):i<3?1:+e;for(var r=-1,i=0|Math.max(0,Math.ceil((n-t)/e)),u=new Array(i);++r<i;)u[r]=t+r*e;return u}},function(t,n,e){"use strict";function r(t,n,e){var r=(n-t)/Math.max(0,e),o=Math.floor(Math.log(r)/Math.LN10),a=r/Math.pow(10,o);return o>=0?(a>=i?10:a>=u?5:a>=c?2:1)*Math.pow(10,o):-Math.pow(10,-o)/(a>=i?10:a>=u?5:a>=c?2:1)}n.b=r,n.c=function(t,n,e){var r=Math.abs(n-t)/Math.max(0,e),o=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),a=r/o;return a>=i?o*=10:a>=u?o*=5:a>=c&&(o*=2),n<t?-o:o};var i=Math.sqrt(50),u=Math.sqrt(10),c=Math.sqrt(2);n.a=function(t,n,e){var i,u,c,o,a=-1;if(n=+n,t=+t,e=+e,t===n&&e>0)return[t];if((i=n<t)&&(u=t,t=n,n=u),0===(o=r(t,n,e))||!isFinite(o))return[];if(o>0)for(t=Math.ceil(t/o),n=Math.floor(n/o),c=new Array(u=Math.ceil(n-t+1));++a<u;)c[a]=(t+a)*o;else for(t=Math.floor(t*o),n=Math.ceil(n*o),c=new Array(u=Math.ceil(t-n+1));++a<u;)c[a]=(t-a)/o;return i&&c.reverse(),c}},function(t,n,e){"use strict";n.a=function(t){return Math.ceil(Math.log(t.length)/Math.LN2)+1}},function(t,n,e){"use strict";n.a=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&r>e&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&r>e&&(r=e);return r}},function(t,n,e){"use strict";function r(t){return t.length}var i=e(102);n.a=function(t){if(!(c=t.length))return[];for(var n=-1,e=Object(i.a)(t,r),u=new Array(e);++n<e;)for(var c,o=-1,a=u[n]=new Array(c);++o<c;)a[o]=t[o][n];return u}},function(t,n,e){"use strict";var r=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var i=document.documentElement;if(!i.matches){var u=i.webkitMatchesSelector||i.msMatchesSelector||i.mozMatchesSelector||i.oMatchesSelector;r=function(t){return function(){return u.call(this,t)}}}}n.a=r},function(t,n,e){"use strict";function r(){return[]}n.a=function(t){return null==t?r:function(){return this.querySelectorAll(t)}}},function(t,n,e){"use strict";function r(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}n.a=r;var i=e(107),u=e(4);n.b=function(){return new u.a(this._enter||this._groups.map(i.a),this._parents)},r.prototype={constructor:r,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}}},function(t,n,e){"use strict";n.a=function(t){return new Array(t.length)}},function(t,n,e){"use strict";function r(t){return function(){this.style.removeProperty(t)}}function i(t,n,e){return function(){this.style.setProperty(t,n,e)}}function u(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}function c(t,n){return t.style.getPropertyValue(n)||Object(o.a)(t).getComputedStyle(t,null).getPropertyValue(n)}n.b=c;var o=e(57);n.a=function(t,n,e){return arguments.length>1?this.each((null==n?r:"function"==typeof n?u:i)(t,n,null==e?"":e)):c(this.node(),t)}},function(t,n,e){"use strict";n.b=function(t,n){var e=t.document.documentElement,u=Object(r.i)(t).on("dragstart.drag",null);n&&(u.on("click.drag",i.a,!0),setTimeout(function(){u.on("click.drag",null)},0)),"onselectstart"in e?u.on("selectstart.drag",null):(e.style.MozUserSelect=e.__noselect,delete e.__noselect)};var r=e(1),i=e(110);n.a=function(t){var n=t.document.documentElement,e=Object(r.i)(t).on("dragstart.drag",i.a,!0);"onselectstart"in n?e.on("selectstart.drag",i.a,!0):(n.__noselect=n.style.MozUserSelect,n.style.MozUserSelect="none")}},function(t,n,e){"use strict";n.b=function(){r.c.stopImmediatePropagation()};var r=e(1);n.a=function(){r.c.preventDefault(),r.c.stopImmediatePropagation()}},function(t,n,e){"use strict";e.d(n,"a",function(){return r}),e.d(n,"b",function(){return i});var r=Math.PI/180,i=180/Math.PI},function(t,n,e){"use strict";function r(t){return function(n){var e,r,u=n.length,c=new Array(u),o=new Array(u),a=new Array(u);for(e=0;e<u;++e)r=Object(i.f)(n[e]),c[e]=r.r||0,o[e]=r.g||0,a[e]=r.b||0;return c=t(c),o=t(o),a=t(a),r.opacity=1,function(t){return r.r=c(t),r.g=o(t),r.b=a(t),r+""}}}e.d(n,"b",function(){return a}),e.d(n,"c",function(){return f});var i=e(7),u=e(61),c=e(113),o=e(22);n.a=function t(n){function e(t,n){var e=r((t=Object(i.f)(t)).r,(n=Object(i.f)(n)).r),u=r(t.g,n.g),c=r(t.b,n.b),a=Object(o.a)(t.opacity,n.opacity);return function(n){return t.r=e(n),t.g=u(n),t.b=c(n),t.opacity=a(n),t+""}}var r=Object(o.b)(n);return e.gamma=t,e}(1);var a=r(u.b),f=r(c.a)},function(t,n,e){"use strict";var r=e(61);n.a=function(t){var n=t.length;return function(e){var i=Math.floor(((e%=1)<0?++e:e)*n),u=t[(i+n-1)%n],c=t[i%n],o=t[(i+1)%n],a=t[(i+2)%n];return Object(r.a)((e-i/n)*n,u,c,o,a)}}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";var r=e(58);n.a=function(t,n){var e,i=n?n.length:0,u=t?Math.min(i,t.length):0,c=new Array(i),o=new Array(i);for(e=0;e<u;++e)c[e]=Object(r.a)(t[e],n[e]);for(;e<i;++e)o[e]=n[e];return function(t){for(e=0;e<u;++e)o[e]=c[e](t);return o}}},function(t,n,e){"use strict";n.a=function(t,n){var e=new Date;return t=+t,n-=t,function(r){return e.setTime(t+n*r),e}}},function(t,n,e){"use strict";var r=e(58);n.a=function(t,n){var e,i={},u={};null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={});for(e in n)e in t?i[e]=Object(r.a)(t[e],n[e]):u[e]=n[e];return function(t){for(e in i)u[e]=i[e](t);return u}}},function(t,n,e){"use strict";function r(t){return function(){return t}}function i(t){return function(n){return t(n)+""}}var u=e(33),c=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,o=new RegExp(c.source,"g");n.a=function(t,n){var e,a,f,s=c.lastIndex=o.lastIndex=0,l=-1,h=[],d=[];for(t+="",n+="";(e=c.exec(t))&&(a=o.exec(n));)(f=a.index)>s&&(f=n.slice(s,f),h[l]?h[l]+=f:h[++l]=f),(e=e[0])===(a=a[0])?h[l]?h[l]+=a:h[++l]=a:(h[++l]=null,d.push({i:l,x:Object(u.a)(e,a)})),s=o.lastIndex;return s<n.length&&(f=n.slice(s),h[l]?h[l]+=f:h[++l]=f),h.length<2?d[0]?i(d[0].x):r(n):(n=d.length,function(t){for(var e,r=0;r<n;++r)h[(e=d[r]).i]=e.x(t);return h.join("")})}},function(t,n,e){"use strict";var r=e(6);n.a=function(t,n){var e,i,u,c=t.__transition,o=!0;if(c){n=null==n?null:n+"";for(u in c)(e=c[u]).name===n?(i=e.state>r.d&&e.state<r.b,e.state=r.a,e.timer.stop(),i&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete c[u]):o=!1;o&&delete t.__transition}}},function(t,n,e){"use strict";var r=e(7),i=e(5);n.a=function(t,n){var e;return("number"==typeof n?i.m:n instanceof r.a?i.o:(e=Object(r.a)(n))?(n=e,i.o):i.s)(t,n)}},function(t,n,e){"use strict";var r=e(276);e.d(n,"y",function(){return r.a});var i=e(277);e.d(n,"D",function(){return i.b}),e.d(n,"E",function(){return i.a}),e.d(n,"G",function(){return i.c}),e.d(n,"F",function(){return i.b});var u=e(278);e.d(n,"m",function(){return u.b}),e.d(n,"n",function(){return u.a}),e.d(n,"p",function(){return u.c}),e.d(n,"o",function(){return u.b});var c=e(279);e.d(n,"z",function(){return c.b}),e.d(n,"A",function(){return c.a}),e.d(n,"C",function(){return c.c}),e.d(n,"B",function(){return c.b});var o=e(280);e.d(n,"H",function(){return o.b}),e.d(n,"I",function(){return o.a}),e.d(n,"K",function(){return o.c}),e.d(n,"J",function(){return o.b});var a=e(281);e.d(n,"u",function(){return a.b}),e.d(n,"v",function(){return a.a}),e.d(n,"x",function(){return a.c}),e.d(n,"w",function(){return a.b});var f=e(282);e.d(n,"i",function(){return f.b}),e.d(n,"j",function(){return f.a}),e.d(n,"l",function(){return f.c}),e.d(n,"k",function(){return f.b});var s=e(283);e.d(n,"e",function(){return s.c}),e.d(n,"f",function(){return s.a}),e.d(n,"h",function(){return s.c}),e.d(n,"g",function(){return s.b});var l=e(284);e.d(n,"a",function(){return l.b}),e.d(n,"b",function(){return l.a}),e.d(n,"d",function(){return l.c}),e.d(n,"c",function(){return l.b});var h=e(285);e.d(n,"q",function(){return h.c}),e.d(n,"r",function(){return h.a}),e.d(n,"t",function(){return h.c}),e.d(n,"s",function(){return h.b})},function(t,n,e){"use strict";e.d(n,"a",function(){return r}),e.d(n,"d",function(){return i}),e.d(n,"b",function(){return c}),e.d(n,"e",function(){return o}),e.d(n,"c",function(){return a});var r=Math.cos,i=Math.sin,u=Math.PI,c=u/2,o=2*u,a=Math.max},function(t,n,e){"use strict";n.b=function(t){return t.x},n.c=function(t){return t.y};var r=e(12),i=e(23),u=e(34),c=10,o=Math.PI*(3-Math.sqrt(5));n.a=function(t){function n(){e(),_.call("tick",s),l<h&&(g.stop(),_.call("end",s))}function e(){var n,e,r=t.length;for(l+=(b-l)*d,p.each(function(t){t(l)}),n=0;n<r;++n)null==(e=t[n]).fx?e.x+=e.vx*=v:(e.x=e.fx,e.vx=0),null==e.fy?e.y+=e.vy*=v:(e.y=e.fy,e.vy=0)}function a(){for(var n,e=0,r=t.length;e<r;++e){if(n=t[e],n.index=e,isNaN(n.x)||isNaN(n.y)){var i=c*Math.sqrt(e),u=e*o;n.x=i*Math.cos(u),n.y=i*Math.sin(u)}(isNaN(n.vx)||isNaN(n.vy))&&(n.vx=n.vy=0)}}function f(n){return n.initialize&&n.initialize(t),n}var s,l=1,h=.001,d=1-Math.pow(h,1/300),b=0,v=.6,p=Object(i.c)(),g=Object(u.d)(n),_=Object(r.a)("tick","end");return null==t&&(t=[]),a(),s={tick:e,restart:function(){return g.restart(n),s},stop:function(){return g.stop(),s},nodes:function(n){return arguments.length?(t=n,a(),p.each(f),s):t},alpha:function(t){return arguments.length?(l=+t,s):l},alphaMin:function(t){return arguments.length?(h=+t,s):h},alphaDecay:function(t){return arguments.length?(d=+t,s):+d},alphaTarget:function(t){return arguments.length?(b=+t,s):b},velocityDecay:function(t){return arguments.length?(v=1-t,s):1-v},force:function(t,n){return arguments.length>1?(null==n?p.remove(t):p.set(t,f(n)),s):p.get(t)},find:function(n,e,r){var i,u,c,o,a,f=0,s=t.length;for(null==r?r=1/0:r*=r,f=0;f<s;++f)(c=(i=n-(o=t[f]).x)*i+(u=e-o.y)*u)<r&&(a=o,r=c);return a},on:function(t,n){return arguments.length>1?(_.on(t,n),s):_.on(t)}}}},function(t,n,e){"use strict";var r=e(36),i=e(325),u=e(326),c=e(125),o=e(126),a=e(127),f=e(329),s=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];n.a=function(t){function n(t){function n(t){var n,c,o,f=m,l=O;if("c"===y)l=j(t)+l,t="";else{var b=(t=+t)<0;if(t=j(Math.abs(t),_),b&&0==+t&&(b=!1),f=(b?"("===u?u:"-":"-"===u||"("===u?"":u)+f,l=l+("s"===y?s[8+a.b/3]:"")+(b&&"("===u?")":""),x)for(n=-1,c=t.length;++n<c;)if(48>(o=t.charCodeAt(n))||o>57){l=(46===o?h+t.slice(n+1):t.slice(n))+l,t=t.slice(0,n);break}}g&&!v&&(t=e(t,1/0));var w=f.length+t.length+l.length,M=w<p?new Array(p-w+1).join(r):"";switch(g&&v&&(t=e(M+t,M.length?p-l.length:1/0),M=""),i){case"<":t=f+t+l+M;break;case"=":t=f+M+t+l;break;case"^":t=M.slice(0,w=M.length>>1)+f+t+l+M.slice(w);break;default:t=M+f+t+l}return d(t)}var r=(t=Object(c.a)(t)).fill,i=t.align,u=t.sign,f=t.symbol,v=t.zero,p=t.width,g=t.comma,_=t.precision,y=t.type,m="$"===f?l[0]:"#"===f&&/[boxX]/.test(y)?"0"+y.toLowerCase():"",O="$"===f?l[1]:/[%p]/.test(y)?b:"",j=o.a[y],x=!y||/[defgprs%]/.test(y);return _=null==_?y?6:12:/[gprs]/.test(y)?Math.max(1,Math.min(21,_)):Math.max(0,Math.min(20,_)),n.toString=function(){return t+""},n}var e=t.grouping&&t.thousands?Object(i.a)(t.grouping,t.thousands):f.a,l=t.currency,h=t.decimal,d=t.numerals?Object(u.a)(t.numerals):f.a,b=t.percent||"%";return{format:n,formatPrefix:function(t,e){var i=n((t=Object(c.a)(t),t.type="f",t)),u=3*Math.max(-8,Math.min(8,Math.floor(Object(r.a)(e)/3))),o=Math.pow(10,-u),a=s[8+u/3];return function(t){return i(o*t)+a}}}}},function(t,n,e){"use strict";function r(t){return new i(t)}function i(t){if(!(n=c.exec(t)))throw new Error("invalid format: "+t);var n,e=n[1]||" ",r=n[2]||">",i=n[3]||"-",o=n[4]||"",a=!!n[5],f=n[6]&&+n[6],s=!!n[7],l=n[8]&&+n[8].slice(1),h=n[9]||"";"n"===h?(s=!0,h="g"):u.a[h]||(h=""),(a||"0"===e&&"="===r)&&(a=!0,e="0",r="="),this.fill=e,this.align=r,this.sign=i,this.symbol=o,this.zero=a,this.width=f,this.comma=s,this.precision=l,this.type=h}n.a=r;var u=e(126),c=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;r.prototype=i.prototype,i.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type}},function(t,n,e){"use strict";var r=e(327),i=e(127),u=e(328);n.a={"":r.a,"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return Object(u.a)(100*t,n)},r:u.a,s:i.a,X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}}},function(t,n,e){"use strict";e.d(n,"b",function(){return r});var r,i=e(71);n.a=function(t,n){var e=Object(i.a)(t,n);if(!e)return t+"";var u=e[0],c=e[1],o=c-(r=3*Math.max(-8,Math.min(8,Math.floor(c/3))))+1,a=u.length;return o===a?u:o>a?u+new Array(o-a+1).join("0"):o>0?u.slice(0,o)+"."+u.slice(o):"0."+new Array(1-o).join("0")+Object(i.a)(t,Math.max(0,n+o-1))[0]}},function(t,n,e){"use strict";function r(){_.point=u}function i(){c(o,a)}function u(t,n){_.point=c,o=t,a=n,t*=d.r,n*=d.r,f=t,s=Object(d.g)(n=n/2+d.q),l=Object(d.t)(n)}function c(t,n){t*=d.r,n=(n*=d.r)/2+d.q;var e=t-f,r=e>=0?1:-1,i=r*e,u=Object(d.g)(n),c=Object(d.t)(n),o=l*c,a=s*u+o*Object(d.g)(i),h=o*r*Object(d.t)(i);p.add(Object(d.e)(h,a)),f=t,s=u,l=c}e.d(n,"a",function(){return p}),e.d(n,"b",function(){return _});var o,a,f,s,l,h=e(19),d=e(0),b=e(11),v=e(14),p=Object(h.a)(),g=Object(h.a)(),_={point:b.a,lineStart:b.a,lineEnd:b.a,polygonStart:function(){p.reset(),_.lineStart=r,_.lineEnd=i},polygonEnd:function(){var t=+p;g.add(t<0?d.w+t:t),this.lineStart=this.lineEnd=this.point=b.a},sphere:function(){g.add(d.w)}};n.c=function(t){return g.reset(),Object(v.a)(t,_),2*g}},function(t,n,e){"use strict";function r(t,n,e,r,c,a){if(e){var f=Object(o.g)(n),s=Object(o.t)(n),l=r*e;null==c?(c=n+r*o.w,a=n-l/2):(c=i(f,c),a=i(f,a),(r>0?c<a:c>a)&&(c+=r*o.w));for(var h,d=c;r>0?d>a:d<a;d-=l)h=Object(u.g)([f,-s*Object(o.g)(d),-s*Object(o.t)(d)]),t.point(h[0],h[1])}}function i(t,n){(n=Object(u.a)(n))[0]-=t,Object(u.e)(n);var e=Object(o.b)(-n[1]);return((-n[2]<0?-e:e)+o.w-o.i)%o.w}n.a=r;var u=e(24),c=e(336),o=e(0),a=e(37);n.b=function(){function t(){var t=i.apply(this,arguments),c=u.apply(this,arguments)*o.r,l=f.apply(this,arguments)*o.r;return n=[],e=Object(a.b)(-t[0]*o.r,-t[1]*o.r,0).invert,r(s,c,l,1),t={type:"Polygon",coordinates:[n]},n=e=null,t}var n,e,i=Object(c.a)([0,0]),u=Object(c.a)(90),f=Object(c.a)(6),s={point:function(t,r){n.push(t=e(t,r)),t[0]*=o.h,t[1]*=o.h}};return t.center=function(n){return arguments.length?(i="function"==typeof n?n:Object(c.a)([+n[0],+n[1]]),t):i},t.radius=function(n){return arguments.length?(u="function"==typeof n?n:Object(c.a)(+n),t):u},t.precision=function(n){return arguments.length?(f="function"==typeof n?n:Object(c.a)(+n),t):f},t}},function(t,n,e){"use strict";n.a=function(t,n){function e(e,r){return e=t(e,r),n(e[0],e[1])}return t.invert&&n.invert&&(e.invert=function(e,r){return(e=n.invert(e,r))&&t.invert(e[0],e[1])}),e}},function(t,n,e){"use strict";function r(t,n,e,r){var i,c,o=Object(u.t)(t-e);return Object(u.a)(o)>u.i?Object(u.d)((Object(u.t)(n)*(c=Object(u.g)(r))*Object(u.t)(e)-Object(u.t)(r)*(i=Object(u.g)(n))*Object(u.t)(t))/(i*c*o)):(n+r)/2}var i=e(132),u=e(0);n.a=Object(i.a)(function(){return!0},function(t){var n,e=NaN,i=NaN,c=NaN;return{lineStart:function(){t.lineStart(),n=1},point:function(o,a){var f=o>0?u.o:-u.o,s=Object(u.a)(o-e);Object(u.a)(s-u.o)<u.i?(t.point(e,i=(i+a)/2>0?u.l:-u.l),t.point(c,i),t.lineEnd(),t.lineStart(),t.point(f,i),t.point(o,i),n=0):c!==f&&s>=u.o&&(Object(u.a)(e-c)<u.i&&(e-=c*u.i),Object(u.a)(o-f)<u.i&&(o-=f*u.i),i=r(e,i,o,a),t.point(c,i),t.lineEnd(),t.lineStart(),t.point(f,i),n=0),t.point(e=o,i=a),c=f},lineEnd:function(){t.lineEnd(),e=i=NaN},clean:function(){return 2-n}}},function(t,n,e,r){var i;if(null==t)i=e*u.l,r.point(-u.o,i),r.point(0,i),r.point(u.o,i),r.point(u.o,0),r.point(u.o,-i),r.point(0,-i),r.point(-u.o,-i),r.point(-u.o,0),r.point(-u.o,i);else if(Object(u.a)(t[0]-n[0])>u.i){var c=t[0]<n[0]?u.o:-u.o;i=e*c/2,r.point(-c,i),r.point(0,i),r.point(c,i)}else r.point(n[0],n[1])},[-u.o,-u.l])},function(t,n,e){"use strict";function r(t){return t.length>1}function i(t,n){return((t=t.x)[0]<0?t[1]-o.l-o.i:o.l-t[1])-((n=n.x)[0]<0?n[1]-o.l-o.i:o.l-n[1])}var u=e(133),c=e(134),o=e(0),a=e(136),f=e(3);n.a=function(t,n,e,o){return function(s){function l(n,e){t(n,e)&&s.point(n,e)}function h(t,n){O.point(t,n)}function d(){M.point=h,O.lineStart()}function b(){M.point=l,O.lineEnd()}function v(t,n){m.push([t,n]),x.point(t,n)}function p(){x.lineStart(),m=[]}function g(){v(m[0][0],m[0][1]),x.lineEnd();var t,n,e,i,u=x.clean(),c=j.result(),o=c.length;if(m.pop(),_.push(m),m=null,o)if(1&u){if(e=c[0],(n=e.length-1)>0){for(w||(s.polygonStart(),w=!0),s.lineStart(),t=0;t<n;++t)s.point((i=e[t])[0],i[1]);s.lineEnd()}}else o>1&&2&u&&c.push(c.pop().concat(c.shift())),y.push(c.filter(r))}var _,y,m,O=n(s),j=Object(u.a)(),x=n(j),w=!1,M={point:l,lineStart:d,lineEnd:b,polygonStart:function(){M.point=v,M.lineStart=p,M.lineEnd=g,y=[],_=[]},polygonEnd:function(){M.point=l,M.lineStart=d,M.lineEnd=b,y=Object(f.n)(y);var t=Object(a.a)(_,o);y.length?(w||(s.polygonStart(),w=!0),Object(c.a)(y,i,t,e,s)):t&&(w||(s.polygonStart(),w=!0),s.lineStart(),e(null,null,1,s),s.lineEnd()),w&&(s.polygonEnd(),w=!1),y=_=null},sphere:function(){s.polygonStart(),s.lineStart(),e(null,null,1,s),s.lineEnd(),s.polygonEnd()}};return M}}},function(t,n,e){"use strict";var r=e(11);n.a=function(){var t,n=[];return{point:function(n,e){t.push([n,e])},lineStart:function(){n.push(t=[])},lineEnd:r.a,rejoin:function(){n.length>1&&n.push(n.pop().concat(n.shift()))},result:function(){var e=n;return n=[],t=null,e}}}},function(t,n,e){"use strict";function r(t,n,e,r){this.x=t,this.z=n,this.o=e,this.e=r,this.v=!1,this.n=this.p=null}function i(t){if(n=t.length){for(var n,e,r=0,i=t[0];++r<n;)i.n=e=t[r],e.p=i,i=e;i.n=e=t[0],e.p=i}}var u=e(135);n.a=function(t,n,e,c,o){var a,f,s=[],l=[];if(t.forEach(function(t){if(!((n=t.length-1)<=0)){var n,e,i=t[0],c=t[n];if(Object(u.a)(i,c)){for(o.lineStart(),a=0;a<n;++a)o.point((i=t[a])[0],i[1]);o.lineEnd()}else s.push(e=new r(i,t,null,!0)),l.push(e.o=new r(i,null,e,!1)),s.push(e=new r(c,t,null,!1)),l.push(e.o=new r(c,null,e,!0))}}),s.length){for(l.sort(n),i(s),i(l),a=0,f=l.length;a<f;++a)l[a].e=e=!e;for(var h,d,b=s[0];;){for(var v=b,p=!0;v.v;)if((v=v.n)===b)return;h=v.z,o.lineStart();do{if(v.v=v.o.v=!0,v.e){if(p)for(a=0,f=h.length;a<f;++a)o.point((d=h[a])[0],d[1]);else c(v.x,v.n.x,1,o);v=v.n}else{if(p)for(h=v.p.z,a=h.length-1;a>=0;--a)o.point((d=h[a])[0],d[1]);else c(v.x,v.p.x,-1,o);v=v.p}h=(v=v.o).z,p=!p}while(!v.v);o.lineEnd()}}}},function(t,n,e){"use strict";var r=e(0);n.a=function(t,n){return Object(r.a)(t[0]-n[0])<r.i&&Object(r.a)(t[1]-n[1])<r.i}},function(t,n,e){"use strict";var r=e(19),i=e(24),u=e(0),c=Object(r.a)();n.a=function(t,n){var e=n[0],r=n[1],o=[Object(u.t)(e),-Object(u.g)(e),0],a=0,f=0;c.reset();for(var s=0,l=t.length;s<l;++s)if(d=(h=t[s]).length)for(var h,d,b=h[d-1],v=b[0],p=b[1]/2+u.q,g=Object(u.t)(p),_=Object(u.g)(p),y=0;y<d;++y,v=O,g=x,_=w,b=m){var m=h[y],O=m[0],j=m[1]/2+u.q,x=Object(u.t)(j),w=Object(u.g)(j),M=O-v,k=M>=0?1:-1,T=k*M,N=T>u.o,S=g*x;if(c.add(Object(u.e)(S*k*Object(u.t)(T),_*w+S*Object(u.g)(T))),a+=N?M+k*u.w:M,N^v>=e^O>=e){var A=Object(i.c)(Object(i.a)(b),Object(i.a)(m));Object(i.e)(A);var E=Object(i.c)(o,A);Object(i.e)(E);var C=(N^M>=0?-1:1)*Object(u.c)(E[2]);(r>C||r===C&&(A[0]||A[1]))&&(f+=N^M>=0?1:-1)}}return(a<-u.i||a<u.i&&c<-u.i)^1&f}},function(t,n,e){"use strict";var r=e(24),i=e(129),u=e(0),c=e(135),o=e(132);n.a=function(t){function n(t,n){return Object(u.g)(t)*Object(u.g)(n)>f}function e(t,n,e){var i=Object(r.a)(t),c=Object(r.a)(n),o=[1,0,0],a=Object(r.c)(i,c),s=Object(r.d)(a,a),l=a[0],h=s-l*l;if(!h)return!e&&t;var d=f*s/h,b=-f*l/h,v=Object(r.c)(o,a),p=Object(r.f)(o,d),g=Object(r.f)(a,b);Object(r.b)(p,g);var _=v,y=Object(r.d)(p,_),m=Object(r.d)(_,_),O=y*y-m*(Object(r.d)(p,p)-1);if(!(O<0)){var j=Object(u.u)(O),x=Object(r.f)(_,(-y-j)/m);if(Object(r.b)(x,p),x=Object(r.g)(x),!e)return x;var w,M=t[0],k=n[0],T=t[1],N=n[1];k<M&&(w=M,M=k,k=w);var S=k-M,A=Object(u.a)(S-u.o)<u.i,E=A||S<u.i;if(!A&&N<T&&(w=T,T=N,N=w),E?A?T+N>0^x[1]<(Object(u.a)(x[0]-M)<u.i?T:N):T<=x[1]&&x[1]<=N:S>u.o^(M<=x[0]&&x[0]<=k)){var C=Object(r.f)(_,(-y+j)/m);return Object(r.b)(C,p),[x,Object(r.g)(C)]}}}function a(n,e){var r=l?t:u.o-t,i=0;return n<-r?i|=1:n>r&&(i|=2),e<-r?i|=4:e>r&&(i|=8),i}var f=Object(u.g)(t),s=6*u.r,l=f>0,h=Object(u.a)(f)>u.i;return Object(o.a)(n,function(t){var r,i,o,f,s;return{lineStart:function(){f=o=!1,s=1},point:function(d,b){var v,p=[d,b],g=n(d,b),_=l?g?0:a(d,b):g?a(d+(d<0?u.o:-u.o),b):0;if(!r&&(f=o=g)&&t.lineStart(),g!==o&&(!(v=e(r,p))||Object(c.a)(r,v)||Object(c.a)(p,v))&&(p[0]+=u.i,p[1]+=u.i,g=n(p[0],p[1])),g!==o)s=0,g?(t.lineStart(),v=e(p,r),t.point(v[0],v[1])):(v=e(r,p),t.point(v[0],v[1]),t.lineEnd()),r=v;else if(h&&r&&l^g){var y;_&i||!(y=e(p,r,!0))||(s=0,l?(t.lineStart(),t.point(y[0][0],y[0][1]),t.point(y[1][0],y[1][1]),t.lineEnd()):(t.point(y[1][0],y[1][1]),t.lineEnd(),t.lineStart(),t.point(y[0][0],y[0][1])))}!g||r&&Object(c.a)(r,p)||t.point(p[0],p[1]),r=p,o=g,i=_},lineEnd:function(){o&&t.lineEnd(),r=null},clean:function(){return s|(f&&o)<<1}}},function(n,e,r,u){Object(i.a)(u,t,s,r,n,e)},l?[0,-t]:[-u.o,t-u.o])}},function(t,n,e){"use strict";var r=e(139),i=[null,null],u={type:"LineString",coordinates:i};n.a=function(t,n){return i[0]=t,i[1]=n,Object(r.a)(u)}},function(t,n,e){"use strict";function r(){b.point=b.lineEnd=l.a}function i(t,n){t*=s.r,n*=s.r,c=t,o=Object(s.t)(n),a=Object(s.g)(n),b.point=u}function u(t,n){t*=s.r,n*=s.r;var e=Object(s.t)(n),r=Object(s.g)(n),i=Object(s.a)(t-c),u=Object(s.g)(i),f=r*Object(s.t)(i),l=a*e-o*r*u,h=o*e+a*r*u;d.add(Object(s.e)(Object(s.u)(f*f+l*l),h)),c=t,o=e,a=r}var c,o,a,f=e(19),s=e(0),l=e(11),h=e(14),d=Object(f.a)(),b={sphere:l.a,point:l.a,lineStart:function(){b.point=i,b.lineEnd=r},lineEnd:l.a,polygonStart:l.a,polygonEnd:l.a};n.a=function(t){return d.reset(),Object(h.a)(t,b),+d}},function(t,n,e){"use strict";var r=e(11),i=1/0,u=i,c=-i,o=c,a={point:function(t,n){t<i&&(i=t),t>c&&(c=t),n<u&&(u=n),n>o&&(o=n)},lineStart:r.a,lineEnd:r.a,polygonStart:r.a,polygonEnd:r.a,result:function(){var t=[[i,u],[c,o]];return c=o=-(u=i=1/0),t}};n.a=a},function(t,n,e){"use strict";var r=e(73);n.a=function(){return Object(r.b)().parallels([29.5,45.5]).scale(1070).translate([480,250]).rotate([96,0]).center([-.6,38.7])}},function(t,n,e){"use strict";function r(t,n){return[t,n]}n.b=r;var i=e(8);r.invert=r,n.a=function(){return Object(i.a)(r).scale(152.63)}},function(t,n,e){"use strict";function r(t,n,e){var r=t.x,i=t.y,u=n.r+e.r,c=t.r+e.r,o=n.x-r,a=n.y-i,f=o*o+a*a;if(f){var s=.5+((c*=c)-(u*=u))/(2*f),l=Math.sqrt(Math.max(0,2*u*(c+f)-(c-=f)*c-u*u))/(2*f);e.x=r+s*o+l*a,e.y=i+s*a-l*o}else e.x=r+c,e.y=i}function i(t,n){var e=n.x-t.x,r=n.y-t.y,i=t.r+n.r;return i*i-1e-6>e*e+r*r}function u(t){var n=t._,e=t.next._,r=n.r+e.r,i=(n.x*e.r+e.x*n.r)/r,u=(n.y*e.r+e.y*n.r)/r;return i*i+u*u}function c(t){this._=t,this.next=null,this.previous=null}function o(t){if(!(f=t.length))return 0;var n,e,o,f,s,l,h,d,b,v,p;if(n=t[0],n.x=0,n.y=0,!(f>1))return n.r;if(e=t[1],n.x=-e.r,e.x=n.r,e.y=0,!(f>2))return n.r+e.r;r(e,n,o=t[2]),n=new c(n),e=new c(e),o=new c(o),n.next=o.previous=e,e.next=n.previous=o,o.next=e.previous=n;t:for(h=3;h<f;++h){r(n._,e._,o=t[h]),o=new c(o),d=e.next,b=n.previous,v=e._.r,p=n._.r;do{if(v<=p){if(i(d._,o._)){e=d,n.next=e,e.previous=n,--h;continue t}v+=d._.r,d=d.next}else{if(i(b._,o._)){(n=b).next=e,e.previous=n,--h;continue t}p+=b._.r,b=b.previous}}while(d!==b.next);for(o.previous=n,o.next=e,n.next=e.previous=e=o,s=u(n);(o=o.next)!==e;)(l=u(o))<s&&(n=o,s=l);e=n.next}for(n=[e._],o=e;(o=o.next)!==e;)n.push(o._);for(o=Object(a.a)(n),h=0;h<f;++h)n=t[h],n.x-=o.x,n.y-=o.y;return o.r}n.b=o;var a=e(144);n.a=function(t){return o(t),t}},function(t,n,e){"use strict";function r(t,n){var e,r;if(c(n,t))return[n];for(e=0;e<t.length;++e)if(i(n,t[e])&&c(f(t[e],n),t))return[t[e],n];for(e=0;e<t.length-1;++e)for(r=e+1;r<t.length;++r)if(i(f(t[e],t[r]),n)&&i(f(t[e],n),t[r])&&i(f(t[r],n),t[e])&&c(s(t[e],t[r],n),t))return[t[e],t[r],n];throw new Error}function i(t,n){var e=t.r-n.r,r=n.x-t.x,i=n.y-t.y;return e<0||e*e<r*r+i*i}function u(t,n){var e=t.r-n.r+1e-6,r=n.x-t.x,i=n.y-t.y;return e>0&&e*e>r*r+i*i}function c(t,n){for(var e=0;e<n.length;++e)if(!u(t,n[e]))return!1;return!0}function o(t){switch(t.length){case 1:return a(t[0]);case 2:return f(t[0],t[1]);case 3:return s(t[0],t[1],t[2])}}function a(t){return{x:t.x,y:t.y,r:t.r}}function f(t,n){var e=t.x,r=t.y,i=t.r,u=n.x,c=n.y,o=n.r,a=u-e,f=c-r,s=o-i,l=Math.sqrt(a*a+f*f);return{x:(e+u+a/l*s)/2,y:(r+c+f/l*s)/2,r:(l+i+o)/2}}function s(t,n,e){var r=t.x,i=t.y,u=t.r,c=n.x,o=n.y,a=n.r,f=e.x,s=e.y,l=e.r,h=r-c,d=r-f,b=i-o,v=i-s,p=a-u,g=l-u,_=r*r+i*i-u*u,y=_-c*c-o*o+a*a,m=_-f*f-s*s+l*l,O=d*b-h*v,j=(b*m-v*y)/(2*O)-r,x=(v*p-b*g)/O,w=(d*y-h*m)/(2*O)-i,M=(h*g-d*p)/O,k=x*x+M*M-1,T=2*(u+j*x+w*M),N=j*j+w*w-u*u,S=-(k?(T+Math.sqrt(T*T-4*k*N))/(2*k):N/T);return{x:r+j+x*S,y:i+w+M*S,r:S}}var l=e(375);n.a=function(t){for(var n,e,i=0,c=(t=Object(l.a)(l.b.call(t))).length,a=[];i<c;)n=t[i],e&&u(e,n)?++i:(e=o(a=r(a,n)),i=0);return e}},function(t,n,e){"use strict";n.a=function(){return 0},n.b=function(t){return function(){return t}}},function(t,n,e){"use strict";n.a=function(t){t.x0=Math.round(t.x0),t.y0=Math.round(t.y0),t.x1=Math.round(t.x1),t.y1=Math.round(t.y1)}},function(t,n,e){"use strict";var r=e(20);n.a=function t(n){function e(t,e){var r,i;return t=null==t?0:+t,e=null==e?1:+e,function(){var u;if(null!=r)u=r,r=null;else do{r=2*n()-1,u=2*n()-1,i=r*r+u*u}while(!i||i>1);return t+e*u*Math.sqrt(-2*Math.log(i)/i)}}return e.source=t,e}(r.a)},function(t,n,e){"use strict";var r=e(20);n.a=function t(n){function e(t){return function(){for(var e=0,r=0;r<t;++r)e+=n();return e}}return e.source=t,e}(r.a)},function(t,n,e){"use strict";function r(t,n){return function(e){return t(e.responseText,n)}}var i=e(80);n.a=function(t,n){return function(e,u,c){arguments.length<3&&(c=u,u=null);var o=Object(i.a)(e).mimeType(t);return o.row=function(t){return arguments.length?o.response(r(n,u=t)):u},o.row(u),c?o.get(c):o}}},function(t,n,e){"use strict";function r(t){function n(n){var r=n+"",i=e.get(r);if(!i){if(a!==c)return a;e.set(r,i=o.push(n))}return t[(i-1)%t.length]}var e=Object(i.c)(),o=[],a=c;return t=null==t?[]:u.b.call(t),n.domain=function(t){if(!arguments.length)return o.slice();o=[],e=Object(i.c)();for(var r,u,c=-1,a=t.length;++c<a;)e.has(u=(r=t[c])+"")||e.set(u,o.push(r));return n},n.range=function(e){return arguments.length?(t=u.b.call(e),n):t.slice()},n.unknown=function(t){return arguments.length?(a=t,n):a},n.copy=function(){return r().domain(o).range(t).unknown(a)},n}e.d(n,"b",function(){return c}),n.a=r;var i=e(23),u=e(15),c={name:"implicit"}},function(t,n,e){"use strict";n.a=function(t){return+t}},function(t,n,e){"use strict";n.a=function(t,n){var e,r=0,i=(t=t.slice()).length-1,u=t[r],c=t[i];return c<u&&(e=r,r=i,i=e,e=u,u=c,c=e),t[r]=n.floor(u),t[i]=n.ceil(c),t}},function(t,n,e){"use strict";function r(t){return new Date(t)}function i(t){return t instanceof Date?+t:+new Date(+t)}function u(t,n,e,a,f,m,O,j,x){function w(r){return(O(r)<r?S:m(r)<r?A:f(r)<r?E:a(r)<r?C:n(r)<r?e(r)<r?z:P:t(r)<r?q:R)(r)}function M(n,e,r,i){if(null==n&&(n=10),"number"==typeof n){var u=Math.abs(r-e)/n,o=Object(c.e)(function(t){return t[2]}).right(L,u);o===L.length?(i=Object(c.A)(e/y,r/y,n),n=t):o?(i=(o=L[u/L[o-1][2]<L[o][2]/u?o-1:o])[1],n=o[0]):(i=Object(c.A)(e,r,n),n=j)}return null==i?n:n.every(i)}var k=Object(l.b)(l.c,o.m),T=k.invert,N=k.domain,S=x(".%L"),A=x(":%S"),E=x("%I:%M"),C=x("%I %p"),z=x("%a %d"),P=x("%b %d"),q=x("%B"),R=x("%Y"),L=[[O,1,d],[O,5,5*d],[O,15,15*d],[O,30,30*d],[m,1,b],[m,5,5*b],[m,15,15*b],[m,30,30*b],[f,1,v],[f,3,3*v],[f,6,6*v],[f,12,12*v],[a,1,p],[a,2,2*p],[e,1,g],[n,1,_],[n,3,3*_],[t,1,y]];return k.invert=function(t){return new Date(T(t))},k.domain=function(t){return arguments.length?N(s.a.call(t,i)):N().map(r)},k.ticks=function(t,n){var e,r=N(),i=r[0],u=r[r.length-1],c=u<i;return c&&(e=i,i=u,u=e),e=M(t,i,u,n),e=e?e.range(i,u+1):[],c?e.reverse():e},k.tickFormat=function(t,n){return null==n?w:x(n)},k.nice=function(t,n){var e=N();return(t=M(t,e[0],e[e.length-1],n))?N(Object(h.a)(e,t)):k},k.copy=function(){return Object(l.a)(k,u(t,n,e,a,f,m,O,j,x))},k}n.a=u;var c=e(3),o=e(5),a=e(43),f=e(82),s=e(15),l=e(42),h=e(152),d=1e3,b=60*d,v=60*b,p=24*v,g=7*p,_=30*p,y=365*p;n.b=function(){return u(a.D,a.n,a.B,a.a,a.e,a.j,a.r,a.h,f.c).domain([new Date(2e3,0,1),new Date(2e3,0,2)])}},function(t,n,e){"use strict";function r(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function i(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function u(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}function c(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",u=i.length;return r+(u<e?new Array(e-u+1).join(n)+i:i)}function o(t){return t.replace(rt,"\\$&")}function a(t){return new RegExp("^(?:"+t.map(o).join("|")+")","i")}function f(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function s(t,n,e){var r=nt.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function l(t,n,e){var r=nt.exec(n.slice(e));return r?(t.U=+r[0],e+r[0].length):-1}function h(t,n,e){var r=nt.exec(n.slice(e));return r?(t.W=+r[0],e+r[0].length):-1}function d(t,n,e){var r=nt.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function b(t,n,e){var r=nt.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function v(t,n,e){var r=/^(Z)|([+-]\d\d)(?:\:?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function p(t,n,e){var r=nt.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function g(t,n,e){var r=nt.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function _(t,n,e){var r=nt.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function y(t,n,e){var r=nt.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function m(t,n,e){var r=nt.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function O(t,n,e){var r=nt.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function j(t,n,e){var r=nt.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function x(t,n,e){var r=et.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function w(t,n){return c(t.getDate(),n,2)}function M(t,n){return c(t.getHours(),n,2)}function k(t,n){return c(t.getHours()%12||12,n,2)}function T(t,n){return c(1+Q.a.count(Object(Q.D)(t),t),n,3)}function N(t,n){return c(t.getMilliseconds(),n,3)}function S(t,n){return c(t.getMonth()+1,n,2)}function A(t,n){return c(t.getMinutes(),n,2)}function E(t,n){return c(t.getSeconds(),n,2)}function C(t,n){return c(Q.t.count(Object(Q.D)(t),t),n,2)}function z(t){return t.getDay()}function P(t,n){return c(Q.l.count(Object(Q.D)(t),t),n,2)}function q(t,n){return c(t.getFullYear()%100,n,2)}function R(t,n){return c(t.getFullYear()%1e4,n,4)}function L(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+c(n/60|0,"0",2)+c(n%60,"0",2)}function D(t,n){return c(t.getUTCDate(),n,2)}function U(t,n){return c(t.getUTCHours(),n,2)}function F(t,n){return c(t.getUTCHours()%12||12,n,2)}function I(t,n){return c(1+Q.F.count(Object(Q._7)(t),t),n,3)}function Y(t,n){return c(t.getUTCMilliseconds(),n,3)}function B(t,n){return c(t.getUTCMonth()+1,n,2)}function H(t,n){return c(t.getUTCMinutes(),n,2)}function X(t,n){return c(t.getUTCSeconds(),n,2)}function V(t,n){return c(Q.X.count(Object(Q._7)(t),t),n,2)}function W(t){return t.getUTCDay()}function G(t,n){return c(Q.P.count(Object(Q._7)(t),t),n,2)}function J(t,n){return c(t.getUTCFullYear()%100,n,2)}function Z(t,n){return c(t.getUTCFullYear()%1e4,n,4)}function $(){return"+0000"}function K(){return"%"}n.a=function(t){function n(t,n){return function(e){var r,i,u,c=[],o=-1,a=0,f=t.length;for(e instanceof Date||(e=new Date(+e));++o<f;)37===t.charCodeAt(o)&&(c.push(t.slice(a,o)),null!=(i=tt[r=t.charAt(++o)])?r=t.charAt(++o):i="e"===r?" ":"0",(u=n[r])&&(r=u(e,i)),c.push(r),a=o+1);return c.push(t.slice(a,o)),c.join("")}}function e(t,n){return function(e){var r=u(1900);if(c(r,t,e+="",0)!=e.length)return null;if("p"in r&&(r.H=r.H%12+12*r.p),"W"in r||"U"in r){"w"in r||(r.w="W"in r?1:0);var o="Z"in r?i(u(r.y)).getUTCDay():n(u(r.y)).getDay();r.m=0,r.d="W"in r?(r.w+6)%7+7*r.W-(o+5)%7:r.w+7*r.U-(o+6)%7}return"Z"in r?(r.H+=r.Z/100|0,r.M+=r.Z%100,i(r)):n(r)}}function c(t,n,e,r){for(var i,u,c=0,o=n.length,a=e.length;c<o;){if(r>=a)return-1;if(37===(i=n.charCodeAt(c++))){if(i=n.charAt(c++),!(u=yt[i in tt?n.charAt(c++):i])||(r=u(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}var o=t.dateTime,Q=t.date,nt=t.time,et=t.periods,rt=t.days,it=t.shortDays,ut=t.months,ct=t.shortMonths,ot=a(et),at=f(et),ft=a(rt),st=f(rt),lt=a(it),ht=f(it),dt=a(ut),bt=f(ut),vt=a(ct),pt=f(ct),gt={a:function(t){return it[t.getDay()]},A:function(t){return rt[t.getDay()]},b:function(t){return ct[t.getMonth()]},B:function(t){return ut[t.getMonth()]},c:null,d:w,e:w,H:M,I:k,j:T,L:N,m:S,M:A,p:function(t){return et[+(t.getHours()>=12)]},S:E,U:C,w:z,W:P,x:null,X:null,y:q,Y:R,Z:L,"%":K},_t={a:function(t){return it[t.getUTCDay()]},A:function(t){return rt[t.getUTCDay()]},b:function(t){return ct[t.getUTCMonth()]},B:function(t){return ut[t.getUTCMonth()]},c:null,d:D,e:D,H:U,I:F,j:I,L:Y,m:B,M:H,p:function(t){return et[+(t.getUTCHours()>=12)]},S:X,U:V,w:W,W:G,x:null,X:null,y:J,Y:Z,Z:$,"%":K},yt={a:function(t,n,e){var r=lt.exec(n.slice(e));return r?(t.w=ht[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=ft.exec(n.slice(e));return r?(t.w=st[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=vt.exec(n.slice(e));return r?(t.m=pt[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=dt.exec(n.slice(e));return r?(t.m=bt[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,n,e){return c(t,o,n,e)},d:g,e:g,H:y,I:y,j:_,L:j,m:p,M:m,p:function(t,n,e){var r=ot.exec(n.slice(e));return r?(t.p=at[r[0].toLowerCase()],e+r[0].length):-1},S:O,U:l,w:s,W:h,x:function(t,n,e){return c(t,Q,n,e)},X:function(t,n,e){return c(t,nt,n,e)},y:b,Y:d,Z:v,"%":x};return gt.x=n(Q,gt),gt.X=n(nt,gt),gt.c=n(o,gt),_t.x=n(Q,_t),_t.X=n(nt,_t),_t.c=n(o,_t),{format:function(t){var e=n(t+="",gt);return e.toString=function(){return t},e},parse:function(t){var n=e(t+="",r);return n.toString=function(){return t},n},utcFormat:function(t){var e=n(t+="",_t);return e.toString=function(){return t},e},utcParse:function(t){var n=e(t,i);return n.toString=function(){return t},n}}};var Q=e(43),tt={"-":"",_:" ",0:"0"},nt=/^\s*\d+/,et=/^%/,rt=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g},function(t,n,e){"use strict";e.d(n,"b",function(){return i});var r=e(83),i="%Y-%m-%dT%H:%M:%S.%LZ",u=Date.prototype.toISOString?function(t){return t.toISOString()}:Object(r.d)(i);n.a=u},function(t,n,e){"use strict";var r=e(13),i=e(16),u=e(44),c=e(84),o=e(85);n.a=function(){function t(t){var n,i,u,c,o,v=t.length,p=!1,g=new Array(v),_=new Array(v);for(null==h&&(b=d(o=Object(r.a)())),n=0;n<=v;++n){if(!(n<v&&l(c=t[n],n,t))===p)if(p=!p)i=n,b.areaStart(),b.lineStart();else{for(b.lineEnd(),b.lineStart(),u=n-1;u>=i;--u)b.point(g[u],_[u]);b.lineEnd(),b.areaEnd()}p&&(g[n]=+e(c,n,t),_[n]=+f(c,n,t),b.point(a?+a(c,n,t):g[n],s?+s(c,n,t):_[n]))}if(o)return b=null,o+""||null}function n(){return Object(c.a)().defined(l).curve(d).context(h)}var e=o.a,a=null,f=Object(i.a)(0),s=o.b,l=Object(i.a)(!0),h=null,d=u.a,b=null;return t.x=function(n){return arguments.length?(e="function"==typeof n?n:Object(i.a)(+n),a=null,t):e},t.x0=function(n){return arguments.length?(e="function"==typeof n?n:Object(i.a)(+n),t):e},t.x1=function(n){return arguments.length?(a=null==n?null:"function"==typeof n?n:Object(i.a)(+n),t):a},t.y=function(n){return arguments.length?(f="function"==typeof n?n:Object(i.a)(+n),s=null,t):f},t.y0=function(n){return arguments.length?(f="function"==typeof n?n:Object(i.a)(+n),t):f},t.y1=function(n){return arguments.length?(s=null==n?null:"function"==typeof n?n:Object(i.a)(+n),t):s},t.lineX0=t.lineY0=function(){return n().x(e).y(f)},t.lineY1=function(){return n().x(e).y(s)},t.lineX1=function(){return n().x(a).y(f)},t.defined=function(n){return arguments.length?(l="function"==typeof n?n:Object(i.a)(!!n),t):l},t.curve=function(n){return arguments.length?(d=n,null!=h&&(b=d(h)),t):d},t.context=function(n){return arguments.length?(null==n?h=b=null:b=d(h=n),t):h},t}},function(t,n,e){"use strict";function r(t){this._curve=t}function i(t){function n(n){return new r(t(n))}return n._curve=t,n}e.d(n,"a",function(){return u}),n.b=i;var u=i(e(44).a);r.prototype={areaStart:function(){this._curve.areaStart()},areaEnd:function(){this._curve.areaEnd()},lineStart:function(){this._curve.lineStart()},lineEnd:function(){this._curve.lineEnd()},point:function(t,n){this._curve.point(n*Math.sin(t),n*-Math.cos(t))}}},function(t,n,e){"use strict";function r(t){var n=t.curve;return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t.curve=function(t){return arguments.length?n(Object(i.b)(t)):n()._curve},t}n.b=r;var i=e(157),u=e(84);n.a=function(){return r(Object(u.a)().curve(i.a))}},function(t,n,e){"use strict";n.a=function(t,n){return[(n=+n)*Math.cos(t-=Math.PI/2),n*Math.sin(t)]}},function(t,n,e){"use strict";e.d(n,"a",function(){return r});var r=Array.prototype.slice},function(t,n,e){"use strict";var r=e(29);n.a={draw:function(t,n){var e=Math.sqrt(n/r.j);t.moveTo(e,0),t.arc(0,0,e,0,r.m)}}},function(t,n,e){"use strict";n.a={draw:function(t,n){var e=Math.sqrt(n/5)/2;t.moveTo(-3*e,-e),t.lineTo(-e,-e),t.lineTo(-e,-3*e),t.lineTo(e,-3*e),t.lineTo(e,-e),t.lineTo(3*e,-e),t.lineTo(3*e,e),t.lineTo(e,e),t.lineTo(e,3*e),t.lineTo(-e,3*e),t.lineTo(-e,e),t.lineTo(-3*e,e),t.closePath()}}},function(t,n,e){"use strict";var r=Math.sqrt(1/3),i=2*r;n.a={draw:function(t,n){var e=Math.sqrt(n/i),u=e*r;t.moveTo(0,-e),t.lineTo(u,0),t.lineTo(0,e),t.lineTo(-u,0),t.closePath()}}},function(t,n,e){"use strict";var r=e(29),i=Math.sin(r.j/10)/Math.sin(7*r.j/10),u=Math.sin(r.m/10)*i,c=-Math.cos(r.m/10)*i;n.a={draw:function(t,n){var e=Math.sqrt(.8908130915292852*n),i=u*e,o=c*e;t.moveTo(0,-e),t.lineTo(i,o);for(var a=1;a<5;++a){var f=r.m*a/5,s=Math.cos(f),l=Math.sin(f);t.lineTo(l*e,-s*e),t.lineTo(s*i-l*o,l*i+s*o)}t.closePath()}}},function(t,n,e){"use strict";n.a={draw:function(t,n){var e=Math.sqrt(n),r=-e/2;t.rect(r,r,e,e)}}},function(t,n,e){"use strict";var r=Math.sqrt(3);n.a={draw:function(t,n){var e=-Math.sqrt(n/(3*r));t.moveTo(0,2*e),t.lineTo(-r*e,-e),t.lineTo(r*e,-e),t.closePath()}}},function(t,n,e){"use strict";var r=-.5,i=Math.sqrt(3)/2,u=1/Math.sqrt(12),c=3*(u/2+1);n.a={draw:function(t,n){var e=Math.sqrt(n/c),o=e/2,a=e*u,f=o,s=e*u+e,l=-f,h=s;t.moveTo(o,a),t.lineTo(f,s),t.lineTo(l,h),t.lineTo(r*o-i*a,i*o+r*a),t.lineTo(r*f-i*s,i*f+r*s),t.lineTo(r*l-i*h,i*l+r*h),t.lineTo(r*o+i*a,r*a-i*o),t.lineTo(r*f+i*s,r*s-i*f),t.lineTo(r*l+i*h,r*h-i*l),t.closePath()}}},function(t,n,e){"use strict";function r(t,n){this._context=t,this._k=(1-n)/6}n.a=r;var i=e(45),u=e(47);r.prototype={areaStart:i.a,areaEnd:i.a,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Object(u.c)(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.b=function t(n){function e(t){return new r(t,n)}return e.tension=function(n){return t(+n)},e}(0)},function(t,n,e){"use strict";function r(t,n){this._context=t,this._k=(1-n)/6}n.a=r;var i=e(47);r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(i.c)(this,t,n)}this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.b=function t(n){function e(t){return new r(t,n)}return e.tension=function(n){return t(+n)},e}(0)},function(t,n,e){"use strict";function r(t,n){var e=t.site,r=n.left,i=n.right;return e===i&&(i=r,r=e),i?Math.atan2(i[1]-r[1],i[0]-r[0]):(e===r?(r=n[1],i=n[0]):(r=n[0],i=n[1]),Math.atan2(r[0]-i[0],i[1]-r[1]))}function i(t,n){return n[+(n.left!==t.site)]}function u(t,n){return n[+(n.left===t.site)]}n.c=function(t){return o.b[t.index]={site:t,halfedges:[]}},n.a=i,n.d=function(){for(var t,n,e,i,u=0,c=o.b.length;u<c;++u)if((t=o.b[u])&&(i=(n=t.halfedges).length)){var a=new Array(i),f=new Array(i);for(e=0;e<i;++e)a[e]=e,f[e]=r(t,o.e[n[e]]);for(a.sort(function(t,n){return f[n]-f[t]}),e=0;e<i;++e)f[e]=n[a[e]];for(e=0;e<i;++e)n[e]=f[e]}},n.b=function(t,n,e,r){var a,f,s,l,h,d,b,v,p,g,_,y,m=o.b.length,O=!0;for(a=0;a<m;++a)if(f=o.b[a]){for(s=f.site,l=(h=f.halfedges).length;l--;)o.e[h[l]]||h.splice(l,1);for(l=0,d=h.length;l<d;)_=(g=u(f,o.e[h[l]]))[0],y=g[1],v=(b=i(f,o.e[h[++l%d]]))[0],p=b[1],(Math.abs(_-v)>o.f||Math.abs(y-p)>o.f)&&(h.splice(l,0,o.e.push(Object(c.b)(s,g,Math.abs(_-t)<o.f&&r-y>o.f?[t,Math.abs(v-t)<o.f?p:r]:Math.abs(y-r)<o.f&&e-_>o.f?[Math.abs(p-r)<o.f?v:e,r]:Math.abs(_-e)<o.f&&y-n>o.f?[e,Math.abs(v-e)<o.f?p:n]:Math.abs(y-n)<o.f&&_-t>o.f?[Math.abs(p-n)<o.f?v:t,n]:null))-1),++d);d&&(O=!1)}if(O){var j,x,w,M=1/0;for(a=0,O=null;a<m;++a)(f=o.b[a])&&(w=(j=(s=f.site)[0]-t)*j+(x=s[1]-n)*x)<M&&(M=w,O=f);if(O){var k=[t,n],T=[t,r],N=[e,r],S=[e,n];O.halfedges.push(o.e.push(Object(c.b)(s=O.site,k,T))-1,o.e.push(Object(c.b)(s,T,N))-1,o.e.push(Object(c.b)(s,N,S))-1,o.e.push(Object(c.b)(s,S,k))-1)}}for(a=0;a<m;++a)(f=o.b[a])&&(f.halfedges.length||delete o.b[a])};var c=e(89),o=e(32)},function(t,n,e){"use strict";function r(){Object(u.a)(this),this.x=this.y=this.arc=this.site=this.cy=null}e.d(n,"c",function(){return i}),n.a=function(t){var n=t.P,e=t.N;if(n&&e){var u=n.site,a=t.site,f=e.site;if(u!==f){var s=a[0],l=a[1],h=u[0]-s,d=u[1]-l,b=f[0]-s,v=f[1]-l,p=2*(h*v-d*b);if(!(p>=-c.g)){var g=h*h+d*d,_=b*b+v*v,y=(v*g-d*_)/p,m=(h*_-b*g)/p,O=o.pop()||new r;O.arc=t,O.site=a,O.x=y+s,O.y=(O.cy=m+l)+Math.sqrt(y*y+m*m),t.circle=O;for(var j=null,x=c.c._;x;)if(O.y<x.y||O.y===x.y&&O.x<=x.x){if(!x.L){j=x.P;break}x=x.L}else{if(!x.R){j=x;break}x=x.R}c.c.insert(j,O),j||(i=O)}}}},n.b=function(t){var n=t.circle;n&&(n.P||(i=n.N),c.c.remove(n),o.push(n),Object(u.a)(n),t.circle=null)};var i,u=e(88),c=e(32),o=[]},function(t,n,e){"use strict";function r(t,n,e){this.k=t,this.x=n,this.y=e}function i(t){return t.__zoom||u}n.a=r,e.d(n,"c",function(){return u}),n.b=i,r.prototype={constructor:r,scale:function(t){return 1===t?this:new r(this.k*t,this.x,this.y)},translate:function(t,n){return 0===t&0===n?this:new r(this.k,this.x+this.k*t,this.y+this.k*n)},apply:function(t){return[t[0]*this.k+this.x,t[1]*this.k+this.y]},applyX:function(t){return t*this.k+this.x},applyY:function(t){return t*this.k+this.y},invert:function(t){return[(t[0]-this.x)/this.k,(t[1]-this.y)/this.k]},invertX:function(t){return(t-this.x)/this.k},invertY:function(t){return(t-this.y)/this.k},rescaleX:function(t){return t.copy().domain(t.range().map(this.invertX,this).map(t.invert,t))},rescaleY:function(t){return t.copy().domain(t.range().map(this.invertY,this).map(t.invert,t))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};var u=new r(1,0,0);i.prototype=r.prototype},,,,,,,,,,,function(t,n,e){"use strict";e.d(n,"a",function(){return r});var r="4.11.0"},function(t,n,e){"use strict";var r=e(94);n.a=function(t,n,e){var i,u,c,o,a=t.length,f=n.length,s=new Array(a*f);for(null==e&&(e=r.b),i=c=0;i<a;++i)for(o=t[i],u=0;u<f;++u,++c)s[c]=e(o,n[u]);return s}},function(t,n,e){"use strict";n.a=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN}},function(t,n,e){"use strict";var r=e(98),i=e(92),u=e(187),c=e(97),o=e(188),a=e(99),f=e(100),s=e(101);n.a=function(){function t(t){var r,u,c=t.length,o=new Array(c);for(r=0;r<c;++r)o[r]=n(t[r],r,t);var s=e(o),h=s[0],d=s[1],b=l(o,h,d);Array.isArray(b)||(b=Object(f.c)(h,d,b),b=Object(a.a)(Math.ceil(h/b)*b,Math.floor(d/b)*b,b));for(var v=b.length;b[0]<=h;)b.shift(),--v;for(;b[v-1]>d;)b.pop(),--v;var p,g=new Array(v+1);for(r=0;r<=v;++r)(p=g[r]=[]).x0=r>0?b[r-1]:h,p.x1=r<v?b[r]:d;for(r=0;r<c;++r)h<=(u=o[r])&&u<=d&&g[Object(i.c)(b,u,0,v)].push(t[r]);return g}var n=o.a,e=c.a,l=s.a;return t.value=function(e){return arguments.length?(n="function"==typeof e?e:Object(u.a)(e),t):n},t.domain=function(n){return arguments.length?(e="function"==typeof n?n:Object(u.a)([n[0],n[1]]),t):e},t.thresholds=function(n){return arguments.length?(l="function"==typeof n?n:Array.isArray(n)?Object(u.a)(r.b.call(n)):Object(u.a)(n),t):l},t}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";n.a=function(t){return t}},function(t,n,e){"use strict";var r=e(98),i=e(17),u=e(21),c=e(48);n.a=function(t,n,e){return t=r.a.call(t,u.a).sort(i.a),Math.ceil((e-n)/(2*(Object(c.a)(t,.75)-Object(c.a)(t,.25))*Math.pow(t.length,-1/3)))}},function(t,n,e){"use strict";var r=e(95);n.a=function(t,n,e){return Math.ceil((e-n)/(3.5*Object(r.a)(t)*Math.pow(t.length,-1/3)))}},function(t,n,e){"use strict";n.a=function(t,n){var e,r,i=t.length,u=-1;if(null==n){for(;++u<i;)if(null!=(e=t[u])&&e>=e)for(r=e;++u<i;)null!=(e=t[u])&&e>r&&(r=e)}else for(;++u<i;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=e;++u<i;)null!=(e=n(t[u],u,t))&&e>r&&(r=e);return r}},function(t,n,e){"use strict";var r=e(21);n.a=function(t,n){var e,i=t.length,u=i,c=-1,o=0;if(null==n)for(;++c<i;)isNaN(e=Object(r.a)(t[c]))?--u:o+=e;else for(;++c<i;)isNaN(e=Object(r.a)(n(t[c],c,t)))?--u:o+=e;if(u)return o/u}},function(t,n,e){"use strict";var r=e(17),i=e(21),u=e(48);n.a=function(t,n){var e,c=t.length,o=-1,a=[];if(null==n)for(;++o<c;)isNaN(e=Object(i.a)(t[o]))||a.push(e);else for(;++o<c;)isNaN(e=Object(i.a)(n(t[o],o,t)))||a.push(e);return Object(u.a)(a.sort(r.a),.5)}},function(t,n,e){"use strict";n.a=function(t){for(var n,e,r,i=t.length,u=-1,c=0;++u<i;)c+=t[u].length;for(e=new Array(c);--i>=0;)for(n=(r=t[i]).length;--n>=0;)e[--c]=r[n];return e}},function(t,n,e){"use strict";n.a=function(t,n){for(var e=n.length,r=new Array(e);e--;)r[e]=t[n[e]];return r}},function(t,n,e){"use strict";var r=e(17);n.a=function(t,n){if(e=t.length){var e,i,u=0,c=0,o=t[c];for(null==n&&(n=r.a);++u<e;)(n(i=t[u],o)<0||0!==n(o,o))&&(o=i,c=u);return 0===n(o,o)?c:void 0}}},function(t,n,e){"use strict";n.a=function(t,n,e){for(var r,i,u=(null==e?t.length:e)-(n=null==n?0:+n);u;)i=Math.random()*u--|0,r=t[u+n],t[u+n]=t[i+n],t[i+n]=r;return t}},function(t,n,e){"use strict";n.a=function(t,n){var e,r=t.length,i=-1,u=0;if(null==n)for(;++i<r;)(e=+t[i])&&(u+=e);else for(;++i<r;)(e=+n(t[i],i,t))&&(u+=e);return u}},function(t,n,e){"use strict";var r=e(103);n.a=function(){return Object(r.a)(arguments)}},function(t,n,e){"use strict";var r=e(201);e.d(n,"d",function(){return r.d}),e.d(n,"c",function(){return r.c}),e.d(n,"a",function(){return r.a}),e.d(n,"b",function(){return r.b})},function(t,n,e){"use strict";function r(t){return"translate("+(t+.5)+",0)"}function i(t){return"translate(0,"+(t+.5)+")"}function u(t){return function(n){return+t(n)}}function c(t){var n=Math.max(0,t.bandwidth()-1)/2;return t.round()&&(n=Math.round(n)),function(e){return+t(e)+n}}function o(){return!this.__axis}function a(t,n){function e(e){var r=null==p?n.ticks?n.ticks.apply(n,a):n.domain():p,i=null==g?n.tickFormat?n.tickFormat.apply(n,a):s.a:g,f=Math.max(_,0)+m,w=n.range(),M=+w[0]+.5,k=+w[w.length-1]+.5,T=(n.bandwidth?c:u)(n.copy()),N=e.selection?e.selection():e,S=N.selectAll(".domain").data([null]),A=N.selectAll(".tick").data(r,n).order(),E=A.exit(),C=A.enter().append("g").attr("class","tick"),z=A.select("line"),P=A.select("text");S=S.merge(S.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),A=A.merge(C),z=z.merge(C.append("line").attr("stroke","#000").attr(j+"2",O*_)),P=P.merge(C.append("text").attr("fill","#000").attr(j,O*f).attr("dy",t===l?"0em":t===d?"0.71em":"0.32em")),e!==N&&(S=S.transition(e),A=A.transition(e),z=z.transition(e),P=P.transition(e),E=E.transition(e).attr("opacity",v).attr("transform",function(t){return isFinite(t=T(t))?x(t):this.getAttribute("transform")}),C.attr("opacity",v).attr("transform",function(t){var n=this.parentNode.__axis;return x(n&&isFinite(n=n(t))?n:T(t))})),E.remove(),S.attr("d",t===b||t==h?"M"+O*y+","+M+"H0.5V"+k+"H"+O*y:"M"+M+","+O*y+"V0.5H"+k+"V"+O*y),A.attr("opacity",1).attr("transform",function(t){return x(T(t))}),z.attr(j+"2",O*_),P.attr(j,O*f).text(i),N.filter(o).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",t===h?"start":t===b?"end":"middle"),N.each(function(){this.__axis=T})}var a=[],p=null,g=null,_=6,y=6,m=3,O=t===l||t===b?-1:1,j=t===b||t===h?"x":"y",x=t===l||t===d?r:i;return e.scale=function(t){return arguments.length?(n=t,e):n},e.ticks=function(){return a=f.a.call(arguments),e},e.tickArguments=function(t){return arguments.length?(a=null==t?[]:f.a.call(t),e):a.slice()},e.tickValues=function(t){return arguments.length?(p=null==t?null:f.a.call(t),e):p&&p.slice()},e.tickFormat=function(t){return arguments.length?(g=t,e):g},e.tickSize=function(t){return arguments.length?(_=y=+t,e):_},e.tickSizeInner=function(t){return arguments.length?(_=+t,e):_},e.tickSizeOuter=function(t){return arguments.length?(y=+t,e):y},e.tickPadding=function(t){return arguments.length?(m=+t,e):m},e}n.d=function(t){return a(l,t)},n.c=function(t){return a(h,t)},n.a=function(t){return a(d,t)},n.b=function(t){return a(b,t)};var f=e(202),s=e(203),l=1,h=2,d=3,b=4,v=1e-6},function(t,n,e){"use strict";e.d(n,"a",function(){return r});var r=Array.prototype.slice},function(t,n,e){"use strict";n.a=function(t){return t}},function(t,n,e){"use strict";var r=e(205);e.d(n,"a",function(){return r.d}),e.d(n,"c",function(){return r.b}),e.d(n,"d",function(){return r.c}),e.d(n,"b",function(){return r.a})},function(t,n,e){"use strict";function r(t){return{type:t}}function i(){return!h.c.button}function u(){var t=this.ownerSVGElement||this;return[[0,0],[t.width.baseVal.value,t.height.baseVal.value]]}function c(t){for(;!t.__brush;)if(!(t=t.parentNode))return;return t.__brush}function o(t){return t[0][0]===t[1][0]||t[0][1]===t[1][1]}function a(t){function n(n){var i=n.property("__brush",A).selectAll(".overlay").data([r("overlay")]);i.enter().append("rect").attr("class","overlay").attr("pointer-events","all").attr("cursor",w.overlay).merge(i).each(function(){var t=c(this).extent;Object(h.i)(this).attr("x",t[0][0]).attr("y",t[0][1]).attr("width",t[1][0]-t[0][0]).attr("height",t[1][1]-t[0][1])}),n.selectAll(".selection").data([r("selection")]).enter().append("rect").attr("class","selection").attr("cursor",w.selection).attr("fill","#777").attr("fill-opacity",.3).attr("stroke","#fff").attr("shape-rendering","crispEdges");var u=n.selectAll(".handle").data(t.handles,function(t){return t.type});u.exit().remove(),u.enter().append("rect").attr("class",function(t){return"handle handle--"+t.type}).attr("cursor",function(t){return w[t.type]}),n.each(e).attr("fill","none").attr("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush touchstart.brush",S)}function e(){var t=Object(h.i)(this),n=c(this).selection;n?(t.selectAll(".selection").style("display",null).attr("x",n[0][0]).attr("y",n[0][1]).attr("width",n[1][0]-n[0][0]).attr("height",n[1][1]-n[0][1]),t.selectAll(".handle").style("display",null).attr("x",function(t){return"e"===t.type[t.type.length-1]?n[1][0]-q/2:n[0][0]-q/2}).attr("y",function(t){return"s"===t.type[0]?n[1][1]-q/2:n[0][1]-q/2}).attr("width",function(t){return"n"===t.type||"s"===t.type?n[1][0]-n[0][0]+q:q}).attr("height",function(t){return"e"===t.type||"w"===t.type?n[1][1]-n[0][1]+q:q})):t.selectAll(".selection,.handle").style("display","none").attr("x",null).attr("y",null).attr("width",null).attr("height",null)}function a(t,n){return t.__brush.emitter||new x(t,n)}function x(t,n){this.that=t,this.args=n,this.state=t.__brush,this.active=0}function S(){function n(){var t=Object(h.f)(D);!Z||R||L||(Math.abs(t[0]-K[0])>Math.abs(t[1]-K[1])?L=!0:R=!0),K=t,q=!0,Object(p.a)(),r()}function r(){var t;switch(C=K[0]-$[0],P=K[1]-$[1],F){case _:case g:I&&(C=Math.max(V-u,Math.min(G-v,C)),f=u+C,x=v+C),Y&&(P=Math.max(W-l,Math.min(J-S,P)),b=l+P,A=S+P);break;case y:I<0?(C=Math.max(V-u,Math.min(G-u,C)),f=u+C,x=v):I>0&&(C=Math.max(V-v,Math.min(G-v,C)),f=u,x=v+C),Y<0?(P=Math.max(W-l,Math.min(J-l,P)),b=l+P,A=S):Y>0&&(P=Math.max(W-S,Math.min(J-S,P)),b=l,A=S+P);break;case m:I&&(f=Math.max(V,Math.min(G,u-C*I)),x=Math.max(V,Math.min(G,v+C*I))),Y&&(b=Math.max(W,Math.min(J,l-P*Y)),A=Math.max(W,Math.min(J,S+P*Y)))}x<f&&(I*=-1,t=u,u=v,v=t,t=f,f=x,x=t,U in M&&nt.attr("cursor",w[U=M[U]])),A<b&&(Y*=-1,t=l,l=S,S=t,t=b,b=A,A=t,U in k&&nt.attr("cursor",w[U=k[U]])),B.selection&&(X=B.selection),R&&(f=X[0][0],x=X[1][0]),L&&(b=X[0][1],A=X[1][1]),X[0][0]===f&&X[0][1]===b&&X[1][0]===x&&X[1][1]===A||(B.selection=[[f,b],[x,A]],e.call(D),Q.brush())}function i(){if(Object(p.b)(),h.c.touches){if(h.c.touches.length)return;E&&clearTimeout(E),E=setTimeout(function(){E=null},500),tt.on("touchmove.brush touchend.brush touchcancel.brush",null)}else Object(s.c)(h.c.view,q),et.on("keydown.brush keyup.brush mousemove.brush mouseup.brush",null);tt.attr("pointer-events","all"),nt.attr("cursor",w.overlay),B.selection&&(X=B.selection),o(X)&&(B.selection=null,e.call(D)),Q.end()}if(h.c.touches){if(h.c.changedTouches.length<h.c.touches.length)return Object(p.a)()}else if(E)return;if(z.apply(this,arguments)){var u,f,l,b,v,x,S,A,C,P,q,R,L,D=this,U=h.c.target.__data__.type,F="selection"===(h.c.metaKey?U="overlay":U)?g:h.c.altKey?m:y,I=t===j?null:T[U],Y=t===O?null:N[U],B=c(D),H=B.extent,X=B.selection,V=H[0][0],W=H[0][1],G=H[1][0],J=H[1][1],Z=I&&Y&&h.c.shiftKey,$=Object(h.f)(D),K=$,Q=a(D,arguments).beforestart();"overlay"===U?B.selection=X=[[u=t===j?V:$[0],l=t===O?W:$[1]],[v=t===j?G:u,S=t===O?J:l]]:(u=X[0][0],l=X[0][1],v=X[1][0],S=X[1][1]),f=u,b=l,x=v,A=S;var tt=Object(h.i)(D).attr("pointer-events","none"),nt=tt.selectAll(".overlay").attr("cursor",w[U]);if(h.c.touches)tt.on("touchmove.brush",n,!0).on("touchend.brush touchcancel.brush",i,!0);else{var et=Object(h.i)(h.c.view).on("keydown.brush",function(){switch(h.c.keyCode){case 16:Z=I&&Y;break;case 18:F===y&&(I&&(v=x-C*I,u=f+C*I),Y&&(S=A-P*Y,l=b+P*Y),F=m,r());break;case 32:F!==y&&F!==m||(I<0?v=x-C:I>0&&(u=f-C),Y<0?S=A-P:Y>0&&(l=b-P),F=_,nt.attr("cursor",w.selection),r());break;default:return}Object(p.a)()},!0).on("keyup.brush",function(){switch(h.c.keyCode){case 16:Z&&(R=L=Z=!1,r());break;case 18:F===m&&(I<0?v=x:I>0&&(u=f),Y<0?S=A:Y>0&&(l=b),F=y,r());break;case 32:F===_&&(h.c.altKey?(I&&(v=x-C*I,u=f+C*I),Y&&(S=A-P*Y,l=b+P*Y),F=m):(I<0?v=x:I>0&&(u=f),Y<0?S=A:Y>0&&(l=b),F=y),nt.attr("cursor",w[U]),r());break;default:return}Object(p.a)()},!0).on("mousemove.brush",n,!0).on("mouseup.brush",i,!0);Object(s.b)(h.c.view)}Object(p.b)(),Object(d.b)(D),e.call(D),Q.start()}}function A(){var n=this.__brush||{selection:null};return n.extent=C.apply(this,arguments),n.dim=t,n}var E,C=u,z=i,P=Object(f.a)(n,"start","brush","end"),q=6;return n.move=function(n,r){n.selection?n.on("start.brush",function(){a(this,arguments).beforestart().start()}).on("interrupt.brush end.brush",function(){a(this,arguments).end()}).tween("brush",function(){function n(t){u.selection=1===t&&o(s)?null:h(t),e.call(i),c.brush()}var i=this,u=i.__brush,c=a(i,arguments),f=u.selection,s=t.input("function"==typeof r?r.apply(this,arguments):r,u.extent),h=Object(l.a)(f,s);return f&&s?n:n(1)}):n.each(function(){var n=this,i=arguments,u=n.__brush,c=t.input("function"==typeof r?r.apply(n,i):r,u.extent),f=a(n,i).beforestart();Object(d.b)(n),u.selection=null==c||o(c)?null:c,e.call(n),f.start().brush().end()})},x.prototype={beforestart:function(){return 1==++this.active&&(this.state.emitter=this,this.starting=!0),this},start:function(){return this.starting&&(this.starting=!1,this.emit("start")),this},brush:function(){return this.emit("brush"),this},end:function(){return 0==--this.active&&(delete this.state.emitter,this.emit("end")),this},emit:function(e){Object(h.b)(new v.a(n,e,t.output(this.state.selection)),P.apply,P,[e,this.that,this.args])}},n.extent=function(t){return arguments.length?(C="function"==typeof t?t:Object(b.a)([[+t[0][0],+t[0][1]],[+t[1][0],+t[1][1]]]),n):C},n.filter=function(t){return arguments.length?(z="function"==typeof t?t:Object(b.a)(!!t),n):z},n.handleSize=function(t){return arguments.length?(q=+t,n):q},n.on=function(){var t=P.on.apply(P,arguments);return t===P?n:t},n}n.a=function(t){var n=t.__brush;return n?n.dim.output(n.selection):null},n.b=function(){return a(O)},n.c=function(){return a(j)};var f=e(12),s=e(49),l=e(5),h=e(1),d=e(62),b=e(287),v=e(288),p=e(289),g={name:"drag"},_={name:"space"},y={name:"handle"},m={name:"center"},O={name:"x",handles:["e","w"].map(r),input:function(t,n){return t&&[[t[0],n[0][1]],[t[1],n[1][1]]]},output:function(t){return t&&[t[0][0],t[1][0]]}},j={name:"y",handles:["n","s"].map(r),input:function(t,n){return t&&[[n[0][0],t[0]],[n[1][0],t[1]]]},output:function(t){return t&&[t[0][1],t[1][1]]}},x={name:"xy",handles:["n","e","s","w","nw","ne","se","sw"].map(r),input:function(t){return t},output:function(t){return t}},w={overlay:"crosshair",selection:"move",n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},M={e:"w",w:"e",nw:"ne",ne:"nw",se:"sw",sw:"se"},k={n:"s",s:"n",nw:"sw",ne:"se",se:"ne",sw:"nw"},T={overlay:1,selection:1,n:null,e:1,s:null,w:-1,nw:-1,ne:1,se:1,sw:-1},N={overlay:1,selection:1,n:-1,e:null,s:1,w:null,nw:-1,ne:-1,se:1,sw:1};n.d=function(){return a(x)}},function(t,n,e){"use strict";function r(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new i(r)}function i(t){this._=t}function u(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}function c(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function o(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=a,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}var a={value:function(){}};i.prototype=r.prototype={constructor:i,on:function(t,n){var e,r=this._,i=u(t+"",r),a=-1,f=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++a<f;)if(e=(t=i[a]).type)r[e]=o(r[e],t.name,n);else if(null==n)for(e in r)r[e]=o(r[e],t.name,null);return this}for(;++a<f;)if((e=(t=i[a]).type)&&(e=c(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new i(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),u=0;u<e;++u)i[u]=arguments[u+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(u=0,e=(r=this._[t]).length;u<e;++u)r[u].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,u=r.length;i<u;++i)r[i].value.apply(n,e)}},n.a=r},function(t,n,e){"use strict";function r(){return!a.c.button}function i(){return this.parentNode}function u(t){return null==t?{x:a.c.x,y:a.c.y}:t}function c(){return"ontouchstart"in this}var o=e(12),a=e(1),f=e(109),s=e(110),l=e(241),h=e(242);n.a=function(){function t(t){t.on("mousedown.drag",n).filter(M).on("touchstart.drag",b).on("touchmove.drag",v).on("touchend.drag touchcancel.drag",p).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function n(){if(!O&&j.apply(this,arguments)){var t=g("mouse",x.apply(this,arguments),a.f,this,arguments);t&&(Object(a.i)(a.c.view).on("mousemove.drag",e,!0).on("mouseup.drag",d,!0),Object(f.a)(a.c.view),Object(s.b)(),m=!1,_=a.c.clientX,y=a.c.clientY,t("start"))}}function e(){if(Object(s.a)(),!m){var t=a.c.clientX-_,n=a.c.clientY-y;m=t*t+n*n>S}k.mouse("drag")}function d(){Object(a.i)(a.c.view).on("mousemove.drag mouseup.drag",null),Object(f.b)(a.c.view,m),Object(s.a)(),k.mouse("end")}function b(){if(j.apply(this,arguments)){var t,n,e=a.c.changedTouches,r=x.apply(this,arguments),i=e.length;for(t=0;t<i;++t)(n=g(e[t].identifier,r,a.o,this,arguments))&&(Object(s.b)(),n("start"))}}function v(){var t,n,e=a.c.changedTouches,r=e.length;for(t=0;t<r;++t)(n=k[e[t].identifier])&&(Object(s.a)(),n("drag"))}function p(){var t,n,e=a.c.changedTouches,r=e.length;for(O&&clearTimeout(O),O=setTimeout(function(){O=null},500),t=0;t<r;++t)(n=k[e[t].identifier])&&(Object(s.b)(),n("end"))}function g(n,e,r,i,u){var c,o,f,s=r(e,n),l=T.copy();if(Object(a.b)(new h.a(t,"beforestart",c,n,N,s[0],s[1],0,0,l),function(){return null!=(a.c.subject=c=w.apply(i,u))&&(o=c.x-s[0]||0,f=c.y-s[1]||0,!0)}))return function d(b){var v,p=s;switch(b){case"start":k[n]=d,v=N++;break;case"end":delete k[n],--N;case"drag":s=r(e,n),v=N}Object(a.b)(new h.a(t,b,c,n,v,s[0]+o,s[1]+f,s[0]-p[0],s[1]-p[1],l),l.apply,l,[b,i,u])}}var _,y,m,O,j=r,x=i,w=u,M=c,k={},T=Object(o.a)("start","drag","end"),N=0,S=0;return t.filter=function(n){return arguments.length?(j="function"==typeof n?n:Object(l.a)(!!n),t):j},t.container=function(n){return arguments.length?(x="function"==typeof n?n:Object(l.a)(n),t):x},t.subject=function(n){return arguments.length?(w="function"==typeof n?n:Object(l.a)(n),t):w},t.touchable=function(n){return arguments.length?(M="function"==typeof n?n:Object(l.a)(!!n),t):M},t.on=function(){var n=T.on.apply(T,arguments);return n===T?t:n},t.clickDistance=function(n){return arguments.length?(S=(n=+n)*n,t):Math.sqrt(S)},t}},function(t,n,e){"use strict";function r(){return new i}function i(){this._="@"+(++u).toString(36)}n.a=r;var u=0;i.prototype=r.prototype={constructor:i,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}}},function(t,n,e){"use strict";var r=e(53),i=e(55);n.a=function(t){var n=Object(r.a)();return n.changedTouches&&(n=n.changedTouches[0]),Object(i.a)(t,n)}},function(t,n,e){"use strict";var r=e(4);n.a=function(t){return"string"==typeof t?new r.a([[document.querySelector(t)]],[document.documentElement]):new r.a([[t]],r.c)}},function(t,n,e){"use strict";var r=e(4),i=e(56);n.a=function(t){"function"!=typeof t&&(t=Object(i.a)(t));for(var n=this._groups,e=n.length,u=new Array(e),c=0;c<e;++c)for(var o,a,f=n[c],s=f.length,l=u[c]=new Array(s),h=0;h<s;++h)(o=f[h])&&(a=t.call(o,o.__data__,h,f))&&("__data__"in o&&(a.__data__=o.__data__),l[h]=a);return new r.a(u,this._parents)}},function(t,n,e){"use strict";var r=e(4),i=e(105);n.a=function(t){"function"!=typeof t&&(t=Object(i.a)(t));for(var n=this._groups,e=n.length,u=[],c=[],o=0;o<e;++o)for(var a,f=n[o],s=f.length,l=0;l<s;++l)(a=f[l])&&(u.push(t.call(a,a.__data__,l,f)),c.push(a));return new r.a(u,c)}},function(t,n,e){"use strict";var r=e(4),i=e(104);n.a=function(t){"function"!=typeof t&&(t=Object(i.a)(t));for(var n=this._groups,e=n.length,u=new Array(e),c=0;c<e;++c)for(var o,a=n[c],f=a.length,s=u[c]=[],l=0;l<f;++l)(o=a[l])&&t.call(o,o.__data__,l,a)&&s.push(o);return new r.a(u,this._parents)}},function(t,n,e){"use strict";function r(t,n,e,r,i,u){for(var o,a=0,f=n.length,s=u.length;a<s;++a)(o=n[a])?(o.__data__=u[a],r[a]=o):e[a]=new c.a(t,u[a]);for(;a<f;++a)(o=n[a])&&(i[a]=o)}function i(t,n,e,r,i,u,o){var f,s,l,h={},d=n.length,b=u.length,v=new Array(d);for(f=0;f<d;++f)(s=n[f])&&(v[f]=l=a+o.call(s,s.__data__,f,n),l in h?i[f]=s:h[l]=s);for(f=0;f<b;++f)(s=h[l=a+o.call(t,u[f],f,u)])?(r[f]=s,s.__data__=u[f],h[l]=null):e[f]=new c.a(t,u[f]);for(f=0;f<d;++f)(s=n[f])&&h[v[f]]===s&&(i[f]=s)}var u=e(4),c=e(106),o=e(215),a="$";n.a=function(t,n){if(!t)return g=new Array(this.size()),d=-1,this.each(function(t){g[++d]=t}),g;var e=n?i:r,c=this._parents,a=this._groups;"function"!=typeof t&&(t=Object(o.a)(t));for(var f=a.length,s=new Array(f),l=new Array(f),h=new Array(f),d=0;d<f;++d){var b=c[d],v=a[d],p=v.length,g=t.call(b,b&&b.__data__,d,c),_=g.length,y=l[d]=new Array(_),m=s[d]=new Array(_);e(b,v,y,m,h[d]=new Array(p),g,n);for(var O,j,x=0,w=0;x<_;++x)if(O=y[x]){for(x>=w&&(w=x+1);!(j=m[w])&&++w<_;);O._next=j||null}}return s=new u.a(s,c),s._enter=l,s._exit=h,s}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";var r=e(107),i=e(4);n.a=function(){return new i.a(this._exit||this._groups.map(r.a),this._parents)}},function(t,n,e){"use strict";var r=e(4);n.a=function(t){for(var n=this._groups,e=t._groups,i=n.length,u=e.length,c=Math.min(i,u),o=new Array(i),a=0;a<c;++a)for(var f,s=n[a],l=e[a],h=s.length,d=o[a]=new Array(h),b=0;b<h;++b)(f=s[b]||l[b])&&(d[b]=f);for(;a<i;++a)o[a]=n[a];return new r.a(o,this._parents)}},function(t,n,e){"use strict";n.a=function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],u=i.length-1,c=i[u];--u>=0;)(r=i[u])&&(c&&c!==r.nextSibling&&c.parentNode.insertBefore(r,c),c=r);return this}},function(t,n,e){"use strict";function r(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var i=e(4);n.a=function(t){t||(t=r);for(var n=this._groups,e=n.length,u=new Array(e),c=0;c<e;++c){for(var o,a=n[c],f=a.length,s=u[c]=new Array(f),l=0;l<f;++l)(o=a[l])&&(s[l]=o);s.sort(function(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e})}return new i.a(u,this._parents).order()}},function(t,n,e){"use strict";n.a=function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this}},function(t,n,e){"use strict";n.a=function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t}},function(t,n,e){"use strict";n.a=function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,u=r.length;i<u;++i){var c=r[i];if(c)return c}return null}},function(t,n,e){"use strict";n.a=function(){var t=0;return this.each(function(){++t}),t}},function(t,n,e){"use strict";n.a=function(){return!this.node()}},function(t,n,e){"use strict";n.a=function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,u=n[e],c=0,o=u.length;c<o;++c)(i=u[c])&&t.call(i,i.__data__,c,u);return this}},function(t,n,e){"use strict";function r(t){return function(){this.removeAttribute(t)}}function i(t){return function(){this.removeAttributeNS(t.space,t.local)}}function u(t,n){return function(){this.setAttribute(t,n)}}function c(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}function o(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}function a(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}var f=e(51);n.a=function(t,n){var e=Object(f.a)(t);if(arguments.length<2){var s=this.node();return e.local?s.getAttributeNS(e.space,e.local):s.getAttribute(e)}return this.each((null==n?e.local?i:r:"function"==typeof n?e.local?a:o:e.local?c:u)(e,n))}},function(t,n,e){"use strict";function r(t){return function(){delete this[t]}}function i(t,n){return function(){this[t]=n}}function u(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}n.a=function(t,n){return arguments.length>1?this.each((null==n?r:"function"==typeof n?u:i)(t,n)):this.node()[t]}},function(t,n,e){"use strict";function r(t){return t.trim().split(/^|\s+/)}function i(t){return t.classList||new u(t)}function u(t){this._node=t,this._names=r(t.getAttribute("class")||"")}function c(t,n){for(var e=i(t),r=-1,u=n.length;++r<u;)e.add(n[r])}function o(t,n){for(var e=i(t),r=-1,u=n.length;++r<u;)e.remove(n[r])}function a(t){return function(){c(this,t)}}function f(t){return function(){o(this,t)}}function s(t,n){return function(){(n.apply(this,arguments)?c:o)(this,t)}}u.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}},n.a=function(t,n){var e=r(t+"");if(arguments.length<2){for(var u=i(this.node()),c=-1,o=e.length;++c<o;)if(!u.contains(e[c]))return!1;return!0}return this.each(("function"==typeof n?s:n?a:f)(e,n))}},function(t,n,e){"use strict";function r(){this.textContent=""}function i(t){return function(){this.textContent=t}}function u(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}n.a=function(t){return arguments.length?this.each(null==t?r:("function"==typeof t?u:i)(t)):this.node().textContent}},function(t,n,e){"use strict";function r(){this.innerHTML=""}function i(t){return function(){this.innerHTML=t}}function u(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}n.a=function(t){return arguments.length?this.each(null==t?r:("function"==typeof t?u:i)(t)):this.node().innerHTML}},function(t,n,e){"use strict";function r(){this.nextSibling&&this.parentNode.appendChild(this)}n.a=function(){return this.each(r)}},function(t,n,e){"use strict";function r(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}n.a=function(){return this.each(r)}},function(t,n,e){"use strict";var r=e(50);n.a=function(t){var n="function"==typeof t?t:Object(r.a)(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})}},function(t,n,e){"use strict";function r(){return null}var i=e(50),u=e(56);n.a=function(t,n){var e="function"==typeof t?t:Object(i.a)(t),c=null==n?r:"function"==typeof n?n:Object(u.a)(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),c.apply(this,arguments)||null)})}},function(t,n,e){"use strict";function r(){var t=this.parentNode;t&&t.removeChild(this)}n.a=function(){return this.each(r)}},function(t,n,e){"use strict";n.a=function(t){return arguments.length?this.property("__data__",t):this.node().__data__}},function(t,n,e){"use strict";function r(t,n,e){var r=Object(c.a)(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}function i(t,n){return function(){return r(this,t,n)}}function u(t,n){return function(){return r(this,t,n.apply(this,arguments))}}var c=e(57);n.a=function(t,n){return this.each(("function"==typeof n?u:i)(t,n))}},function(t,n,e){"use strict";var r=e(4);n.a=function(t){return"string"==typeof t?new r.a([document.querySelectorAll(t)],[document.documentElement]):new r.a([null==t?[]:t],r.c)}},function(t,n,e){"use strict";var r=e(53),i=e(55);n.a=function(t,n,e){arguments.length<3&&(e=n,n=Object(r.a)().changedTouches);for(var u,c=0,o=n?n.length:0;c<o;++c)if((u=n[c]).identifier===e)return Object(i.a)(t,u);return null}},function(t,n,e){"use strict";var r=e(53),i=e(55);n.a=function(t,n){null==n&&(n=Object(r.a)().touches);for(var e=0,u=n?n.length:0,c=new Array(u);e<u;++e)c[e]=Object(i.a)(t,n[e]);return c}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";function r(t,n,e,r,i,u,c,o,a,f){this.target=t,this.type=n,this.subject=e,this.identifier=r,this.active=i,this.x=u,this.y=c,this.dx=o,this.dy=a,this._=f}n.a=r,r.prototype.on=function(){var t=this._.on.apply(this._,arguments);return t===this._?this:t}},function(t,n,e){"use strict";function r(t){if(t instanceof u)return new u(t.l,t.a,t.b,t.opacity);if(t instanceof h){var n=t.h*v.a;return new u(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof b.b||(t=Object(b.h)(t));var e=f(t.r),r=f(t.g),i=f(t.b),o=c((.4124564*e+.3575761*r+.1804375*i)/p),a=c((.2126729*e+.7151522*r+.072175*i)/g);return new u(116*a-16,500*(o-a),200*(a-c((.0193339*e+.119192*r+.9503041*i)/_)),t.opacity)}function i(t,n,e,i){return 1===arguments.length?r(t):new u(t,n,e,null==i?1:i)}function u(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function c(t){return t>j?Math.pow(t,1/3):t/O+y}function o(t){return t>m?t*t*t:O*(t-y)}function a(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function f(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function s(t){if(t instanceof h)return new h(t.h,t.c,t.l,t.opacity);t instanceof u||(t=r(t));var n=Math.atan2(t.b,t.a)*v.b;return new h(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function l(t,n,e,r){return 1===arguments.length?s(t):new h(t,n,e,null==r?1:r)}function h(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}n.a=i,n.b=l;var d=e(60),b=e(59),v=e(111),p=.95047,g=1,_=1.08883,y=4/29,m=6/29,O=3*m*m,j=m*m*m;Object(d.a)(u,i,Object(d.b)(b.a,{brighter:function(t){return new u(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new u(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return t=g*o(t),n=p*o(n),e=_*o(e),new b.b(a(3.2404542*n-1.5371385*t-.4985314*e),a(-.969266*n+1.8760108*t+.041556*e),a(.0556434*n-.2040259*t+1.0572252*e),this.opacity)}})),Object(d.a)(h,l,Object(d.b)(b.a,{brighter:function(t){return new h(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new h(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return r(this).rgb()}}))},function(t,n,e){"use strict";function r(t){if(t instanceof u)return new u(t.h,t.s,t.l,t.opacity);t instanceof o.b||(t=Object(o.h)(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(p*r+b*n-v*e)/(p+b-v),c=r-i,f=(d*(e-i)-l*c)/h,s=Math.sqrt(f*f+c*c)/(d*i*(1-i)),g=s?Math.atan2(f,c)*a.b-120:NaN;return new u(g<0?g+360:g,s,i,t.opacity)}function i(t,n,e,i){return 1===arguments.length?r(t):new u(t,n,e,null==i?1:i)}function u(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}n.a=i;var c=e(60),o=e(59),a=e(111),f=-.14861,s=1.78277,l=-.29227,h=-.90649,d=1.97294,b=d*h,v=d*s,p=s*l-h*f;Object(c.a)(u,i,Object(c.b)(o.a,{brighter:function(t){return t=null==t?o.c:Math.pow(o.c,t),new u(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?o.d:Math.pow(o.d,t),new u(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*a.a,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new o.b(255*(n+e*(f*r+s*i)),255*(n+e*(l*r+h*i)),255*(n+e*(d*r)),this.opacity)}}))},function(t,n,e){"use strict";n.a=function(t,n){return t=+t,n-=t,function(e){return Math.round(t+n*e)}}},function(t,n,e){"use strict";function r(t,n,e,r){function u(t){return t.length?t.pop()+" ":""}function c(t,r,u,c,o,a){if(t!==u||r!==c){var f=o.push("translate(",null,n,null,e);a.push({i:f-4,x:Object(i.a)(t,u)},{i:f-2,x:Object(i.a)(r,c)})}else(u||c)&&o.push("translate("+u+n+c+e)}function o(t,n,e,c){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),c.push({i:e.push(u(e)+"rotate(",null,r)-2,x:Object(i.a)(t,n)})):n&&e.push(u(e)+"rotate("+n+r)}function a(t,n,e,c){t!==n?c.push({i:e.push(u(e)+"skewX(",null,r)-2,x:Object(i.a)(t,n)}):n&&e.push(u(e)+"skewX("+n+r)}function f(t,n,e,r,c,o){if(t!==e||n!==r){var a=c.push(u(c)+"scale(",null,",",null,")");o.push({i:a-4,x:Object(i.a)(t,e)},{i:a-2,x:Object(i.a)(n,r)})}else 1===e&&1===r||c.push(u(c)+"scale("+e+","+r+")")}return function(n,e){var r=[],i=[];return n=t(n),e=t(e),c(n.translateX,n.translateY,e.translateX,e.translateY,r,i),o(n.rotate,e.rotate,r,i),a(n.skewX,e.skewX,r,i),f(n.scaleX,n.scaleY,e.scaleX,e.scaleY,r,i),n=e=null,function(t){for(var n,e=-1,u=i.length;++e<u;)r[(n=i[e]).i]=n.x(t);return r.join("")}}}e.d(n,"a",function(){return c}),e.d(n,"b",function(){return o});var i=e(33),u=e(247),c=r(u.a,"px, ","px)","deg)"),o=r(u.b,", ",")",")")},function(t,n,e){"use strict";n.a=function(t){return"none"===t?o.b:(r||(r=document.createElement("DIV"),i=document.documentElement,u=document.defaultView),r.style.transform=t,t=u.getComputedStyle(i.appendChild(r),null).getPropertyValue("transform"),i.removeChild(r),t=t.slice(7,-1).split(","),Object(o.a)(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},n.b=function(t){return null==t?o.b:(c||(c=document.createElementNS("http://www.w3.org/2000/svg","g")),c.setAttribute("transform",t),(t=c.transform.baseVal.consolidate())?(t=t.matrix,Object(o.a)(t.a,t.b,t.c,t.d,t.e,t.f)):o.b)};var r,i,u,c,o=e(248)},function(t,n,e){"use strict";e.d(n,"b",function(){return i});var r=180/Math.PI,i={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};n.a=function(t,n,e,i,u,c){var o,a,f;return(o=Math.sqrt(t*t+n*n))&&(t/=o,n/=o),(f=t*e+n*i)&&(e-=t*f,i-=n*f),(a=Math.sqrt(e*e+i*i))&&(e/=a,i/=a,f/=a),t*i<n*e&&(t=-t,n=-n,f=-f,o=-o),{translateX:u,translateY:c,rotate:Math.atan2(n,t)*r,skewX:Math.atan(f)*r,scaleX:o,scaleY:a}}},function(t,n,e){"use strict";function r(t){return((t=Math.exp(t))+1/t)/2}function i(t){return((t=Math.exp(t))-1/t)/2}function u(t){return((t=Math.exp(2*t))-1)/(t+1)}var c=Math.SQRT2;n.a=function(t,n){var e,o,a=t[0],f=t[1],s=t[2],l=n[0],h=n[1],d=n[2],b=l-a,v=h-f,p=b*b+v*v;if(p<1e-12)o=Math.log(d/s)/c,e=function(t){return[a+t*b,f+t*v,s*Math.exp(c*t*o)]};else{var g=Math.sqrt(p),_=(d*d-s*s+4*p)/(2*s*2*g),y=(d*d-s*s-4*p)/(2*d*2*g),m=Math.log(Math.sqrt(_*_+1)-_),O=Math.log(Math.sqrt(y*y+1)-y);o=(O-m)/c,e=function(t){var n=t*o,e=r(m),l=s/(2*g)*(e*u(c*n+m)-i(m));return[a+l*b,f+l*v,s*e/r(c*n+m)]}}return e.duration=1e3*o,e}},function(t,n,e){"use strict";function r(t){return function(n,e){var r=t((n=Object(i.d)(n)).h,(e=Object(i.d)(e)).h),c=Object(u.a)(n.s,e.s),o=Object(u.a)(n.l,e.l),a=Object(u.a)(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=c(t),n.l=o(t),n.opacity=a(t),n+""}}}e.d(n,"b",function(){return c});var i=e(7),u=e(22);n.a=r(u.c);var c=r(u.a)},function(t,n,e){"use strict";n.a=function(t,n){var e=Object(i.a)((t=Object(r.e)(t)).l,(n=Object(r.e)(n)).l),u=Object(i.a)(t.a,n.a),c=Object(i.a)(t.b,n.b),o=Object(i.a)(t.opacity,n.opacity);return function(n){return t.l=e(n),t.a=u(n),t.b=c(n),t.opacity=o(n),t+""}};var r=e(7),i=e(22)},function(t,n,e){"use strict";function r(t){return function(n,e){var r=t((n=Object(i.c)(n)).h,(e=Object(i.c)(e)).h),c=Object(u.a)(n.c,e.c),o=Object(u.a)(n.l,e.l),a=Object(u.a)(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=c(t),n.l=o(t),n.opacity=a(t),n+""}}}e.d(n,"b",function(){return c});var i=e(7),u=e(22);n.a=r(u.c);var c=r(u.a)},function(t,n,e){"use strict";function r(t){return function n(e){function r(n,r){var c=t((n=Object(i.b)(n)).h,(r=Object(i.b)(r)).h),o=Object(u.a)(n.s,r.s),a=Object(u.a)(n.l,r.l),f=Object(u.a)(n.opacity,r.opacity);return function(t){return n.h=c(t),n.s=o(t),n.l=a(Math.pow(t,e)),n.opacity=f(t),n+""}}return e=+e,r.gamma=n,r}(1)}e.d(n,"a",function(){return c});var i=e(7),u=e(22);n.b=r(u.c);var c=r(u.a)},function(t,n,e){"use strict";n.a=function(t,n){for(var e=new Array(n),r=0;r<n;++r)e[r]=t(r/(n-1));return e}},function(t,n,e){"use strict";var r=e(1),i=e(256),u=e(259);r.k.prototype.interrupt=i.a,r.k.prototype.transition=u.a},function(t,n,e){"use strict";var r=e(119);n.a=function(t){return this.each(function(){Object(r.a)(this,t)})}},function(t,n,e){"use strict";var r=e(63);n.a=function(t,n,e){var i=new r.a;return n=null==n?0:+n,i.restart(function(e){i.stop(),t(e+n)},n,e),i}},function(t,n,e){"use strict";var r=e(63);n.a=function(t,n,e){var i=new r.a,u=n;return null==n?(i.restart(t,n,e),i):(n=+n,e=null==e?Object(r.b)():+e,i.restart(function r(c){c+=u,i.restart(r,u+=n,e),t(c)},n,e),i)}},function(t,n,e){"use strict";function r(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return a.time=Object(o.b)(),a;return e}var i=e(10),u=e(6),c=e(121),o=e(34),a={time:null,delay:0,duration:250,ease:c.o};n.a=function(t){var n,e;t instanceof i.a?(n=t._id,t=t._name):(n=Object(i.c)(),(e=a).time=Object(o.b)(),t=null==t?null:t+"");for(var c=this._groups,f=c.length,s=0;s<f;++s)for(var l,h=c[s],d=h.length,b=0;b<d;++b)(l=h[b])&&Object(u.e)(l,t,n,b,h,e||r(l,n));return new i.a(c,this._parents,t,n)}},function(t,n,e){"use strict";function r(t){return function(){this.removeAttribute(t)}}function i(t){return function(){this.removeAttributeNS(t.space,t.local)}}function u(t,n,e){var r,i;return function(){var u=this.getAttribute(t);return u===e?null:u===r?i:i=n(r=u,e)}}function c(t,n,e){var r,i;return function(){var u=this.getAttributeNS(t.space,t.local);return u===e?null:u===r?i:i=n(r=u,e)}}function o(t,n,e){var r,i,u;return function(){var c,o=e(this);if(null!=o)return(c=this.getAttribute(t))===o?null:c===r&&o===i?u:u=n(r=c,i=o);this.removeAttribute(t)}}function a(t,n,e){var r,i,u;return function(){var c,o=e(this);if(null!=o)return(c=this.getAttributeNS(t.space,t.local))===o?null:c===r&&o===i?u:u=n(r=c,i=o);this.removeAttributeNS(t.space,t.local)}}var f=e(5),s=e(1),l=e(35),h=e(120);n.a=function(t,n){var e=Object(s.g)(t),d="transform"===e?f.u:h.a;return this.attrTween(t,"function"==typeof n?(e.local?a:o)(e,d,Object(l.b)(this,"attr."+t,n)):null==n?(e.local?i:r)(e):(e.local?c:u)(e,d,n+""))}},function(t,n,e){"use strict";function r(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}function i(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e}var u=e(1);n.a=function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var c=Object(u.g)(t);return this.tween(e,(c.local?r:i)(c,n))}},function(t,n,e){"use strict";function r(t,n){return function(){Object(u.g)(this,t).delay=+n.apply(this,arguments)}}function i(t,n){return n=+n,function(){Object(u.g)(this,t).delay=n}}var u=e(6);n.a=function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?r:i)(n,t)):Object(u.f)(this.node(),n).delay}},function(t,n,e){"use strict";function r(t,n){return function(){Object(u.h)(this,t).duration=+n.apply(this,arguments)}}function i(t,n){return n=+n,function(){Object(u.h)(this,t).duration=n}}var u=e(6);n.a=function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?r:i)(n,t)):Object(u.f)(this.node(),n).duration}},function(t,n,e){"use strict";function r(t,n){if("function"!=typeof n)throw new Error;return function(){Object(i.h)(this,t).ease=n}}var i=e(6);n.a=function(t){var n=this._id;return arguments.length?this.each(r(n,t)):Object(i.f)(this.node(),n).ease}},function(t,n,e){"use strict";var r=e(1),i=e(10);n.a=function(t){"function"!=typeof t&&(t=Object(r.e)(t));for(var n=this._groups,e=n.length,u=new Array(e),c=0;c<e;++c)for(var o,a=n[c],f=a.length,s=u[c]=[],l=0;l<f;++l)(o=a[l])&&t.call(o,o.__data__,l,a)&&s.push(o);return new i.a(u,this._parents,this._name,this._id)}},function(t,n,e){"use strict";var r=e(10);n.a=function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,i=n.length,u=e.length,c=Math.min(i,u),o=new Array(i),a=0;a<c;++a)for(var f,s=n[a],l=e[a],h=s.length,d=o[a]=new Array(h),b=0;b<h;++b)(f=s[b]||l[b])&&(d[b]=f);for(;a<i;++a)o[a]=n[a];return new r.a(o,this._parents,this._name,this._id)}},function(t,n,e){"use strict";function r(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}function i(t,n,e){var i,c,o=r(n)?u.g:u.h;return function(){var r=o(this,t),u=r.on;u!==i&&(c=(i=u).copy()).on(n,e),r.on=c}}var u=e(6);n.a=function(t,n){var e=this._id;return arguments.length<2?Object(u.f)(this.node(),e).on.on(t):this.each(i(e,t,n))}},function(t,n,e){"use strict";function r(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}n.a=function(){return this.on("end.remove",r(this._id))}},function(t,n,e){"use strict";var r=e(1),i=e(10),u=e(6);n.a=function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Object(r.l)(t));for(var c=this._groups,o=c.length,a=new Array(o),f=0;f<o;++f)for(var s,l,h=c[f],d=h.length,b=a[f]=new Array(d),v=0;v<d;++v)(s=h[v])&&(l=t.call(s,s.__data__,v,h))&&("__data__"in s&&(l.__data__=s.__data__),b[v]=l,Object(u.e)(b[v],n,e,v,b,Object(u.f)(s,e)));return new i.a(a,this._parents,n,e)}},function(t,n,e){"use strict";var r=e(1),i=e(10),u=e(6);n.a=function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=Object(r.m)(t));for(var c=this._groups,o=c.length,a=[],f=[],s=0;s<o;++s)for(var l,h=c[s],d=h.length,b=0;b<d;++b)if(l=h[b]){for(var v,p=t.call(l,l.__data__,b,h),g=Object(u.f)(l,e),_=0,y=p.length;_<y;++_)(v=p[_])&&Object(u.e)(v,n,e,_,p,g);a.push(p),f.push(l)}return new i.a(a,f,n,e)}},function(t,n,e){"use strict";var r=e(1).k.prototype.constructor;n.a=function(){return new r(this._groups,this._parents)}},function(t,n,e){"use strict";function r(t,n){var e,r,i;return function(){var u=Object(a.n)(this,t),c=(this.style.removeProperty(t),Object(a.n)(this,t));return u===c?null:u===e&&c===r?i:i=n(e=u,r=c)}}function i(t){return function(){this.style.removeProperty(t)}}function u(t,n,e){var r,i;return function(){var u=Object(a.n)(this,t);return u===e?null:u===r?i:i=n(r=u,e)}}function c(t,n,e){var r,i,u;return function(){var c=Object(a.n)(this,t),o=e(this);return null==o&&(this.style.removeProperty(t),o=Object(a.n)(this,t)),c===o?null:c===r&&o===i?u:u=n(r=c,i=o)}}var o=e(5),a=e(1),f=e(35),s=e(120);n.a=function(t,n,e){var a="transform"==(t+="")?o.t:s.a;return null==n?this.styleTween(t,r(t,a)).on("end.style."+t,i(t)):this.styleTween(t,"function"==typeof n?c(t,a,Object(f.b)(this,"style."+t,n)):u(t,a,n+""),e)}},function(t,n,e){"use strict";function r(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}n.a=function(t,n,e){var i="style."+(t+="");if(arguments.length<2)return(i=this.tween(i))&&i._value;if(null==n)return this.tween(i,null);if("function"!=typeof n)throw new Error;return this.tween(i,r(t,n,null==e?"":e))}},function(t,n,e){"use strict";function r(t){return function(){this.textContent=t}}function i(t){return function(){var n=t(this);this.textContent=null==n?"":n}}var u=e(35);n.a=function(t){return this.tween("text","function"==typeof t?i(Object(u.b)(this,"text",t)):r(null==t?"":t+""))}},function(t,n,e){"use strict";var r=e(10),i=e(6);n.a=function(){for(var t=this._name,n=this._id,e=Object(r.c)(),u=this._groups,c=u.length,o=0;o<c;++o)for(var a,f=u[o],s=f.length,l=0;l<s;++l)if(a=f[l]){var h=Object(i.f)(a,n);Object(i.e)(a,t,e,l,f,{time:h.time+h.delay+h.duration,delay:0,duration:h.duration,ease:h.ease})}return new r.a(u,this._parents,t,e)}},function(t,n,e){"use strict";n.a=function(t){return+t}},function(t,n,e){"use strict";n.a=function(t){return t*t},n.c=function(t){return t*(2-t)},n.b=function(t){return((t*=2)<=1?t*t:--t*(2-t)+1)/2}},function(t,n,e){"use strict";n.a=function(t){return t*t*t},n.c=function(t){return--t*t*t+1},n.b=function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}},function(t,n,e){"use strict";e.d(n,"a",function(){return r}),e.d(n,"c",function(){return i}),e.d(n,"b",function(){return u});var r=function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e}(3),i=function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),u=function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3)},function(t,n,e){"use strict";n.a=function(t){return 1-Math.cos(t*i)},n.c=function(t){return Math.sin(t*i)},n.b=function(t){return(1-Math.cos(r*t))/2};var r=Math.PI,i=r/2},function(t,n,e){"use strict";n.a=function(t){return Math.pow(2,10*t-10)},n.c=function(t){return 1-Math.pow(2,-10*t)},n.b=function(t){return((t*=2)<=1?Math.pow(2,10*t-10):2-Math.pow(2,10-10*t))/2}},function(t,n,e){"use strict";n.a=function(t){return 1-Math.sqrt(1-t*t)},n.c=function(t){return Math.sqrt(1- --t*t)},n.b=function(t){return((t*=2)<=1?1-Math.sqrt(1-t*t):Math.sqrt(1-(t-=2)*t)+1)/2}},function(t,n,e){"use strict";function r(t){return(t=+t)<i?d*t*t:t<c?d*(t-=u)*t+o:t<f?d*(t-=a)*t+s:d*(t-=l)*t+h}n.a=function(t){return 1-r(1-t)},n.c=r,n.b=function(t){return((t*=2)<=1?1-r(1-t):r(t-1)+1)/2};var i=4/11,u=6/11,c=8/11,o=.75,a=9/11,f=10/11,s=.9375,l=21/22,h=63/64,d=1/i/i},function(t,n,e){"use strict";e.d(n,"a",function(){return r}),e.d(n,"c",function(){return i}),e.d(n,"b",function(){return u});var r=function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e}(1.70158),i=function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),u=function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158)},function(t,n,e){"use strict";e.d(n,"a",function(){return i}),e.d(n,"c",function(){return u}),e.d(n,"b",function(){return c});var r=2*Math.PI,i=function t(n,e){function i(t){return n*Math.pow(2,10*--t)*Math.sin((u-t)/e)}var u=Math.asin(1/(n=Math.max(1,n)))*(e/=r);return i.amplitude=function(n){return t(n,e*r)},i.period=function(e){return t(n,e)},i}(1,.3),u=function t(n,e){function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+u)/e)}var u=Math.asin(1/(n=Math.max(1,n)))*(e/=r);return i.amplitude=function(n){return t(n,e*r)},i.period=function(e){return t(n,e)},i}(1,.3),c=function t(n,e){function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((u-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((u+t)/e))/2}var u=Math.asin(1/(n=Math.max(1,n)))*(e/=r);return i.amplitude=function(n){return t(n,e*r)},i.period=function(e){return t(n,e)},i}(1,.3)},function(t,n,e){"use strict";var r=e(10),i=e(6),u=[null];n.a=function(t,n){var e,c,o=t.__transition;if(o){n=null==n?null:n+"";for(c in o)if((e=o[c]).state>i.c&&e.name===n)return new r.a([[t]],u,n,+c)}return null}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";n.a=function(t,n,e){this.target=t,this.type=n,this.selection=e}},function(t,n,e){"use strict";n.b=function(){r.c.stopImmediatePropagation()};var r=e(1);n.a=function(){r.c.preventDefault(),r.c.stopImmediatePropagation()}},function(t,n,e){"use strict";var r=e(291);e.d(n,"a",function(){return r.a});var i=e(292);e.d(n,"b",function(){return i.a})},function(t,n,e){"use strict";function r(t){return function(n,e){return t(n.source.value+n.target.value,e.source.value+e.target.value)}}var i=e(3),u=e(122);n.a=function(){function t(t){var r,a,f,s,l,h,d=t.length,b=[],v=Object(i.s)(d),p=[],g=[],_=g.groups=new Array(d),y=new Array(d*d);for(r=0,l=-1;++l<d;){for(a=0,h=-1;++h<d;)a+=t[l][h];b.push(a),p.push(Object(i.s)(d)),r+=a}for(e&&v.sort(function(t,n){return e(b[t],b[n])}),c&&p.forEach(function(n,e){n.sort(function(n,r){return c(t[e][n],t[e][r])})}),s=(r=Object(u.c)(0,u.e-n*d)/r)?n:u.e/d,a=0,l=-1;++l<d;){for(f=a,h=-1;++h<d;){var m=v[l],O=p[m][h],j=t[m][O],x=a,w=a+=j*r;y[O*d+m]={index:m,subindex:O,startAngle:x,endAngle:w,value:j}}_[m]={index:m,startAngle:f,endAngle:a,value:b[m]},a+=s}for(l=-1;++l<d;)for(h=l-1;++h<d;){var M=y[h*d+l],k=y[l*d+h];(M.value||k.value)&&g.push(M.value<k.value?{source:k,target:M}:{source:M,target:k})}return o?g.sort(o):g}var n=0,e=null,c=null,o=null;return t.padAngle=function(e){return arguments.length?(n=Object(u.c)(0,e),t):n},t.sortGroups=function(n){return arguments.length?(e=n,t):e},t.sortSubgroups=function(n){return arguments.length?(c=n,t):c},t.sortChords=function(n){return arguments.length?(null==n?o=null:(o=r(n))._=n,t):o&&o._},t}},function(t,n,e){"use strict";function r(t){return t.source}function i(t){return t.target}function u(t){return t.radius}function c(t){return t.startAngle}function o(t){return t.endAngle}var a=e(293),f=e(294),s=e(122),l=e(13);n.a=function(){function t(){var t,r=a.a.call(arguments),i=n.apply(this,r),u=e.apply(this,r),c=+h.apply(this,(r[0]=i,r)),o=d.apply(this,r)-s.b,f=b.apply(this,r)-s.b,p=c*Object(s.a)(o),g=c*Object(s.d)(o),_=+h.apply(this,(r[0]=u,r)),y=d.apply(this,r)-s.b,m=b.apply(this,r)-s.b;if(v||(v=t=Object(l.a)()),v.moveTo(p,g),v.arc(0,0,c,o,f),o===y&&f===m||(v.quadraticCurveTo(0,0,_*Object(s.a)(y),_*Object(s.d)(y)),v.arc(0,0,_,y,m)),v.quadraticCurveTo(0,0,p,g),v.closePath(),t)return v=null,t+""||null}var n=r,e=i,h=u,d=c,b=o,v=null;return t.radius=function(n){return arguments.length?(h="function"==typeof n?n:Object(f.a)(+n),t):h},t.startAngle=function(n){return arguments.length?(d="function"==typeof n?n:Object(f.a)(+n),t):d},t.endAngle=function(n){return arguments.length?(b="function"==typeof n?n:Object(f.a)(+n),t):b},t.source=function(e){return arguments.length?(n=e,t):n},t.target=function(n){return arguments.length?(e=n,t):e},t.context=function(n){return arguments.length?(v=null==n?null:n,t):v},t}},function(t,n,e){"use strict";e.d(n,"a",function(){return r});var r=Array.prototype.slice},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";function r(){this._x0=this._y0=this._x1=this._y1=null,this._=""}function i(){return new r}var u=Math.PI,c=2*u,o=c-1e-6;r.prototype=i.prototype={constructor:r,moveTo:function(t,n){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)},closePath:function(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._+="Z")},lineTo:function(t,n){this._+="L"+(this._x1=+t)+","+(this._y1=+n)},quadraticCurveTo:function(t,n,e,r){this._+="Q"+ +t+","+ +n+","+(this._x1=+e)+","+(this._y1=+r)},bezierCurveTo:function(t,n,e,r,i,u){this._+="C"+ +t+","+ +n+","+ +e+","+ +r+","+(this._x1=+i)+","+(this._y1=+u)},arcTo:function(t,n,e,r,i){t=+t,n=+n,e=+e,r=+r,i=+i;var c=this._x1,o=this._y1,a=e-t,f=r-n,s=c-t,l=o-n,h=s*s+l*l;if(i<0)throw new Error("negative radius: "+i);if(null===this._x1)this._+="M"+(this._x1=t)+","+(this._y1=n);else if(h>1e-6)if(Math.abs(l*a-f*s)>1e-6&&i){var d=e-c,b=r-o,v=a*a+f*f,p=d*d+b*b,g=Math.sqrt(v),_=Math.sqrt(h),y=i*Math.tan((u-Math.acos((v+h-p)/(2*g*_)))/2),m=y/_,O=y/g;Math.abs(m-1)>1e-6&&(this._+="L"+(t+m*s)+","+(n+m*l)),this._+="A"+i+","+i+",0,0,"+ +(l*d>s*b)+","+(this._x1=t+O*a)+","+(this._y1=n+O*f)}else this._+="L"+(this._x1=t)+","+(this._y1=n);else;},arc:function(t,n,e,r,i,a){t=+t,n=+n;var f=(e=+e)*Math.cos(r),s=e*Math.sin(r),l=t+f,h=n+s,d=1^a,b=a?r-i:i-r;if(e<0)throw new Error("negative radius: "+e);null===this._x1?this._+="M"+l+","+h:(Math.abs(this._x1-l)>1e-6||Math.abs(this._y1-h)>1e-6)&&(this._+="L"+l+","+h),e&&(b<0&&(b=b%c+c),b>o?this._+="A"+e+","+e+",0,1,"+d+","+(t-f)+","+(n-s)+"A"+e+","+e+",0,1,"+d+","+(this._x1=l)+","+(this._y1=h):b>1e-6&&(this._+="A"+e+","+e+",0,"+ +(b>=u)+","+d+","+(this._x1=t+e*Math.cos(i))+","+(this._y1=n+e*Math.sin(i))))},rect:function(t,n,e,r){this._+="M"+(this._x0=this._x1=+t)+","+(this._y0=this._y1=+n)+"h"+ +e+"v"+ +r+"h"+-e+"Z"},toString:function(){return this._}},n.a=i},function(t,n,e){"use strict";function r(){return{}}function i(t,n,e){t[n]=e}function u(){return Object(o.a)()}function c(t,n,e){t.set(n,e)}var o=e(64);n.a=function(){function t(n,r,i,u){if(r>=s.length)return null!=e&&n.sort(e),null!=a?a(n):n;for(var c,f,l,h=-1,d=n.length,b=s[r++],v=Object(o.a)(),p=i();++h<d;)(l=v.get(c=b(f=n[h])+""))?l.push(f):v.set(c,[f]);return v.each(function(n,e){u(p,e,t(n,r,i,u))}),p}function n(t,e){if(++e>s.length)return t;var r,i=l[e-1];return null!=a&&e>=s.length?r=t.entries():(r=[],t.each(function(t,i){r.push({key:i,values:n(t,e)})})),null!=i?r.sort(function(t,n){return i(t.key,n.key)}):r}var e,a,f,s=[],l=[];return f={object:function(n){return t(n,0,r,i)},map:function(n){return t(n,0,u,c)},entries:function(e){return n(t(e,0,u,c),0)},key:function(t){return s.push(t),f},sortKeys:function(t){return l[s.length-1]=t,f},sortValues:function(t){return e=t,f},rollup:function(t){return a=t,f}}}},function(t,n,e){"use strict";function r(){}function i(t,n){var e=new r;if(t instanceof r)t.each(function(t){e.add(t)});else if(t){var i=-1,u=t.length;if(null==n)for(;++i<u;)e.add(t[i]);else for(;++i<u;)e.add(n(t[i],i,t))}return e}var u=e(64),c=u.a.prototype;r.prototype=i.prototype={constructor:r,has:c.has,add:function(t){return t+="",this[u.b+t]=t,this},remove:c.remove,clear:c.clear,values:c.keys,size:c.size,empty:c.empty,each:c.each},n.a=i},function(t,n,e){"use strict";n.a=function(t){var n=[];for(var e in t)n.push(e);return n}},function(t,n,e){"use strict";n.a=function(t){var n=[];for(var e in t)n.push(t[e]);return n}},function(t,n,e){"use strict";n.a=function(t){var n=[];for(var e in t)n.push({key:e,value:t[e]});return n}},function(t,n,e){"use strict";e.d(n,"c",function(){return u}),e.d(n,"d",function(){return c}),e.d(n,"a",function(){return o}),e.d(n,"b",function(){return a});var r=e(66),i=Object(r.a)(","),u=i.parse,c=i.parseRows,o=i.format,a=i.formatRows},function(t,n,e){"use strict";e.d(n,"c",function(){return u}),e.d(n,"d",function(){return c}),e.d(n,"a",function(){return o}),e.d(n,"b",function(){return a});var r=e(66),i=Object(r.a)("\t"),u=i.parse,c=i.parseRows,o=i.format,a=i.formatRows},function(t,n,e){"use strict";var r=e(304);e.d(n,"a",function(){return r.a});var i=e(305);e.d(n,"b",function(){return i.a});var u=e(319);e.d(n,"c",function(){return u.a});var c=e(320);e.d(n,"d",function(){return c.a});var o=e(321);e.d(n,"e",function(){return o.a});var a=e(123);e.d(n,"f",function(){return a.a});var f=e(322);e.d(n,"g",function(){return f.a});var s=e(323);e.d(n,"h",function(){return s.a})},function(t,n,e){"use strict";n.a=function(t,n){function e(){var e,i,u=r.length,c=0,o=0;for(e=0;e<u;++e)c+=(i=r[e]).x,o+=i.y;for(c=c/u-t,o=o/u-n,e=0;e<u;++e)(i=r[e]).x-=c,i.y-=o}var r;return null==t&&(t=0),null==n&&(n=0),e.initialize=function(t){r=t},e.x=function(n){return arguments.length?(t=+n,e):t},e.y=function(t){return arguments.length?(n=+t,e):n},e}},function(t,n,e){"use strict";function r(t){return t.x+t.vx}function i(t){return t.y+t.vy}var u=e(18),c=e(67),o=e(68);n.a=function(t){function n(){for(var t,n,u,a,d,b,v,p=f.length,g=0;g<h;++g)for(n=Object(o.a)(f,r,i).visitAfter(e),t=0;t<p;++t)u=f[t],b=s[u.index],v=b*b,a=u.x+u.vx,d=u.y+u.vy,n.visit(function(t,n,e,r,i){var o=t.data,f=t.r,s=b+f;if(!o)return n>a+s||r<a-s||e>d+s||i<d-s;if(o.index>u.index){var h=a-o.x-o.vx,p=d-o.y-o.vy,g=h*h+p*p;g<s*s&&(0===h&&(h=Object(c.a)(),g+=h*h),0===p&&(p=Object(c.a)(),g+=p*p),g=(s-(g=Math.sqrt(g)))/g*l,u.vx+=(h*=g)*(s=(f*=f)/(v+f)),u.vy+=(p*=g)*s,o.vx-=h*(s=1-s),o.vy-=p*s)}})}function e(t){if(t.data)return t.r=s[t.data.index];for(var n=t.r=0;n<4;++n)t[n]&&t[n].r>t.r&&(t.r=t[n].r)}function a(){if(f){var n,e,r=f.length;for(s=new Array(r),n=0;n<r;++n)e=f[n],s[e.index]=+t(e,n,f)}}var f,s,l=1,h=1;return"function"!=typeof t&&(t=Object(u.a)(null==t?1:+t)),n.initialize=function(t){f=t,a()},n.iterations=function(t){return arguments.length?(h=+t,n):h},n.strength=function(t){return arguments.length?(l=+t,n):l},n.radius=function(e){return arguments.length?(t="function"==typeof e?e:Object(u.a)(+e),a(),n):t},n}},function(t,n,e){"use strict";function r(t,n,e){var r=new i(null==n?p.b:n,null==e?g.b:e,NaN,NaN,NaN,NaN);return null==t?r:r.addAll(t)}function i(t,n,e,r,i,u){this._x=t,this._y=n,this._x0=e,this._y0=r,this._x1=i,this._y1=u,this._root=void 0}function u(t){for(var n={data:t.data},e=n;t=t.next;)e=e.next={data:t.data};return n}n.a=r;var c=e(307),o=e(308),a=e(309),f=e(310),s=e(311),l=e(312),h=e(313),d=e(314),b=e(315),v=e(316),p=e(317),g=e(318),_=r.prototype=i.prototype;_.copy=function(){var t,n,e=new i(this._x,this._y,this._x0,this._y0,this._x1,this._y1),r=this._root;if(!r)return e;if(!r.length)return e._root=u(r),e;for(t=[{source:r,target:e._root=new Array(4)}];r=t.pop();)for(var c=0;c<4;++c)(n=r.source[c])&&(n.length?t.push({source:n,target:r.target[c]=new Array(4)}):r.target[c]=u(n));return e},_.add=c.b,_.addAll=c.a,_.cover=o.a,_.data=a.a,_.extent=f.a,_.find=s.a,_.remove=l.a,_.removeAll=l.b,_.root=h.a,_.size=d.a,_.visit=b.a,_.visitAfter=v.a,_.x=p.a,_.y=g.a},function(t,n,e){"use strict";function r(t,n,e,r){if(isNaN(n)||isNaN(e))return t;var i,u,c,o,a,f,s,l,h,d=t._root,b={data:r},v=t._x0,p=t._y0,g=t._x1,_=t._y1;if(!d)return t._root=b,t;for(;d.length;)if((f=n>=(u=(v+g)/2))?v=u:g=u,(s=e>=(c=(p+_)/2))?p=c:_=c,i=d,!(d=d[l=s<<1|f]))return i[l]=b,t;if(o=+t._x.call(null,d.data),a=+t._y.call(null,d.data),n===o&&e===a)return b.next=d,i?i[l]=b:t._root=b,t;do{i=i?i[l]=new Array(4):t._root=new Array(4),(f=n>=(u=(v+g)/2))?v=u:g=u,(s=e>=(c=(p+_)/2))?p=c:_=c}while((l=s<<1|f)==(h=(a>=c)<<1|o>=u));return i[h]=d,i[l]=b,t}n.a=function(t){var n,e,i,u,c=t.length,o=new Array(c),a=new Array(c),f=1/0,s=1/0,l=-1/0,h=-1/0;for(e=0;e<c;++e)isNaN(i=+this._x.call(null,n=t[e]))||isNaN(u=+this._y.call(null,n))||(o[e]=i,a[e]=u,i<f&&(f=i),i>l&&(l=i),u<s&&(s=u),u>h&&(h=u));for(l<f&&(f=this._x0,l=this._x1),h<s&&(s=this._y0,h=this._y1),this.cover(f,s).cover(l,h),e=0;e<c;++e)r(this,o[e],a[e],t[e]);return this},n.b=function(t){var n=+this._x.call(null,t),e=+this._y.call(null,t);return r(this.cover(n,e),n,e,t)}},function(t,n,e){"use strict";n.a=function(t,n){if(isNaN(t=+t)||isNaN(n=+n))return this;var e=this._x0,r=this._y0,i=this._x1,u=this._y1;if(isNaN(e))i=(e=Math.floor(t))+1,u=(r=Math.floor(n))+1;else{if(!(e>t||t>i||r>n||n>u))return this;var c,o,a=i-e,f=this._root;switch(o=(n<(r+u)/2)<<1|t<(e+i)/2){case 0:do{c=new Array(4),c[o]=f,f=c}while(a*=2,i=e+a,u=r+a,t>i||n>u);break;case 1:do{c=new Array(4),c[o]=f,f=c}while(a*=2,e=i-a,u=r+a,e>t||n>u);break;case 2:do{c=new Array(4),c[o]=f,f=c}while(a*=2,i=e+a,r=u-a,t>i||r>n);break;case 3:do{c=new Array(4),c[o]=f,f=c}while(a*=2,e=i-a,r=u-a,e>t||r>n)}this._root&&this._root.length&&(this._root=f)}return this._x0=e,this._y0=r,this._x1=i,this._y1=u,this}},function(t,n,e){"use strict";n.a=function(){var t=[];return this.visit(function(n){if(!n.length)do{t.push(n.data)}while(n=n.next)}),t}},function(t,n,e){"use strict";n.a=function(t){return arguments.length?this.cover(+t[0][0],+t[0][1]).cover(+t[1][0],+t[1][1]):isNaN(this._x0)?void 0:[[this._x0,this._y0],[this._x1,this._y1]]}},function(t,n,e){"use strict";var r=e(69);n.a=function(t,n,e){var i,u,c,o,a,f,s,l=this._x0,h=this._y0,d=this._x1,b=this._y1,v=[],p=this._root;for(p&&v.push(new r.a(p,l,h,d,b)),null==e?e=1/0:(l=t-e,h=n-e,d=t+e,b=n+e,e*=e);f=v.pop();)if(!(!(p=f.node)||(u=f.x0)>d||(c=f.y0)>b||(o=f.x1)<l||(a=f.y1)<h))if(p.length){var g=(u+o)/2,_=(c+a)/2;v.push(new r.a(p[3],g,_,o,a),new r.a(p[2],u,_,g,a),new r.a(p[1],g,c,o,_),new r.a(p[0],u,c,g,_)),(s=(n>=_)<<1|t>=g)&&(f=v[v.length-1],v[v.length-1]=v[v.length-1-s],v[v.length-1-s]=f)}else{var y=t-+this._x.call(null,p.data),m=n-+this._y.call(null,p.data),O=y*y+m*m;if(O<e){var j=Math.sqrt(e=O);l=t-j,h=n-j,d=t+j,b=n+j,i=p.data}}return i}},function(t,n,e){"use strict";n.b=function(t){for(var n=0,e=t.length;n<e;++n)this.remove(t[n]);return this},n.a=function(t){if(isNaN(u=+this._x.call(null,t))||isNaN(c=+this._y.call(null,t)))return this;var n,e,r,i,u,c,o,a,f,s,l,h,d=this._root,b=this._x0,v=this._y0,p=this._x1,g=this._y1;if(!d)return this;if(d.length)for(;;){if((f=u>=(o=(b+p)/2))?b=o:p=o,(s=c>=(a=(v+g)/2))?v=a:g=a,n=d,!(d=d[l=s<<1|f]))return this;if(!d.length)break;(n[l+1&3]||n[l+2&3]||n[l+3&3])&&(e=n,h=l)}for(;d.data!==t;)if(r=d,!(d=d.next))return this;return(i=d.next)&&delete d.next,r?(i?r.next=i:delete r.next,this):n?(i?n[l]=i:delete n[l],(d=n[0]||n[1]||n[2]||n[3])&&d===(n[3]||n[2]||n[1]||n[0])&&!d.length&&(e?e[h]=d:this._root=d),this):(this._root=i,this)}},function(t,n,e){"use strict";n.a=function(){return this._root}},function(t,n,e){"use strict";n.a=function(){var t=0;return this.visit(function(n){if(!n.length)do{++t}while(n=n.next)}),t}},function(t,n,e){"use strict";var r=e(69);n.a=function(t){var n,e,i,u,c,o,a=[],f=this._root;for(f&&a.push(new r.a(f,this._x0,this._y0,this._x1,this._y1));n=a.pop();)if(!t(f=n.node,i=n.x0,u=n.y0,c=n.x1,o=n.y1)&&f.length){var s=(i+c)/2,l=(u+o)/2;(e=f[3])&&a.push(new r.a(e,s,l,c,o)),(e=f[2])&&a.push(new r.a(e,i,l,s,o)),(e=f[1])&&a.push(new r.a(e,s,u,c,l)),(e=f[0])&&a.push(new r.a(e,i,u,s,l))}return this}},function(t,n,e){"use strict";var r=e(69);n.a=function(t){var n,e=[],i=[];for(this._root&&e.push(new r.a(this._root,this._x0,this._y0,this._x1,this._y1));n=e.pop();){var u=n.node;if(u.length){var c,o=n.x0,a=n.y0,f=n.x1,s=n.y1,l=(o+f)/2,h=(a+s)/2;(c=u[0])&&e.push(new r.a(c,o,a,l,h)),(c=u[1])&&e.push(new r.a(c,l,a,f,h)),(c=u[2])&&e.push(new r.a(c,o,h,l,s)),(c=u[3])&&e.push(new r.a(c,l,h,f,s))}i.push(n)}for(;n=i.pop();)t(n.node,n.x0,n.y0,n.x1,n.y1);return this}},function(t,n,e){"use strict";n.b=function(t){return t[0]},n.a=function(t){return arguments.length?(this._x=t,this):this._x}},function(t,n,e){"use strict";n.b=function(t){return t[1]},n.a=function(t){return arguments.length?(this._y=t,this):this._y}},function(t,n,e){"use strict";function r(t){return t.index}function i(t,n){var e=t.get(n);if(!e)throw new Error("missing: "+n);return e}var u=e(18),c=e(67),o=e(23);n.a=function(t){function n(n){for(var e=0,r=t.length;e<_;++e)for(var i,u,o,a,f,h,d,v=0;v<r;++v)u=(i=t[v]).source,a=(o=i.target).x+o.vx-u.x-u.vx||Object(c.a)(),f=o.y+o.vy-u.y-u.vy||Object(c.a)(),a*=h=((h=Math.sqrt(a*a+f*f))-l[v])/h*n*s[v],f*=h,o.vx-=a*(d=b[v]),o.vy-=f*d,u.vx+=a*(d=1-d),u.vy+=f*d}function e(){if(h){var n,e,r=h.length,u=t.length,c=Object(o.c)(h,v);for(n=0,d=new Array(r);n<u;++n)(e=t[n]).index=n,"object"!=typeof e.source&&(e.source=i(c,e.source)),"object"!=typeof e.target&&(e.target=i(c,e.target)),d[e.source.index]=(d[e.source.index]||0)+1,d[e.target.index]=(d[e.target.index]||0)+1;for(n=0,b=new Array(u);n<u;++n)e=t[n],b[n]=d[e.source.index]/(d[e.source.index]+d[e.target.index]);s=new Array(u),a(),l=new Array(u),f()}}function a(){if(h)for(var n=0,e=t.length;n<e;++n)s[n]=+p(t[n],n,t)}function f(){if(h)for(var n=0,e=t.length;n<e;++n)l[n]=+g(t[n],n,t)}var s,l,h,d,b,v=r,p=function(t){return 1/Math.min(d[t.source.index],d[t.target.index])},g=Object(u.a)(30),_=1;return null==t&&(t=[]),n.initialize=function(t){h=t,e()},n.links=function(r){return arguments.length?(t=r,e(),n):t},n.id=function(t){return arguments.length?(v=t,n):v},n.iterations=function(t){return arguments.length?(_=+t,n):_},n.strength=function(t){return arguments.length?(p="function"==typeof t?t:Object(u.a)(+t),a(),n):p},n.distance=function(t){return arguments.length?(g="function"==typeof t?t:Object(u.a)(+t),f(),n):g},n}},function(t,n,e){"use strict";var r=e(18),i=e(67),u=e(68),c=e(123);n.a=function(){function t(t){var n,r=a.length,i=Object(u.a)(a,c.b,c.c).visitAfter(e);for(s=t,n=0;n<r;++n)f=a[n],i.visit(o)}function n(){if(a){var t,n,e=a.length;for(l=new Array(e),t=0;t<e;++t)n=a[t],l[n.index]=+h(n,t,a)}}function e(t){var n,e,r,i,u,c=0,o=0;if(t.length){for(r=i=u=0;u<4;++u)(n=t[u])&&(e=Math.abs(n.value))&&(c+=n.value,o+=e,r+=e*n.x,i+=e*n.y);t.x=r/o,t.y=i/o}else{(n=t).x=n.data.x,n.y=n.data.y;do{c+=l[n.data.index]}while(n=n.next)}t.value=c}function o(t,n,e,r){if(!t.value)return!0;var u=t.x-f.x,c=t.y-f.y,o=r-n,a=u*u+c*c;if(o*o/v<a)return a<b&&(0===u&&(u=Object(i.a)(),a+=u*u),0===c&&(c=Object(i.a)(),a+=c*c),a<d&&(a=Math.sqrt(d*a)),f.vx+=u*t.value*s/a,f.vy+=c*t.value*s/a),!0;if(!(t.length||a>=b)){(t.data!==f||t.next)&&(0===u&&(u=Object(i.a)(),a+=u*u),0===c&&(c=Object(i.a)(),a+=c*c),a<d&&(a=Math.sqrt(d*a)));do{t.data!==f&&(o=l[t.data.index]*s/a,f.vx+=u*o,f.vy+=c*o)}while(t=t.next)}}var a,f,s,l,h=Object(r.a)(-30),d=1,b=1/0,v=.81;return t.initialize=function(t){a=t,n()},t.strength=function(e){return arguments.length?(h="function"==typeof e?e:Object(r.a)(+e),n(),t):h},t.distanceMin=function(n){return arguments.length?(d=n*n,t):Math.sqrt(d)},t.distanceMax=function(n){return arguments.length?(b=n*n,t):Math.sqrt(b)},t.theta=function(n){return arguments.length?(v=n*n,t):Math.sqrt(v)},t}},function(t,n,e){"use strict";var r=e(18);n.a=function(t,n,e){function i(t){for(var r=0,i=c.length;r<i;++r){var u=c[r],f=u.x-n||1e-6,s=u.y-e||1e-6,l=Math.sqrt(f*f+s*s),h=(a[r]-l)*o[r]*t/l;u.vx+=f*h,u.vy+=s*h}}function u(){if(c){var n,e=c.length;for(o=new Array(e),a=new Array(e),n=0;n<e;++n)a[n]=+t(c[n],n,c),o[n]=isNaN(a[n])?0:+f(c[n],n,c)}}var c,o,a,f=Object(r.a)(.1);return"function"!=typeof t&&(t=Object(r.a)(+t)),null==n&&(n=0),null==e&&(e=0),i.initialize=function(t){c=t,u()},i.strength=function(t){return arguments.length?(f="function"==typeof t?t:Object(r.a)(+t),u(),i):f},i.radius=function(n){return arguments.length?(t="function"==typeof n?n:Object(r.a)(+n),u(),i):t},i.x=function(t){return arguments.length?(n=+t,i):n},i.y=function(t){return arguments.length?(e=+t,i):e},i}},function(t,n,e){"use strict";var r=e(18);n.a=function(t){function n(t){for(var n,e=0,r=i.length;e<r;++e)(n=i[e]).vx+=(c[e]-n.x)*u[e]*t}function e(){if(i){var n,e=i.length;for(u=new Array(e),c=new Array(e),n=0;n<e;++n)u[n]=isNaN(c[n]=+t(i[n],n,i))?0:+o(i[n],n,i)}}var i,u,c,o=Object(r.a)(.1);return"function"!=typeof t&&(t=Object(r.a)(null==t?0:+t)),n.initialize=function(t){i=t,e()},n.strength=function(t){return arguments.length?(o="function"==typeof t?t:Object(r.a)(+t),e(),n):o},n.x=function(i){return arguments.length?(t="function"==typeof i?i:Object(r.a)(+i),e(),n):t},n}},function(t,n,e){"use strict";var r=e(18);n.a=function(t){function n(t){for(var n,e=0,r=i.length;e<r;++e)(n=i[e]).vy+=(c[e]-n.y)*u[e]*t}function e(){if(i){var n,e=i.length;for(u=new Array(e),c=new Array(e),n=0;n<e;++n)u[n]=isNaN(c[n]=+t(i[n],n,i))?0:+o(i[n],n,i)}}var i,u,c,o=Object(r.a)(.1);return"function"!=typeof t&&(t=Object(r.a)(null==t?0:+t)),n.initialize=function(t){i=t,e()},n.strength=function(t){return arguments.length?(o="function"==typeof t?t:Object(r.a)(+t),e(),n):o},n.y=function(i){return arguments.length?(t="function"==typeof i?i:Object(r.a)(+i),e(),n):t},n}},function(t,n,e){"use strict";function r(t){return i=Object(o.a)(t),u=i.format,c=i.formatPrefix,i}e.d(n,"b",function(){return u}),e.d(n,"c",function(){return c}),n.a=r;var i,u,c,o=e(124);r({decimal:".",thousands:",",grouping:[3],currency:["$",""]})},function(t,n,e){"use strict";n.a=function(t,n){return function(e,r){for(var i=e.length,u=[],c=0,o=t[0],a=0;i>0&&o>0&&(a+o+1>r&&(o=Math.max(1,r-a)),u.push(e.substring(i-=o,i+o)),!((a+=o+1)>r));)o=t[c=(c+1)%t.length];return u.reverse().join(n)}}},function(t,n,e){"use strict";n.a=function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}},function(t,n,e){"use strict";n.a=function(t,n){t:for(var e,r=(t=t.toPrecision(n)).length,i=1,u=-1;i<r;++i)switch(t[i]){case".":u=e=i;break;case"0":0===u&&(u=i),e=i;break;case"e":break t;default:u>0&&(u=0)}return u>0?t.slice(0,u)+t.slice(e+1):t}},function(t,n,e){"use strict";var r=e(71);n.a=function(t,n){var e=Object(r.a)(t,n);if(!e)return t+"";var i=e[0],u=e[1];return u<0?"0."+new Array(-u).join("0")+i:i.length>u+1?i.slice(0,u+1)+"."+i.slice(u+1):i+new Array(u-i.length+2).join("0")}},function(t,n,e){"use strict";n.a=function(t){return t}},function(t,n,e){"use strict";var r=e(36);n.a=function(t){return Math.max(0,-Object(r.a)(Math.abs(t)))}},function(t,n,e){"use strict";var r=e(36);n.a=function(t,n){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(Object(r.a)(n)/3)))-Object(r.a)(Math.abs(t)))}},function(t,n,e){"use strict";var r=e(36);n.a=function(t,n){return t=Math.abs(t),n=Math.abs(n)-t,Math.max(0,Object(r.a)(n)-Object(r.a)(t))+1}},function(t,n,e){"use strict";var r=e(128);e.d(n,"c",function(){return r.c});var i=e(334);e.d(n,"h",function(){return i.a});var u=e(335);e.d(n,"i",function(){return u.a});var c=e(129);e.d(n,"j",function(){return c.b});var o=e(131);e.d(n,"k",function(){return o.a});var a=e(137);e.d(n,"l",function(){return a.a});var f=e(337);e.d(n,"m",function(){return f.a});var s=e(38);e.d(n,"n",function(){return s.a});var l=e(339);e.d(n,"u",function(){return l.a});var h=e(138);e.d(n,"v",function(){return h.a});var d=e(340);e.d(n,"A",function(){return d.a}),e.d(n,"B",function(){return d.b});var b=e(341);e.d(n,"D",function(){return b.a});var v=e(139);e.d(n,"E",function(){return v.a});var p=e(342);e.d(n,"L",function(){return p.a});var g=e(141);e.d(n,"a",function(){return g.a});var _=e(350);e.d(n,"b",function(){return _.a});var y=e(351);e.d(n,"d",function(){return y.b}),e.d(n,"e",function(){return y.a});var m=e(352);e.d(n,"f",function(){return m.b}),e.d(n,"g",function(){return m.a});var O=e(353);e.d(n,"o",function(){return O.b}),e.d(n,"p",function(){return O.a});var j=e(73);e.d(n,"q",function(){return j.b}),e.d(n,"r",function(){return j.a});var x=e(354);e.d(n,"s",function(){return x.b}),e.d(n,"t",function(){return x.a});var w=e(142);e.d(n,"w",function(){return w.a}),e.d(n,"x",function(){return w.b});var M=e(355);e.d(n,"y",function(){return M.a}),e.d(n,"z",function(){return M.b});var k=e(356);e.d(n,"C",function(){return k.a});var T=e(8);e.d(n,"M",function(){return T.a}),e.d(n,"N",function(){return T.b});var N=e(76);e.d(n,"F",function(){return N.a}),e.d(n,"G",function(){return N.c});var S=e(357);e.d(n,"H",function(){return S.a}),e.d(n,"I",function(){return S.b});var A=e(358);e.d(n,"J",function(){return A.a}),e.d(n,"K",function(){return A.b});var E=e(359);e.d(n,"P",function(){return E.a}),e.d(n,"Q",function(){return E.b});var C=e(360);e.d(n,"T",function(){return C.a}),e.d(n,"U",function(){return C.b});var z=e(37);e.d(n,"O",function(){return z.a});var P=e(14);e.d(n,"R",function(){return P.a});var q=e(39);e.d(n,"S",function(){return q.a})},function(t,n,e){"use strict";function r(t,n){O.push(j=[d=t,v=t]),n<b&&(b=n),n>p&&(p=n)}function i(t,n){var e=Object(M.a)([t*k.r,n*k.r]);if(m){var r=Object(M.c)(m,e),i=[r[1],-r[0],0],u=Object(M.c)(i,r);Object(M.e)(u),u=Object(M.g)(u);var c,o=t-g,a=o>0?1:-1,f=u[0]*k.h*a,l=Object(k.a)(o)>180;l^(a*g<f&&f<a*t)?(c=u[1]*k.h)>p&&(p=c):(f=(f+360)%360-180,l^(a*g<f&&f<a*t)?(c=-u[1]*k.h)<b&&(b=c):(n<b&&(b=n),n>p&&(p=n))),l?t<g?s(d,t)>s(d,v)&&(v=t):s(t,v)>s(d,v)&&(d=t):v>=d?(t<d&&(d=t),t>v&&(v=t)):t>g?s(d,t)>s(d,v)&&(v=t):s(t,v)>s(d,v)&&(d=t)}else O.push(j=[d=t,v=t]);n<b&&(b=n),n>p&&(p=n),m=e,g=t}function u(){S.point=i}function c(){j[0]=d,j[1]=v,S.point=r,m=null}function o(t,n){if(m){var e=t-g;N.add(Object(k.a)(e)>180?e+(e>0?360:-360):e)}else _=t,y=n;w.b.point(t,n),i(t,n)}function a(){w.b.lineStart()}function f(){o(_,y),w.b.lineEnd(),Object(k.a)(N)>k.i&&(d=-(v=180)),j[0]=d,j[1]=v,m=null}function s(t,n){return(n-=t)<0?n+360:n}function l(t,n){return t[0]-n[0]}function h(t,n){return t[0]<=t[1]?t[0]<=n&&n<=t[1]:n<t[0]||t[1]<n}var d,b,v,p,g,_,y,m,O,j,x=e(19),w=e(128),M=e(24),k=e(0),T=e(14),N=Object(x.a)(),S={point:r,lineStart:u,lineEnd:c,polygonStart:function(){S.point=o,S.lineStart=a,S.lineEnd=f,N.reset(),w.b.polygonStart()},polygonEnd:function(){w.b.polygonEnd(),S.point=r,S.lineStart=u,S.lineEnd=c,w.a<0?(d=-(v=180),b=-(p=90)):N>k.i?p=90:N<-k.i&&(b=-90),j[0]=d,j[1]=v}};n.a=function(t){var n,e,r,i,u,c,o;if(p=v=-(d=b=1/0),O=[],Object(T.a)(t,S),e=O.length){for(O.sort(l),n=1,u=[r=O[0]];n<e;++n)h(r,(i=O[n])[0])||h(r,i[1])?(s(r[0],i[1])>s(r[0],r[1])&&(r[1]=i[1]),s(i[0],r[1])>s(r[0],r[1])&&(r[0]=i[0])):u.push(r=i);for(c=-1/0,n=0,r=u[e=u.length-1];n<=e;r=i,++n)i=u[n],(o=s(r[1],i[0]))>c&&(c=o,d=i[0],v=r[1])}return O=j=null,d===1/0||b===1/0?[[NaN,NaN],[NaN,NaN]]:[[d,b],[v,p]]}},function(t,n,e){"use strict";function r(t,n){t*=S.r,n*=S.r;var e=Object(S.g)(n);i(e*Object(S.g)(t),e*Object(S.t)(t),Object(S.t)(n))}function i(t,n,e){v+=(t-v)/++d,p+=(n-p)/d,g+=(e-g)/d}function u(){C.point=c}function c(t,n){t*=S.r,n*=S.r;var e=Object(S.g)(n);k=e*Object(S.g)(t),T=e*Object(S.t)(t),N=Object(S.t)(n),C.point=o,i(k,T,N)}function o(t,n){t*=S.r,n*=S.r;var e=Object(S.g)(n),r=e*Object(S.g)(t),u=e*Object(S.t)(t),c=Object(S.t)(n),o=Object(S.e)(Object(S.u)((o=T*c-N*u)*o+(o=N*r-k*c)*o+(o=k*u-T*r)*o),k*r+T*u+N*c);b+=o,_+=o*(k+(k=r)),y+=o*(T+(T=u)),m+=o*(N+(N=c)),i(k,T,N)}function a(){C.point=r}function f(){C.point=l}function s(){h(w,M),C.point=r}function l(t,n){w=t,M=n,t*=S.r,n*=S.r,C.point=h;var e=Object(S.g)(n);k=e*Object(S.g)(t),T=e*Object(S.t)(t),N=Object(S.t)(n),i(k,T,N)}function h(t,n){t*=S.r,n*=S.r;var e=Object(S.g)(n),r=e*Object(S.g)(t),u=e*Object(S.t)(t),c=Object(S.t)(n),o=T*c-N*u,a=N*r-k*c,f=k*u-T*r,s=Object(S.u)(o*o+a*a+f*f),l=Object(S.c)(s),h=s&&-l/s;O+=h*o,j+=h*a,x+=h*f,b+=l,_+=l*(k+(k=r)),y+=l*(T+(T=u)),m+=l*(N+(N=c)),i(k,T,N)}var d,b,v,p,g,_,y,m,O,j,x,w,M,k,T,N,S=e(0),A=e(11),E=e(14),C={sphere:A.a,point:r,lineStart:u,lineEnd:a,polygonStart:function(){C.lineStart=f,C.lineEnd=s},polygonEnd:function(){C.lineStart=u,C.lineEnd=a}};n.a=function(t){d=b=v=p=g=_=y=m=O=j=x=0,Object(E.a)(t,C);var n=O,e=j,r=x,i=n*n+e*e+r*r;return i<S.j&&(n=_,e=y,r=m,b<S.i&&(n=v,e=p,r=g),(i=n*n+e*e+r*r)<S.j)?[NaN,NaN]:[Object(S.e)(e,n)*S.h,Object(S.c)(r/Object(S.u)(i))*S.h]}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";var r=e(38);n.a=function(){var t,n,e,i=0,u=0,c=960,o=500;return e={stream:function(e){return t&&n===e?t:t=Object(r.a)(i,u,c,o)(n=e)},extent:function(r){return arguments.length?(i=+r[0][0],u=+r[0][1],c=+r[1][0],o=+r[1][1],t=n=null,e):[[i,u],[c,o]]}}}},function(t,n,e){"use strict";n.a=function(t,n,e,r,i,u){var c,o=t[0],a=t[1],f=0,s=1,l=n[0]-o,h=n[1]-a;if(c=e-o,l||!(c>0)){if(c/=l,l<0){if(c<f)return;c<s&&(s=c)}else if(l>0){if(c>s)return;c>f&&(f=c)}if(c=i-o,l||!(c<0)){if(c/=l,l<0){if(c>s)return;c>f&&(f=c)}else if(l>0){if(c<f)return;c<s&&(s=c)}if(c=r-a,h||!(c>0)){if(c/=h,h<0){if(c<f)return;c<s&&(s=c)}else if(h>0){if(c>s)return;c>f&&(f=c)}if(c=u-a,h||!(c<0)){if(c/=h,h<0){if(c>s)return;c>f&&(f=c)}else if(h>0){if(c<f)return;c<s&&(s=c)}return f>0&&(t[0]=o+f*l,t[1]=a+f*h),s<1&&(n[0]=o+s*l,n[1]=a+s*h),!0}}}}}},function(t,n,e){"use strict";function r(t,n){return!(!t||!d.hasOwnProperty(t.type))&&d[t.type](t,n)}function i(t,n){return 0===Object(s.a)(t,n)}function u(t,n){var e=Object(s.a)(t[0],t[1]);return Object(s.a)(t[0],n)+Object(s.a)(n,t[1])<=e+l.i}function c(t,n){return!!Object(f.a)(t.map(o),a(n))}function o(t){return(t=t.map(a)).pop(),t}function a(t){return[t[0]*l.r,t[1]*l.r]}var f=e(136),s=e(138),l=e(0),h={Feature:function(t,n){return r(t.geometry,n)},FeatureCollection:function(t,n){for(var e=t.features,i=-1,u=e.length;++i<u;)if(r(e[i].geometry,n))return!0;return!1}},d={Sphere:function(){return!0},Point:function(t,n){return i(t.coordinates,n)},MultiPoint:function(t,n){for(var e=t.coordinates,r=-1,u=e.length;++r<u;)if(i(e[r],n))return!0;return!1},LineString:function(t,n){return u(t.coordinates,n)},MultiLineString:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(u(e[r],n))return!0;return!1},Polygon:function(t,n){return c(t.coordinates,n)},MultiPolygon:function(t,n){for(var e=t.coordinates,r=-1,i=e.length;++r<i;)if(c(e[r],n))return!0;return!1},GeometryCollection:function(t,n){for(var e=t.geometries,i=-1,u=e.length;++i<u;)if(r(e[i],n))return!0;return!1}};n.a=function(t,n){return(t&&h.hasOwnProperty(t.type)?h[t.type]:r)(t,n)}},function(t,n,e){"use strict";function r(t,n,e){var r=Object(c.s)(t,n-o.i,e).concat(n);return function(t){return r.map(function(n){return[t,n]})}}function i(t,n,e){var r=Object(c.s)(t,n-o.i,e).concat(n);return function(t){return r.map(function(n){return[n,t]})}}function u(){function t(){return{type:"MultiLineString",coordinates:n()}}function n(){return Object(c.s)(Object(o.f)(f/m)*m,a,m).map(p).concat(Object(c.s)(Object(o.f)(d/O)*O,h,O).map(g)).concat(Object(c.s)(Object(o.f)(u/_)*_,e,_).filter(function(t){return Object(o.a)(t%m)>o.i}).map(b)).concat(Object(c.s)(Object(o.f)(l/y)*y,s,y).filter(function(t){return Object(o.a)(t%O)>o.i}).map(v))}var e,u,a,f,s,l,h,d,b,v,p,g,_=10,y=_,m=90,O=360,j=2.5;return t.lines=function(){return n().map(function(t){return{type:"LineString",coordinates:t}})},t.outline=function(){return{type:"Polygon",coordinates:[p(f).concat(g(h).slice(1),p(a).reverse().slice(1),g(d).reverse().slice(1))]}},t.extent=function(n){return arguments.length?t.extentMajor(n).extentMinor(n):t.extentMinor()},t.extentMajor=function(n){return arguments.length?(f=+n[0][0],a=+n[1][0],d=+n[0][1],h=+n[1][1],f>a&&(n=f,f=a,a=n),d>h&&(n=d,d=h,h=n),t.precision(j)):[[f,d],[a,h]]},t.extentMinor=function(n){return arguments.length?(u=+n[0][0],e=+n[1][0],l=+n[0][1],s=+n[1][1],u>e&&(n=u,u=e,e=n),l>s&&(n=l,l=s,s=n),t.precision(j)):[[u,l],[e,s]]},t.step=function(n){return arguments.length?t.stepMajor(n).stepMinor(n):t.stepMinor()},t.stepMajor=function(n){return arguments.length?(m=+n[0],O=+n[1],t):[m,O]},t.stepMinor=function(n){return arguments.length?(_=+n[0],y=+n[1],t):[_,y]},t.precision=function(n){return arguments.length?(j=+n,b=r(l,s,90),v=i(u,e,j),p=r(d,h,90),g=i(f,a,j),t):j},t.extentMajor([[-180,-90+o.i],[180,90-o.i]]).extentMinor([[-180,-80-o.i],[180,80+o.i]])}n.a=u,n.b=function(){return u()()};var c=e(3),o=e(0)},function(t,n,e){"use strict";var r=e(0);n.a=function(t,n){var e=t[0]*r.r,i=t[1]*r.r,u=n[0]*r.r,c=n[1]*r.r,o=Object(r.g)(i),a=Object(r.t)(i),f=Object(r.g)(c),s=Object(r.t)(c),l=o*Object(r.g)(e),h=o*Object(r.t)(e),d=f*Object(r.g)(u),b=f*Object(r.t)(u),v=2*Object(r.c)(Object(r.u)(Object(r.m)(c-i)+o*f*Object(r.m)(u-e))),p=Object(r.t)(v),g=v?function(t){var n=Object(r.t)(t*=v)/p,e=Object(r.t)(v-t)/p,i=e*l+n*d,u=e*h+n*b,c=e*a+n*s;return[Object(r.e)(u,i)*r.h,Object(r.e)(c,Object(r.u)(i*i+u*u))*r.h]}:function(){return[e*r.h,i*r.h]};return g.distance=v,g}},function(t,n,e){"use strict";var r=e(72),i=e(14),u=e(343),c=e(140),o=e(344),a=e(345),f=e(346),s=e(347);n.a=function(t,n){function e(t){return t&&("function"==typeof d&&h.pointRadius(+d.apply(this,arguments)),Object(i.a)(t,l(h))),h.result()}var l,h,d=4.5;return e.area=function(t){return Object(i.a)(t,l(u.a)),u.a.result()},e.measure=function(t){return Object(i.a)(t,l(f.a)),f.a.result()},e.bounds=function(t){return Object(i.a)(t,l(c.a)),c.a.result()},e.centroid=function(t){return Object(i.a)(t,l(o.a)),o.a.result()},e.projection=function(n){return arguments.length?(l=null==n?(t=null,r.a):(t=n).stream,e):t},e.context=function(t){return arguments.length?(h=null==t?(n=null,new s.a):new a.a(n=t),"function"!=typeof d&&h.pointRadius(d),e):n},e.pointRadius=function(t){return arguments.length?(d="function"==typeof t?t:(h.pointRadius(+t),+t),e):d},e.projection(t).context(n)}},function(t,n,e){"use strict";function r(){p.point=i}function i(t,n){p.point=u,o=f=t,a=s=n}function u(t,n){v.add(s*t-f*n),f=t,s=n}function c(){u(o,a)}var o,a,f,s,l=e(19),h=e(0),d=e(11),b=Object(l.a)(),v=Object(l.a)(),p={point:d.a,lineStart:d.a,lineEnd:d.a,polygonStart:function(){p.lineStart=r,p.lineEnd=c},polygonEnd:function(){p.lineStart=p.lineEnd=p.point=d.a,b.add(Object(h.a)(v)),v.reset()},result:function(){var t=b/2;return b.reset(),t}};n.a=p},function(t,n,e){"use strict";function r(t,n){g+=t,_+=n,++y}function i(){k.point=u}function u(t,n){k.point=c,r(b=t,v=n)}function c(t,n){var e=t-b,i=n-v,u=Object(p.u)(e*e+i*i);m+=u*(b+t)/2,O+=u*(v+n)/2,j+=u,r(b=t,v=n)}function o(){k.point=r}function a(){k.point=s}function f(){l(h,d)}function s(t,n){k.point=l,r(h=b=t,d=v=n)}function l(t,n){var e=t-b,i=n-v,u=Object(p.u)(e*e+i*i);m+=u*(b+t)/2,O+=u*(v+n)/2,j+=u,x+=(u=v*t-b*n)*(b+t),w+=u*(v+n),M+=3*u,r(b=t,v=n)}var h,d,b,v,p=e(0),g=0,_=0,y=0,m=0,O=0,j=0,x=0,w=0,M=0,k={point:r,lineStart:i,lineEnd:o,polygonStart:function(){k.lineStart=a,k.lineEnd=f},polygonEnd:function(){k.point=r,k.lineStart=i,k.lineEnd=o},result:function(){var t=M?[x/M,w/M]:j?[m/j,O/j]:y?[g/y,_/y]:[NaN,NaN];return g=_=y=m=O=j=x=w=M=0,t}};n.a=k},function(t,n,e){"use strict";function r(t){this._context=t}n.a=r;var i=e(0),u=e(11);r.prototype={_radius:4.5,pointRadius:function(t){return this._radius=t,this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._context.closePath(),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._context.moveTo(t,n),this._point=1;break;case 1:this._context.lineTo(t,n);break;default:this._context.moveTo(t+this._radius,n),this._context.arc(t,n,this._radius,0,i.w)}},result:u.a}},function(t,n,e){"use strict";function r(t,n){b.point=i,c=a=t,o=f=n}function i(t,n){a-=t,f-=n,d.add(Object(l.u)(a*a+f*f)),a=t,f=n}var u,c,o,a,f,s=e(19),l=e(0),h=e(11),d=Object(s.a)(),b={point:h.a,lineStart:function(){b.point=r},lineEnd:function(){u&&i(c,o),b.point=h.a},polygonStart:function(){u=!0},polygonEnd:function(){u=null},result:function(){var t=+d;return d.reset(),t}};n.a=b},function(t,n,e){"use strict";function r(){this._string=[]}function i(t){return"m0,"+t+"a"+t+","+t+" 0 1,1 0,"+-2*t+"a"+t+","+t+" 0 1,1 0,"+2*t+"z"}n.a=r,r.prototype={_radius:4.5,_circle:i(4.5),pointRadius:function(t){return(t=+t)!==this._radius&&(this._radius=t,this._circle=null),this},polygonStart:function(){this._line=0},polygonEnd:function(){this._line=NaN},lineStart:function(){this._point=0},lineEnd:function(){0===this._line&&this._string.push("Z"),this._point=NaN},point:function(t,n){switch(this._point){case 0:this._string.push("M",t,",",n),this._point=1;break;case 1:this._string.push("L",t,",",n);break;default:null==this._circle&&(this._circle=i(this._radius)),this._string.push("M",t,",",n,this._circle)}},result:function(){if(this._string.length){var t=this._string.join("");return this._string=[],t}return null}}},function(t,n,e){"use strict";function r(t){return Object(o.b)({point:function(n,e){n=t(n,e),this.stream.point(n[0],n[1])}})}function i(t,n){function e(r,i,u,o,a,s,l,h,d,b,v,p,g,_){var y=l-r,m=h-i,O=y*y+m*m;if(O>4*n&&g--){var j=o+b,x=a+v,w=s+p,M=Object(c.u)(j*j+x*x+w*w),k=Object(c.c)(w/=M),T=Object(c.a)(Object(c.a)(w)-1)<c.i||Object(c.a)(u-d)<c.i?(u+d)/2:Object(c.e)(x,j),N=t(T,k),S=N[0],A=N[1],E=S-r,C=A-i,z=m*E-y*C;(z*z/O>n||Object(c.a)((y*E+m*C)/O-.5)>.3||o*b+a*v+s*p<f)&&(e(r,i,u,o,a,s,S,A,T,j/=M,x/=M,w,g,_),_.point(S,A),e(S,A,T,j,x,w,l,h,d,b,v,p,g,_))}}return function(n){function r(e,r){e=t(e,r),n.point(e[0],e[1])}function i(){y=NaN,w.point=c,n.lineStart()}function c(r,i){var c=Object(u.a)([r,i]),o=t(r,i);e(y,m,_,O,j,x,y=o[0],m=o[1],_=r,O=c[0],j=c[1],x=c[2],a,n),n.point(y,m)}function o(){w.point=r,n.lineEnd()}function f(){i(),w.point=s,w.lineEnd=l}function s(t,n){c(h=t,n),d=y,b=m,v=O,p=j,g=x,w.point=c}function l(){e(y,m,_,O,j,x,d,b,h,v,p,g,a,n),w.lineEnd=o,o()}var h,d,b,v,p,g,_,y,m,O,j,x,w={point:r,lineStart:i,lineEnd:o,polygonStart:function(){n.polygonStart(),w.lineStart=f},polygonEnd:function(){n.polygonEnd(),w.lineStart=i}};return w}}var u=e(24),c=e(0),o=e(39),a=16,f=Object(c.g)(30*c.r);n.a=function(t,n){return+n?i(t,n):r(t)}},function(t,n,e){"use strict";n.a=function(t){function n(t,n){return[t*e,Object(r.t)(n)/e]}var e=Object(r.g)(t);return n.invert=function(t,n){return[t/e,Object(r.c)(n*e)]},n};var r=e(0)},function(t,n,e){"use strict";function r(t){var n=t.length;return{point:function(e,r){for(var i=-1;++i<n;)t[i].point(e,r)},sphere:function(){for(var e=-1;++e<n;)t[e].sphere()},lineStart:function(){for(var e=-1;++e<n;)t[e].lineStart()},lineEnd:function(){for(var e=-1;++e<n;)t[e].lineEnd()},polygonStart:function(){for(var e=-1;++e<n;)t[e].polygonStart()},polygonEnd:function(){for(var e=-1;++e<n;)t[e].polygonEnd()}}}var i=e(0),u=e(141),c=e(73),o=e(75);n.a=function(){function t(t){var n=t[0],e=t[1];return h=null,f.point(n,e),h||(s.point(n,e),h)||(l.point(n,e),h)}function n(){return e=a=null,t}var e,a,f,s,l,h,d=Object(u.a)(),b=Object(c.b)().rotate([154,0]).center([-2,58.5]).parallels([55,65]),v=Object(c.b)().rotate([157,0]).center([-3,19.9]).parallels([8,18]),p={point:function(t,n){h=[t,n]}};return t.invert=function(t){var n=d.scale(),e=d.translate(),r=(t[0]-e[0])/n,i=(t[1]-e[1])/n;return(i>=.12&&i<.234&&r>=-.425&&r<-.214?b:i>=.166&&i<.234&&r>=-.214&&r<-.115?v:d).invert(t)},t.stream=function(t){return e&&a===t?e:e=r([d.stream(a=t),b.stream(t),v.stream(t)])},t.precision=function(t){return arguments.length?(d.precision(t),b.precision(t),v.precision(t),n()):d.precision()},t.scale=function(n){return arguments.length?(d.scale(n),b.scale(.35*n),v.scale(n),t.translate(d.translate())):d.scale()},t.translate=function(t){if(!arguments.length)return d.translate();var e=d.scale(),r=+t[0],u=+t[1];return f=d.translate(t).clipExtent([[r-.455*e,u-.238*e],[r+.455*e,u+.238*e]]).stream(p),s=b.translate([r-.307*e,u+.201*e]).clipExtent([[r-.425*e+i.i,u+.12*e+i.i],[r-.214*e-i.i,u+.234*e-i.i]]).stream(p),l=v.translate([r-.205*e,u+.212*e]).clipExtent([[r-.214*e+i.i,u+.166*e+i.i],[r-.115*e-i.i,u+.234*e-i.i]]).stream(p),n()},t.fitExtent=function(n,e){return Object(o.a)(t,n,e)},t.fitSize=function(n,e){return Object(o.b)(t,n,e)},t.scale(1070)}},function(t,n,e){"use strict";e.d(n,"a",function(){return c});var r=e(0),i=e(25),u=e(8),c=Object(i.b)(function(t){return Object(r.u)(2/(1+t))});c.invert=Object(i.a)(function(t){return 2*Object(r.c)(t/2)}),n.b=function(){return Object(u.a)(c).scale(124.75).clipAngle(179.999)}},function(t,n,e){"use strict";e.d(n,"a",function(){return c});var r=e(0),i=e(25),u=e(8),c=Object(i.b)(function(t){return(t=Object(r.b)(t))&&t/Object(r.t)(t)});c.invert=Object(i.a)(function(t){return t}),n.b=function(){return Object(u.a)(c).scale(79.4188).clipAngle(179.999)}},function(t,n,e){"use strict";function r(t){return Object(u.v)((u.l+t)/2)}function i(t,n){function e(t,n){a>0?n<-u.l+u.i&&(n=-u.l+u.i):n>u.l-u.i&&(n=u.l-u.i);var e=a/Object(u.p)(r(n),c);return[e*Object(u.t)(c*t),a-e*Object(u.g)(c*t)]}var i=Object(u.g)(t),c=t===n?Object(u.t)(t):Object(u.n)(i/Object(u.g)(n))/Object(u.n)(r(n)/r(t)),a=i*Object(u.p)(r(t),c)/c;return c?(e.invert=function(t,n){var e=a-n,r=Object(u.s)(c)*Object(u.u)(t*t+e*e);return[Object(u.e)(t,Object(u.a)(e))/c*Object(u.s)(e),2*Object(u.d)(Object(u.p)(a/r,1/c))-u.l]},e):o.c}n.a=i;var u=e(0),c=e(74),o=e(76);n.b=function(){return Object(c.a)(i).scale(109.5).parallels([30,30])}},function(t,n,e){"use strict";function r(t,n){function e(t,n){var e=o-n,r=u*t;return[e*Object(i.t)(r),o-e*Object(i.g)(r)]}var r=Object(i.g)(t),u=t===n?Object(i.t)(t):(r-Object(i.g)(n))/(n-t),o=r/u+t;return Object(i.a)(u)<i.i?c.b:(e.invert=function(t,n){var e=o-n;return[Object(i.e)(t,Object(i.a)(e))/u*Object(i.s)(e),o-Object(i.s)(u)*Object(i.u)(t*t+e*e)]},e)}n.a=r;var i=e(0),u=e(74),c=e(142);n.b=function(){return Object(u.a)(r).scale(131.154).center([0,13.9389])}},function(t,n,e){"use strict";function r(t,n){var e=Object(i.g)(n),r=Object(i.g)(t)*e;return[e*Object(i.t)(t)/r,Object(i.t)(n)/r]}n.b=r;var i=e(0),u=e(25),c=e(8);r.invert=Object(u.a)(i.d),n.a=function(){return Object(c.a)(r).scale(144.049).clipAngle(60)}},function(t,n,e){"use strict";function r(t,n,e,r){return 1===t&&1===n&&0===e&&0===r?u.a:Object(c.b)({point:function(i,u){this.stream.point(i*t+e,u*n+r)}})}var i=e(38),u=e(72),c=e(39),o=e(75);n.a=function(){function t(){return a=f=null,s}var n,e,c,a,f,s,l=1,h=0,d=0,b=1,v=1,p=u.a,g=null,_=u.a;return s={stream:function(t){return a&&f===t?a:a=p(_(f=t))},postclip:function(r){return arguments.length?(_=r,g=n=e=c=null,t()):_},clipExtent:function(r){return arguments.length?(_=null==r?(g=n=e=c=null,u.a):Object(i.a)(g=+r[0][0],n=+r[0][1],e=+r[1][0],c=+r[1][1]),t()):null==g?null:[[g,n],[e,c]]},scale:function(n){return arguments.length?(p=r((l=+n)*b,l*v,h,d),t()):l},translate:function(n){return arguments.length?(p=r(l*b,l*v,h=+n[0],d=+n[1]),t()):[h,d]},reflectX:function(n){return arguments.length?(p=r(l*(b=n?-1:1),l*v,h,d),t()):b<0},reflectY:function(n){return arguments.length?(p=r(l*b,l*(v=n?-1:1),h,d),t()):v<0},fitExtent:function(t,n){return Object(o.a)(s,t,n)},fitSize:function(t,n){return Object(o.b)(s,t,n)}}}},function(t,n,e){"use strict";function r(t,n){var e=n*n,r=e*e;return[t*(.8707-.131979*e+r*(r*(.003971*e-.001529*r)-.013791)),n*(1.007226+e*(.015085+r*(.028874*e-.044475-.005916*r)))]}n.b=r;var i=e(8),u=e(0);r.invert=function(t,n){var e,r=n,i=25;do{var c=r*r,o=c*c;r-=e=(r*(1.007226+c*(.015085+o*(.028874*c-.044475-.005916*o)))-n)/(1.007226+c*(.045255+o*(.259866*c-.311325-.005916*11*o)))}while(Object(u.a)(e)>u.i&&--i>0);return[t/(.8707+(c=r*r)*(c*(c*c*c*(.003971-.001529*c)-.013791)-.131979)),r]},n.a=function(){return Object(i.a)(r).scale(175.295)}},function(t,n,e){"use strict";function r(t,n){return[Object(i.g)(n)*Object(i.t)(t),Object(i.t)(n)]}n.b=r;var i=e(0),u=e(25),c=e(8);r.invert=Object(u.a)(i.c),n.a=function(){return Object(c.a)(r).scale(249.5).clipAngle(90+i.i)}},function(t,n,e){"use strict";function r(t,n){var e=Object(i.g)(n),r=1+Object(i.g)(t)*e;return[e*Object(i.t)(t)/r,Object(i.t)(n)/r]}n.b=r;var i=e(0),u=e(25),c=e(8);r.invert=Object(u.a)(function(t){return 2*Object(i.d)(t)}),n.a=function(){return Object(c.a)(r).scale(250).clipAngle(142)}},function(t,n,e){"use strict";function r(t,n){return[Object(i.n)(Object(i.v)((i.l+n)/2)),-t]}n.b=r;var i=e(0),u=e(76);r.invert=function(t,n){return[-n,2*Object(i.d)(Object(i.k)(t))-i.l]},n.a=function(){var t=Object(u.b)(r),n=t.center,e=t.rotate;return t.center=function(t){return arguments.length?n([-t[1],t[0]]):(t=n(),[t[1],-t[0]])},t.rotate=function(t){return arguments.length?e([t[0],t[1],t.length>2?t[2]+90:90]):(t=e(),[t[0],t[1],t[2]-90])},e([0,0,90]).scale(159.155)}},function(t,n,e){"use strict";var r=e(362);e.d(n,"a",function(){return r.a});var i=e(77);e.d(n,"b",function(){return i.c});var u=e(374);e.d(n,"c",function(){return u.a});var c=e(143);e.d(n,"e",function(){return c.a});var o=e(144);e.d(n,"d",function(){return o.a});var a=e(376);e.d(n,"f",function(){return a.a});var f=e(377);e.d(n,"g",function(){return f.a});var s=e(378);e.d(n,"h",function(){return s.a});var l=e(379);e.d(n,"i",function(){return l.a});var h=e(380);e.d(n,"j",function(){return h.a});var d=e(26);e.d(n,"k",function(){return d.a});var b=e(40);e.d(n,"m",function(){return b.a});var v=e(381);e.d(n,"n",function(){return v.a});var p=e(79);e.d(n,"o",function(){return p.a});var g=e(382);e.d(n,"l",function(){return g.a})},function(t,n,e){"use strict";function r(t,n){return t.parent===n.parent?1:2}function i(t){return t.reduce(u,0)/t.length}function u(t,n){return t+n.x}function c(t){return 1+t.reduce(o,0)}function o(t,n){return Math.max(t,n.y)}function a(t){for(var n;n=t.children;)t=n[0];return t}function f(t){for(var n;n=t.children;)t=n[n.length-1];return t}n.a=function(){function t(t){var r,s=0;t.eachAfter(function(t){var e=t.children;e?(t.x=i(e),t.y=c(e)):(t.x=r?s+=n(t,r):0,t.y=0,r=t)});var l=a(t),h=f(t),d=l.x-n(l,h)/2,b=h.x+n(h,l)/2;return t.eachAfter(o?function(n){n.x=(n.x-t.x)*e,n.y=(t.y-n.y)*u}:function(n){n.x=(n.x-d)/(b-d)*e,n.y=(1-(t.y?n.y/t.y:1))*u})}var n=r,e=1,u=1,o=!1;return t.separation=function(e){return arguments.length?(n=e,t):n},t.size=function(n){return arguments.length?(o=!1,e=+n[0],u=+n[1],t):o?null:[e,u]},t.nodeSize=function(n){return arguments.length?(o=!0,e=+n[0],u=+n[1],t):o?[e,u]:null},t}},function(t,n,e){"use strict";function r(t){var n=0,e=t.children,r=e&&e.length;if(r)for(;--r>=0;)n+=e[r].value;else n=1;t.value=n}n.a=function(){return this.eachAfter(r)}},function(t,n,e){"use strict";n.a=function(t){var n,e,r,i,u=this,c=[u];do{for(n=c.reverse(),c=[];u=n.pop();)if(t(u),e=u.children)for(r=0,i=e.length;r<i;++r)c.push(e[r])}while(c.length);return this}},function(t,n,e){"use strict";n.a=function(t){for(var n,e,r=this,i=[r];r=i.pop();)if(t(r),n=r.children)for(e=n.length-1;e>=0;--e)i.push(n[e]);return this}},function(t,n,e){"use strict";n.a=function(t){for(var n,e,r,i=this,u=[i],c=[];i=u.pop();)if(c.push(i),n=i.children)for(e=0,r=n.length;e<r;++e)u.push(n[e]);for(;i=c.pop();)t(i);return this}},function(t,n,e){"use strict";n.a=function(t){return this.eachAfter(function(n){for(var e=+t(n.data)||0,r=n.children,i=r&&r.length;--i>=0;)e+=r[i].value;n.value=e})}},function(t,n,e){"use strict";n.a=function(t){return this.eachBefore(function(n){n.children&&n.children.sort(t)})}},function(t,n,e){"use strict";function r(t,n){if(t===n)return t;var e=t.ancestors(),r=n.ancestors(),i=null;for(t=e.pop(),n=r.pop();t===n;)i=t,t=e.pop(),n=r.pop();return i}n.a=function(t){for(var n=this,e=r(n,t),i=[n];n!==e;)n=n.parent,i.push(n);for(var u=i.length;t!==e;)i.splice(u,0,t),t=t.parent;return i}},function(t,n,e){"use strict";n.a=function(){for(var t=this,n=[t];t=t.parent;)n.push(t);return n}},function(t,n,e){"use strict";n.a=function(){var t=[];return this.each(function(n){t.push(n)}),t}},function(t,n,e){"use strict";n.a=function(){var t=[];return this.eachBefore(function(n){n.children||t.push(n)}),t}},function(t,n,e){"use strict";n.a=function(){var t=this,n=[];return t.each(function(e){e!==t&&n.push({source:e.parent,target:e})}),n}},function(t,n,e){"use strict";function r(t){return Math.sqrt(t.value)}function i(t){return function(n){n.children||(n.r=Math.max(0,+t(n)||0))}}function u(t,n){return function(e){if(r=e.children){var r,i,u,c=r.length,a=t(e)*n||0;if(a)for(i=0;i<c;++i)r[i].r+=a;if(u=Object(o.b)(r),a)for(i=0;i<c;++i)r[i].r-=a;e.r=u+a}}}function c(t){return function(n){var e=n.parent;n.r*=t,e&&(n.x=e.x+t*n.x,n.y=e.y+t*n.y)}}var o=e(143),a=e(78),f=e(145);n.a=function(){function t(t){return t.x=e/2,t.y=o/2,n?t.eachBefore(i(n)).eachAfter(u(s,.5)).eachBefore(c(1)):t.eachBefore(i(r)).eachAfter(u(f.a,1)).eachAfter(u(s,t.r/Math.min(e,o))).eachBefore(c(Math.min(e,o)/(2*t.r))),t}var n=null,e=1,o=1,s=f.a;return t.radius=function(e){return arguments.length?(n=Object(a.a)(e),t):n},t.size=function(n){return arguments.length?(e=+n[0],o=+n[1],t):[e,o]},t.padding=function(n){return arguments.length?(s="function"==typeof n?n:Object(f.b)(+n),t):s},t}},function(t,n,e){"use strict";e.d(n,"b",function(){return r}),n.a=function(t){for(var n,e,r=t.length;r;)e=Math.random()*r--|0,n=t[r],t[r]=t[e],t[e]=n;return t};var r=Array.prototype.slice},function(t,n,e){"use strict";var r=e(146),i=e(26);n.a=function(){function t(t){var i=t.height+1;return t.x0=t.y0=c,t.x1=e,t.y1=u/i,t.eachBefore(n(u,i)),o&&t.eachBefore(r.a),t}function n(t,n){return function(e){e.children&&Object(i.a)(e,e.x0,t*(e.depth+1)/n,e.x1,t*(e.depth+2)/n);var r=e.x0,u=e.y0,o=e.x1-c,a=e.y1-c;o<r&&(r=o=(r+o)/2),a<u&&(u=a=(u+a)/2),e.x0=r,e.y0=u,e.x1=o,e.y1=a}}var e=1,u=1,c=0,o=!1;return t.round=function(n){return arguments.length?(o=!!n,t):o},t.size=function(n){return arguments.length?(e=+n[0],u=+n[1],t):[e,u]},t.padding=function(n){return arguments.length?(c=+n,t):c},t}},function(t,n,e){"use strict";function r(t){return t.id}function i(t){return t.parentId}var u=e(78),c=e(77),o="$",a={depth:-1},f={};n.a=function(){function t(t){var r,i,u,s,l,h,d,b=t.length,v=new Array(b),p={};for(i=0;i<b;++i)r=t[i],l=v[i]=new c.a(r),null!=(h=n(r,i,t))&&(h+="")&&(p[d=o+(l.id=h)]=d in p?f:l);for(i=0;i<b;++i)if(l=v[i],null!=(h=e(t[i],i,t))&&(h+="")){if(!(s=p[o+h]))throw new Error("missing: "+h);if(s===f)throw new Error("ambiguous: "+h);s.children?s.children.push(l):s.children=[l],l.parent=s}else{if(u)throw new Error("multiple roots");u=l}if(!u)throw new Error("no root");if(u.parent=a,u.eachBefore(function(t){t.depth=t.parent.depth+1,--b}).eachBefore(c.b),u.parent=null,b>0)throw new Error("cycle");return u}var n=r,e=i;return t.id=function(e){return arguments.length?(n=Object(u.b)(e),t):n},t.parentId=function(n){return arguments.length?(e=Object(u.b)(n),t):e},t}},function(t,n,e){"use strict";function r(t,n){return t.parent===n.parent?1:2}function i(t){var n=t.children;return n?n[0]:t.t}function u(t){var n=t.children;return n?n[n.length-1]:t.t}function c(t,n,e){var r=e/(n.i-t.i);n.c-=r,n.s+=e,t.c+=r,n.z+=e,n.m+=e}function o(t){for(var n,e=0,r=0,i=t.children,u=i.length;--u>=0;)(n=i[u]).z+=e,n.m+=e,e+=n.s+(r+=n.c)}function a(t,n,e){return t.a.parent===n.parent?t.a:e}function f(t,n){this._=t,this.parent=null,this.children=null,this.A=null,this.a=this,this.z=0,this.m=0,this.c=0,this.s=0,this.t=null,this.i=n}function s(t){for(var n,e,r,i,u,c=new f(t,0),o=[c];n=o.pop();)if(r=n._.children)for(n.children=new Array(u=r.length),i=u-1;i>=0;--i)o.push(e=n.children[i]=new f(r[i],i)),e.parent=n;return(c.parent=new f(null,0)).children=[c],c}var l=e(77);f.prototype=Object.create(l.a.prototype),n.a=function(){function t(t){var r=s(t);if(r.eachAfter(n),r.parent.m=-r.z,r.eachBefore(e),v)t.eachBefore(l);else{var i=t,u=t,c=t;t.eachBefore(function(t){t.x<i.x&&(i=t),t.x>u.x&&(u=t),t.depth>c.depth&&(c=t)});var o=i===u?1:h(i,u)/2,a=o-i.x,f=d/(u.x+o+a),p=b/(c.depth||1);t.eachBefore(function(t){t.x=(t.x+a)*f,t.y=t.depth*p})}return t}function n(t){var n=t.children,e=t.parent.children,r=t.i?e[t.i-1]:null;if(n){o(t);var i=(n[0].z+n[n.length-1].z)/2;r?(t.z=r.z+h(t._,r._),t.m=t.z-i):t.z=i}else r&&(t.z=r.z+h(t._,r._));t.parent.A=f(t,r,t.parent.A||e[0])}function e(t){t._.x=t.z+t.parent.m,t.m+=t.parent.m}function f(t,n,e){if(n){for(var r,o=t,f=t,s=n,l=o.parent.children[0],d=o.m,b=f.m,v=s.m,p=l.m;s=u(s),o=i(o),s&&o;)l=i(l),(f=u(f)).a=t,(r=s.z+v-o.z-d+h(s._,o._))>0&&(c(a(s,t,e),t,r),d+=r,b+=r),v+=s.m,d+=o.m,p+=l.m,b+=f.m;s&&!u(f)&&(f.t=s,f.m+=v-b),o&&!i(l)&&(l.t=o,l.m+=d-p,e=t)}return e}function l(t){t.x*=d,t.y=t.depth*b}var h=r,d=1,b=1,v=null;return t.separation=function(n){return arguments.length?(h=n,t):h},t.size=function(n){return arguments.length?(v=!1,d=+n[0],b=+n[1],t):v?null:[d,b]},t.nodeSize=function(n){return arguments.length?(v=!0,d=+n[0],b=+n[1],t):v?[d,b]:null},t}},function(t,n,e){"use strict";var r=e(146),i=e(79),u=e(78),c=e(145);n.a=function(){function t(t){return t.x0=t.y0=0,t.x1=a,t.y1=f,t.eachBefore(n),s=[0],o&&t.eachBefore(r.a),t}function n(t){var n=s[t.depth],r=t.x0+n,i=t.y0+n,u=t.x1-n,c=t.y1-n;u<r&&(r=u=(r+u)/2),c<i&&(i=c=(i+c)/2),t.x0=r,t.y0=i,t.x1=u,t.y1=c,t.children&&(n=s[t.depth+1]=l(t)/2,r+=v(t)-n,i+=h(t)-n,u-=d(t)-n,c-=b(t)-n,u<r&&(r=u=(r+u)/2),c<i&&(i=c=(i+c)/2),e(t,r,i,u,c))}var e=i.a,o=!1,a=1,f=1,s=[0],l=c.a,h=c.a,d=c.a,b=c.a,v=c.a;return t.round=function(n){return arguments.length?(o=!!n,t):o},t.size=function(n){return arguments.length?(a=+n[0],f=+n[1],t):[a,f]},t.tile=function(n){return arguments.length?(e=Object(u.b)(n),t):e},t.padding=function(n){return arguments.length?t.paddingInner(n).paddingOuter(n):t.paddingInner()},t.paddingInner=function(n){return arguments.length?(l="function"==typeof n?n:Object(c.b)(+n),t):l},t.paddingOuter=function(n){return arguments.length?t.paddingTop(n).paddingRight(n).paddingBottom(n).paddingLeft(n):t.paddingTop()},t.paddingTop=function(n){return arguments.length?(h="function"==typeof n?n:Object(c.b)(+n),t):h},t.paddingRight=function(n){return arguments.length?(d="function"==typeof n?n:Object(c.b)(+n),t):d},t.paddingBottom=function(n){return arguments.length?(b="function"==typeof n?n:Object(c.b)(+n),t):b},t.paddingLeft=function(n){return arguments.length?(v="function"==typeof n?n:Object(c.b)(+n),t):v},t}},function(t,n,e){"use strict";n.a=function(t,n,e,r,i){function u(t,n,e,r,i,c,o){if(t>=n-1){var f=a[t];return f.x0=r,f.y0=i,f.x1=c,void(f.y1=o)}for(var l=s[t],h=e/2+l,d=t+1,b=n-1;d<b;){var v=d+b>>>1;s[v]<h?d=v+1:b=v}h-s[d-1]<s[d]-h&&t+1<d&&--d;var p=s[d]-l,g=e-p;if(c-r>o-i){var _=(r*g+c*p)/e;u(t,d,p,r,i,_,o),u(d,n,g,_,i,c,o)}else{var y=(i*g+o*p)/e;u(t,d,p,r,i,c,y),u(d,n,g,r,y,c,o)}}var c,o,a=t.children,f=a.length,s=new Array(f+1);for(s[0]=o=c=0;c<f;++c)s[c+1]=o+=a[c].value;u(0,f,t.value,n,e,r,i)}},function(t,n,e){"use strict";var r=e(26),i=e(40);n.a=function(t,n,e,u,c){(1&t.depth?i.a:r.a)(t,n,e,u,c)}},function(t,n,e){"use strict";var r=e(26),i=e(40),u=e(79);n.a=function t(n){function e(t,e,c,o,a){if((f=t._squarify)&&f.ratio===n)for(var f,s,l,h,d,b=-1,v=f.length,p=t.value;++b<v;){for(l=(s=f[b]).children,h=s.value=0,d=l.length;h<d;++h)s.value+=l[h].value;s.dice?Object(r.a)(s,e,c,o,c+=(a-c)*s.value/p):Object(i.a)(s,e,c,e+=(o-e)*s.value/p,a),p-=s.value}else t._squarify=f=Object(u.c)(n,t,e,c,o,a),f.ratio=n}return e.ratio=function(n){return t((n=+n)>1?n:1)},e}(u.b)},function(t,n,e){"use strict";var r=e(384);e.d(n,"a",function(){return r.a});var i=e(385);e.d(n,"b",function(){return i.a});var u=e(386);e.d(n,"d",function(){return u.a});var c=e(388);e.d(n,"c",function(){return c.a});var o=e(389);e.d(n,"e",function(){return o.a})},function(t,n,e){"use strict";n.a=function(t){for(var n,e=-1,r=t.length,i=t[r-1],u=0;++e<r;)n=i,i=t[e],u+=n[1]*i[0]-n[0]*i[1];return u/2}},function(t,n,e){"use strict";n.a=function(t){for(var n,e,r=-1,i=t.length,u=0,c=0,o=t[i-1],a=0;++r<i;)n=o,o=t[r],a+=e=n[0]*o[1]-o[0]*n[1],u+=(n[0]+o[0])*e,c+=(n[1]+o[1])*e;return a*=3,[u/a,c/a]}},function(t,n,e){"use strict";function r(t,n){return t[0]-n[0]||t[1]-n[1]}function i(t){for(var n=t.length,e=[0,1],r=2,i=2;i<n;++i){for(;r>1&&Object(u.a)(t[e[r-2]],t[e[r-1]],t[i])<=0;)--r;e[r++]=i}return e.slice(0,r)}var u=e(387);n.a=function(t){if((e=t.length)<3)return null;var n,e,u=new Array(e),c=new Array(e);for(n=0;n<e;++n)u[n]=[+t[n][0],+t[n][1],n];for(u.sort(r),n=0;n<e;++n)c[n]=[u[n][0],-u[n][1]];var o=i(u),a=i(c),f=a[0]===o[0],s=a[a.length-1]===o[o.length-1],l=[];for(n=o.length-1;n>=0;--n)l.push(t[u[o[n]][2]]);for(n=+f;n<a.length-s;++n)l.push(t[u[a[n]][2]]);return l}},function(t,n,e){"use strict";n.a=function(t,n,e){return(n[0]-t[0])*(e[1]-t[1])-(n[1]-t[1])*(e[0]-t[0])}},function(t,n,e){"use strict";n.a=function(t,n){for(var e,r,i=t.length,u=t[i-1],c=n[0],o=n[1],a=u[0],f=u[1],s=!1,l=0;l<i;++l)e=(u=t[l])[0],(r=u[1])>o!=f>o&&c<(a-e)*(o-r)/(f-r)+e&&(s=!s),a=e,f=r;return s}},function(t,n,e){"use strict";n.a=function(t){for(var n,e,r=-1,i=t.length,u=t[i-1],c=u[0],o=u[1],a=0;++r<i;)n=c,e=o,n-=c=(u=t[r])[0],e-=o=u[1],a+=Math.sqrt(n*n+e*e);return a}},function(t,n,e){"use strict";var r=e(391);e.d(n,"a",function(){return r.a})},function(t,n,e){"use strict";function r(t){this._size=t,this._call=this._error=null,this._tasks=[],this._data=[],this._waiting=this._active=this._ended=this._start=0}function i(t){if(!t._start)try{u(t)}catch(n){if(t._tasks[t._ended+t._active-1])o(t,n);else if(!t._data)throw n}}function u(t){for(;t._start=t._waiting&&t._active<t._size;){var n=t._ended+t._active,e=t._tasks[n],r=e.length-1,i=e[r];e[r]=c(t,n),--t._waiting,++t._active,e=i.apply(null,e),t._tasks[n]&&(t._tasks[n]=e||l)}}function c(t,n){return function(e,r){t._tasks[n]&&(--t._active,++t._ended,t._tasks[n]=null,null==t._error&&(null!=e?o(t,e):(t._data[n]=r,t._waiting?i(t):a(t))))}}function o(t,n){var e,r=t._tasks.length;for(t._error=n,t._data=void 0,t._waiting=NaN;--r>=0;)if((e=t._tasks[r])&&(t._tasks[r]=null,e.abort))try{e.abort()}catch(n){}t._active=NaN,a(t)}function a(t){if(!t._active&&t._call){var n=t._data;t._data=void 0,t._call(t._error,n)}}function f(t){if(null==t)t=1/0;else if(!((t=+t)>=1))throw new Error("invalid concurrency");return new r(t)}n.a=f;var s=e(392),l={};r.prototype=f.prototype={constructor:r,defer:function(t){if("function"!=typeof t)throw new Error("invalid callback");if(this._call)throw new Error("defer after await");if(null!=this._error)return this;var n=s.a.call(arguments,1);return n.push(t),++this._waiting,this._tasks.push(n),i(this),this},abort:function(){return null==this._error&&o(this,new Error("abort")),this},await:function(t){if("function"!=typeof t)throw new Error("invalid callback");if(this._call)throw new Error("multiple await");return this._call=function(n,e){t.apply(null,[n].concat(e))},a(this),this},awaitAll:function(t){if("function"!=typeof t)throw new Error("invalid callback");if(this._call)throw new Error("multiple await");return this._call=t,a(this),this}}},function(t,n,e){"use strict";e.d(n,"a",function(){return r});var r=[].slice},function(t,n,e){"use strict";var r=e(394);e.d(n,"f",function(){return r.a});var i=e(147);e.d(n,"e",function(){return i.a});var u=e(395);e.d(n,"d",function(){return u.a});var c=e(396);e.d(n,"a",function(){return c.a});var o=e(148);e.d(n,"c",function(){return o.a});var a=e(397);e.d(n,"b",function(){return a.a})},function(t,n,e){"use strict";var r=e(20);n.a=function t(n){function e(t,e){return t=null==t?0:+t,e=null==e?1:+e,1===arguments.length?(e=t,t=0):e-=t,function(){return n()*e+t}}return e.source=t,e}(r.a)},function(t,n,e){"use strict";var r=e(20),i=e(147);n.a=function t(n){function e(){var t=i.a.source(n).apply(this,arguments);return function(){return Math.exp(t())}}return e.source=t,e}(r.a)},function(t,n,e){"use strict";var r=e(20),i=e(148);n.a=function t(n){function e(t){var e=i.a.source(n)(t);return function(){return e()/t}}return e.source=t,e}(r.a)},function(t,n,e){"use strict";var r=e(20);n.a=function t(n){function e(t){return function(){return-Math.log(1-n())/t}}return e.source=t,e}(r.a)},function(t,n,e){"use strict";var r=e(80);e.d(n,"d",function(){return r.a});var i=e(399);e.d(n,"b",function(){return i.a});var u=e(400);e.d(n,"c",function(){return u.a});var c=e(401);e.d(n,"e",function(){return c.a});var o=e(402);e.d(n,"g",function(){return o.a});var a=e(403);e.d(n,"a",function(){return a.a});var f=e(404);e.d(n,"f",function(){return f.a})},function(t,n,e){"use strict";var r=e(41);n.a=Object(r.a)("text/html",function(t){return document.createRange().createContextualFragment(t.responseText)})},function(t,n,e){"use strict";var r=e(41);n.a=Object(r.a)("application/json",function(t){return JSON.parse(t.responseText)})},function(t,n,e){"use strict";var r=e(41);n.a=Object(r.a)("text/plain",function(t){return t.responseText})},function(t,n,e){"use strict";var r=e(41);n.a=Object(r.a)("application/xml",function(t){var n=t.responseXML;if(!n)throw new Error("parse error");return n})},function(t,n,e){"use strict";var r=e(65),i=e(149);n.a=Object(i.a)("text/csv",r.c)},function(t,n,e){"use strict";var r=e(65),i=e(149);n.a=Object(i.a)("text/tab-separated-values",r.h)},function(t,n,e){"use strict";var r=e(406);e.d(n,"i",function(){return r.a}),e.d(n,"o",function(){return r.b});var i=e(407);e.d(n,"j",function(){return i.a});var u=e(27);e.d(n,"l",function(){return u.a});var c=e(409);e.d(n,"m",function(){return c.a});var o=e(150);e.d(n,"n",function(){return o.a}),e.d(n,"k",function(){return o.b});var a=e(410);e.d(n,"p",function(){return a.a}),e.d(n,"t",function(){return a.b});var f=e(411);e.d(n,"q",function(){return f.a});var s=e(412);e.d(n,"r",function(){return s.a});var l=e(413);e.d(n,"u",function(){return l.a});var h=e(153);e.d(n,"v",function(){return h.b});var d=e(429);e.d(n,"w",function(){return d.a});var b=e(430);e.d(n,"x",function(){return b.a});var v=e(431);e.d(n,"z",function(){return v.a});var p=e(432);e.d(n,"A",function(){return p.a});var g=e(433);e.d(n,"y",function(){return g.a});var _=e(434);e.d(n,"b",function(){return _.a});var y=e(435);e.d(n,"f",function(){return y.b}),e.d(n,"h",function(){return y.c}),e.d(n,"a",function(){return y.a});var m=e(436);e.d(n,"g",function(){return m.a}),e.d(n,"d",function(){return m.c}),e.d(n,"c",function(){return m.b}),e.d(n,"e",function(){return m.d});var O=e(437);e.d(n,"s",function(){return O.a})},function(t,n,e){"use strict";function r(){function t(){var t=o().length,r=f[1]<f[0],i=f[r-0],c=f[1-r];n=(c-i)/Math.max(1,t-l+2*h),s&&(n=Math.floor(n)),i+=(c-i-n*(t-l))*d,e=n*(1-l),s&&(i=Math.round(i),e=Math.round(e));var b=Object(u.s)(t).map(function(t){return i+n*t});return a(r?b.reverse():b)}var n,e,i=Object(c.a)().unknown(void 0),o=i.domain,a=i.range,f=[0,1],s=!1,l=0,h=0,d=.5;return delete i.unknown,i.domain=function(n){return arguments.length?(o(n),t()):o()},i.range=function(n){return arguments.length?(f=[+n[0],+n[1]],t()):f.slice()},i.rangeRound=function(n){return f=[+n[0],+n[1]],s=!0,t()},i.bandwidth=function(){return e},i.step=function(){return n},i.round=function(n){return arguments.length?(s=!!n,t()):s},i.padding=function(n){return arguments.length?(l=h=Math.max(0,Math.min(1,n)),t()):l},i.paddingInner=function(n){return arguments.length?(l=Math.max(0,Math.min(1,n)),t()):l},i.paddingOuter=function(n){return arguments.length?(h=Math.max(0,Math.min(1,n)),t()):h},i.align=function(n){return arguments.length?(d=Math.max(0,Math.min(1,n)),t()):d},i.copy=function(){return r().domain(o()).range(f).round(s).paddingInner(l).paddingOuter(h).align(d)},t()}function i(t){var n=t.copy;return t.padding=t.paddingOuter,delete t.paddingInner,delete t.paddingOuter,t.copy=function(){return i(n())},t}n.a=r,n.b=function(){return i(r().paddingInner(1))};var u=e(3),c=e(150)},function(t,n,e){"use strict";function r(){function t(t){return+t}var n=[0,1];return t.invert=t,t.domain=t.range=function(e){return arguments.length?(n=i.a.call(e,c.a),t):n.slice()},t.copy=function(){return r().domain(n)},Object(u.b)(t)}n.a=r;var i=e(15),u=e(27),c=e(151)},function(t,n,e){"use strict";var r=e(3),i=e(70);n.a=function(t,n,e){var u,c=t[0],o=t[t.length-1],a=Object(r.A)(c,o,null==n?10:n);switch((e=Object(i.e)(null==e?",f":e)).type){case"s":var f=Math.max(Math.abs(c),Math.abs(o));return null!=e.precision||isNaN(u=Object(i.g)(a,f))||(e.precision=u),Object(i.d)(e,f);case"":case"e":case"g":case"p":case"r":null!=e.precision||isNaN(u=Object(i.h)(a,Math.max(Math.abs(c),Math.abs(o))))||(e.precision=u-("e"===e.type));break;case"f":case"%":null!=e.precision||isNaN(u=Object(i.f)(a))||(e.precision=u-2*("%"===e.type))}return Object(i.a)(e)}},function(t,n,e){"use strict";function r(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:Object(h.a)(n)}function i(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function u(t){return isFinite(t)?+("1e"+t):t<0?0:t}function c(t){return 10===t?u:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function o(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function a(t){return function(n){return-t(-n)}}function f(){function t(){return h=o(u),v=c(u),e()[0]<0&&(h=a(h),v=a(v)),n}var n=Object(b.b)(r,i).domain([1,10]),e=n.domain,u=10,h=o(10),v=c(10);return n.base=function(n){return arguments.length?(u=+n,t()):u},n.domain=function(n){return arguments.length?(e(n),t()):e()},n.ticks=function(t){var n,r=e(),i=r[0],c=r[r.length-1];(n=c<i)&&(l=i,i=c,c=l);var o,a,f,l=h(i),d=h(c),b=null==t?10:+t,p=[];if(!(u%1)&&d-l<b){if(l=Math.round(l)-1,d=Math.round(d)+1,i>0){for(;l<d;++l)for(a=1,o=v(l);a<u;++a)if(!((f=o*a)<i)){if(f>c)break;p.push(f)}}else for(;l<d;++l)for(a=u-1,o=v(l);a>=1;--a)if(!((f=o*a)<i)){if(f>c)break;p.push(f)}}else p=Object(s.B)(l,d,Math.min(d-l,b)).map(v);return n?p.reverse():p},n.tickFormat=function(t,e){if(null==e&&(e=10===u?".0e":","),"function"!=typeof e&&(e=Object(l.a)(e)),t===1/0)return e;null==t&&(t=10);var r=Math.max(1,u*t/n.ticks().length);return function(t){var n=t/v(Math.round(h(t)));return n*u<u-.5&&(n*=u),n<=r?e(t):""}},n.nice=function(){return e(Object(d.a)(e(),{floor:function(t){return v(Math.floor(h(t)))},ceil:function(t){return v(Math.ceil(h(t)))}}))},n.copy=function(){return Object(b.a)(n,f().base(u))},n}n.a=f;var s=e(3),l=e(70),h=e(81),d=e(152),b=e(42)},function(t,n,e){"use strict";function r(t,n){return t<0?-Math.pow(-t,n):Math.pow(t,n)}function i(){var t=1,n=Object(o.b)(function(n,e){return(e=r(e,t)-(n=r(n,t)))?function(i){return(r(i,t)-n)/e}:Object(u.a)(e)},function(n,e){return e=r(e,t)-(n=r(n,t)),function(i){return r(n+e*i,1/t)}}),e=n.domain;return n.exponent=function(n){return arguments.length?(t=+n,e(e())):t},n.copy=function(){return Object(o.a)(n,i().exponent(t))},Object(c.b)(n)}n.a=i,n.b=function(){return i().exponent(.5)};var u=e(81),c=e(27),o=e(42)},function(t,n,e){"use strict";function r(){function t(){var t=0,r=Math.max(1,c.length);for(o=new Array(r-1);++t<r;)o[t-1]=Object(i.r)(e,t/r);return n}function n(t){if(!isNaN(t=+t))return c[Object(i.b)(o,t)]}var e=[],c=[],o=[];return n.invertExtent=function(t){var n=c.indexOf(t);return n<0?[NaN,NaN]:[n>0?o[n-1]:e[0],n<o.length?o[n]:e[e.length-1]]},n.domain=function(n){if(!arguments.length)return e.slice();e=[];for(var r,u=0,c=n.length;u<c;++u)null==(r=n[u])||isNaN(r=+r)||e.push(r);return e.sort(i.a),t()},n.range=function(n){return arguments.length?(c=u.b.call(n),t()):c.slice()},n.quantiles=function(){return o.slice()},n.copy=function(){return r().domain(e).range(c)},n}n.a=r;var i=e(3),u=e(15)},function(t,n,e){"use strict";function r(){function t(t){if(t<=t)return s[Object(i.b)(f,t,0,a)]}function n(){var n=-1;for(f=new Array(a);++n<a;)f[n]=((n+1)*o-(n-a)*e)/(a+1);return t}var e=0,o=1,a=1,f=[.5],s=[0,1];return t.domain=function(t){return arguments.length?(e=+t[0],o=+t[1],n()):[e,o]},t.range=function(t){return arguments.length?(a=(s=u.b.call(t)).length-1,n()):s.slice()},t.invertExtent=function(t){var n=s.indexOf(t);return n<0?[NaN,NaN]:n<1?[e,f[0]]:n>=a?[f[a-1],o]:[f[n-1],f[n]]},t.copy=function(){return r().domain([e,o]).range(s)},Object(c.b)(t)}n.a=r;var i=e(3),u=e(15),c=e(27)},function(t,n,e){"use strict";function r(){function t(t){if(t<=t)return e[Object(i.b)(n,t,0,c)]}var n=[.5],e=[0,1],c=1;return t.domain=function(r){return arguments.length?(n=u.b.call(r),c=Math.min(n.length,e.length-1),t):n.slice()},t.range=function(r){return arguments.length?(e=u.b.call(r),c=Math.min(n.length,e.length-1),t):e.slice()},t.invertExtent=function(t){var r=e.indexOf(t);return[n[r-1],n[r]]},t.copy=function(){return r().domain(n).range(e)},t}n.a=r;var i=e(3),u=e(15)},function(t,n,e){"use strict";e.d(n,"b",function(){return u});var r=e(2),i=Object(r.a)(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Object(r.a)(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):i:null},n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"b",function(){return c});var r=e(2),i=e(9),u=Object(r.a)(function(t){t.setTime(Math.floor(t/i.d)*i.d)},function(t,n){t.setTime(+t+n*i.d)},function(t,n){return(n-t)/i.d},function(t){return t.getUTCSeconds()});n.a=u;var c=u.range},function(t,n,e){"use strict";e.d(n,"b",function(){return c});var r=e(2),i=e(9),u=Object(r.a)(function(t){t.setTime(Math.floor(t/i.c)*i.c)},function(t,n){t.setTime(+t+n*i.c)},function(t,n){return(n-t)/i.c},function(t){return t.getMinutes()});n.a=u;var c=u.range},function(t,n,e){"use strict";e.d(n,"b",function(){return c});var r=e(2),i=e(9),u=Object(r.a)(function(t){var n=t.getTimezoneOffset()*i.c%i.b;n<0&&(n+=i.b),t.setTime(Math.floor((+t-n)/i.b)*i.b+n)},function(t,n){t.setTime(+t+n*i.b)},function(t,n){return(n-t)/i.b},function(t){return t.getHours()});n.a=u;var c=u.range},function(t,n,e){"use strict";e.d(n,"a",function(){return c});var r=e(2),i=e(9),u=Object(r.a)(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*i.c)/i.a},function(t){return t.getDate()-1});n.b=u;var c=u.range},function(t,n,e){"use strict";function r(t){return Object(i.a)(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*u.c)/u.e})}e.d(n,"g",function(){return c}),e.d(n,"c",function(){return o}),e.d(n,"k",function(){return a}),e.d(n,"m",function(){return f}),e.d(n,"i",function(){return s}),e.d(n,"a",function(){return l}),e.d(n,"e",function(){return h}),e.d(n,"h",function(){return d}),e.d(n,"d",function(){return b}),e.d(n,"l",function(){return v}),e.d(n,"n",function(){return p}),e.d(n,"j",function(){return g}),e.d(n,"b",function(){return _}),e.d(n,"f",function(){return y});var i=e(2),u=e(9),c=r(0),o=r(1),a=r(2),f=r(3),s=r(4),l=r(5),h=r(6),d=c.range,b=o.range,v=a.range,p=f.range,g=s.range,_=l.range,y=h.range},function(t,n,e){"use strict";e.d(n,"b",function(){return u});var r=e(2),i=Object(r.a)(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()});n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"b",function(){return u});var r=e(2),i=Object(r.a)(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()});i.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(r.a)(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null},n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"b",function(){return c});var r=e(2),i=e(9),u=Object(r.a)(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*i.c)},function(t,n){return(n-t)/i.c},function(t){return t.getUTCMinutes()});n.a=u;var c=u.range},function(t,n,e){"use strict";e.d(n,"b",function(){return c});var r=e(2),i=e(9),u=Object(r.a)(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+n*i.b)},function(t,n){return(n-t)/i.b},function(t){return t.getUTCHours()});n.a=u;var c=u.range},function(t,n,e){"use strict";e.d(n,"b",function(){return c});var r=e(2),i=e(9),u=Object(r.a)(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/i.a},function(t){return t.getUTCDate()-1});n.a=u;var c=u.range},function(t,n,e){"use strict";function r(t){return Object(i.a)(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/u.e})}e.d(n,"g",function(){return c}),e.d(n,"c",function(){return o}),e.d(n,"k",function(){return a}),e.d(n,"m",function(){return f}),e.d(n,"i",function(){return s}),e.d(n,"a",function(){return l}),e.d(n,"e",function(){return h}),e.d(n,"h",function(){return d}),e.d(n,"d",function(){return b}),e.d(n,"l",function(){return v}),e.d(n,"n",function(){return p}),e.d(n,"j",function(){return g}),e.d(n,"b",function(){return _}),e.d(n,"f",function(){return y});var i=e(2),u=e(9),c=r(0),o=r(1),a=r(2),f=r(3),s=r(4),l=r(5),h=r(6),d=c.range,b=o.range,v=a.range,p=f.range,g=s.range,_=l.range,y=h.range},function(t,n,e){"use strict";e.d(n,"b",function(){return u});var r=e(2),i=Object(r.a)(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()});n.a=i;var u=i.range},function(t,n,e){"use strict";e.d(n,"b",function(){return u});var r=e(2),i=Object(r.a)(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()});i.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Object(r.a)(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null},n.a=i;var u=i.range},function(t,n,e){"use strict";var r=e(155),i=e(83),u=+new Date("2000-01-01T00:00:00.000Z")?function(t){var n=new Date(t);return isNaN(n)?null:n}:Object(i.e)(r.b);n.a=u},function(t,n,e){"use strict";var r=e(153),i=e(82),u=e(43);n.a=function(){return Object(r.a)(u._7,u.R,u._5,u.F,u.J,u.N,u.V,u.L,i.g).domain([Date.UTC(2e3,0,1),Date.UTC(2e3,0,2)])}},function(t,n,e){"use strict";var r=e(28);n.a=Object(r.a)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf")},function(t,n,e){"use strict";var r=e(28);n.a=Object(r.a)("393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6")},function(t,n,e){"use strict";var r=e(28);n.a=Object(r.a)("3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9")},function(t,n,e){"use strict";var r=e(28);n.a=Object(r.a)("1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5")},function(t,n,e){"use strict";var r=e(7),i=e(5);n.a=Object(i.f)(Object(r.b)(300,.5,0),Object(r.b)(-240,.5,1))},function(t,n,e){"use strict";e.d(n,"c",function(){return u}),e.d(n,"a",function(){return c});var r=e(7),i=e(5),u=Object(i.f)(Object(r.b)(-100,.75,.35),Object(r.b)(80,1.5,.8)),c=Object(i.f)(Object(r.b)(260,.75,.35),Object(r.b)(80,1.5,.8)),o=Object(r.b)();n.b=function(t){(t<0||t>1)&&(t-=Math.floor(t));var n=Math.abs(t-.5);return o.h=360*t-100,o.s=1.5-1.5*n,o.l=.8-.9*n,o+""}},function(t,n,e){"use strict";function r(t){var n=t.length;return function(e){return t[Math.max(0,Math.min(n-1,Math.floor(e*n)))]}}e.d(n,"c",function(){return u}),e.d(n,"b",function(){return c}),e.d(n,"d",function(){return o});var i=e(28);n.a=r(Object(i.a)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));var u=r(Object(i.a)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),c=r(Object(i.a)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),o=r(Object(i.a)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"))},function(t,n,e){"use strict";function r(t){function n(n){var r=(n-e)/(u-e);return t(c?Math.max(0,Math.min(1,r)):r)}var e=0,u=1,c=!1;return n.domain=function(t){return arguments.length?(e=+t[0],u=+t[1],n):[e,u]},n.clamp=function(t){return arguments.length?(c=!!t,n):c},n.interpolator=function(e){return arguments.length?(t=e,n):t},n.copy=function(){return r(t).domain([e,u]).clamp(c)},Object(i.b)(n)}n.a=r;var i=e(27)},function(t,n,e){"use strict";var r=e(439);e.d(n,"a",function(){return r.a});var i=e(156);e.d(n,"b",function(){return i.a});var u=e(84);e.d(n,"v",function(){return u.a});var c=e(440);e.d(n,"A",function(){return c.a});var o=e(443);e.d(n,"c",function(){return o.a}),e.d(n,"C",function(){return o.a});var a=e(158);e.d(n,"w",function(){return a.a}),e.d(n,"D",function(){return a.a});var f=e(159);e.d(n,"B",function(){return f.a});var s=e(444);e.d(n,"x",function(){return s.a}),e.d(n,"z",function(){return s.c}),e.d(n,"y",function(){return s.b});var l=e(445);e.d(n,"P",function(){return l.a}),e.d(n,"X",function(){return l.b});var h=e(161);e.d(n,"Q",function(){return h.a});var d=e(162);e.d(n,"R",function(){return d.a});var b=e(163);e.d(n,"S",function(){return b.a});var v=e(165);e.d(n,"T",function(){return v.a});var p=e(164);e.d(n,"U",function(){return p.a});var g=e(166);e.d(n,"V",function(){return g.a});var _=e(167);e.d(n,"W",function(){return _.a});var y=e(446);e.d(n,"e",function(){return y.a});var m=e(447);e.d(n,"f",function(){return m.a});var O=e(46);e.d(n,"d",function(){return O.b});var j=e(448);e.d(n,"g",function(){return j.a});var x=e(168);e.d(n,"i",function(){return x.b});var w=e(169);e.d(n,"j",function(){return w.b});var M=e(47);e.d(n,"h",function(){return M.b});var k=e(449);e.d(n,"l",function(){return k.a});var T=e(450);e.d(n,"m",function(){return T.a});var N=e(86);e.d(n,"k",function(){return N.a});var S=e(451);e.d(n,"o",function(){return S.a});var A=e(44);e.d(n,"n",function(){return A.a});var E=e(452);e.d(n,"p",function(){return E.a}),e.d(n,"q",function(){return E.b});var C=e(453);e.d(n,"r",function(){return C.a});var z=e(454);e.d(n,"s",function(){return z.a}),e.d(n,"t",function(){return z.b}),e.d(n,"u",function(){return z.c});var P=e(455);e.d(n,"E",function(){return P.a});var q=e(456);e.d(n,"G",function(){return q.a});var R=e(457);e.d(n,"F",function(){return R.a});var L=e(30);e.d(n,"H",function(){return L.a});var D=e(458);e.d(n,"I",function(){return D.a});var U=e(459);e.d(n,"J",function(){return U.a});var F=e(87);e.d(n,"K",function(){return F.a});var I=e(460);e.d(n,"L",function(){return I.a});var Y=e(461);e.d(n,"M",function(){return Y.a});var B=e(31);e.d(n,"N",function(){return B.a});var H=e(462);e.d(n,"O",function(){return H.a})},function(t,n,e){"use strict";function r(t){return t.innerRadius}function i(t){return t.outerRadius}function u(t){return t.startAngle}function c(t){return t.endAngle}function o(t){return t&&t.padAngle}function a(t,n,e,r,i,u,c,o){var a=e-t,f=r-n,s=c-i,l=o-u,h=(s*(n-u)-l*(t-i))/(l*a-s*f);return[t+h*a,n+h*f]}function f(t,n,e,r,i,u,c){var o=t-e,a=n-r,f=(c?u:-u)/Object(h.l)(o*o+a*a),s=f*a,l=-f*o,d=t+s,b=n+l,v=e+s,p=r+l,g=(d+v)/2,_=(b+p)/2,y=v-d,m=p-b,O=y*y+m*m,j=i-u,x=d*p-v*b,w=(m<0?-1:1)*Object(h.l)(Object(h.h)(0,j*j*O-x*x)),M=(x*m-y*w)/O,k=(-x*y-m*w)/O,T=(x*m+y*w)/O,N=(-x*y+m*w)/O,S=M-g,A=k-_,E=T-g,C=N-_;return S*S+A*A>E*E+C*C&&(M=T,k=N),{cx:M,cy:k,x01:-s,y01:-l,x11:M*(i/j-1),y11:k*(i/j-1)}}var s=e(13),l=e(16),h=e(29);n.a=function(){function t(){var t,r,i=+n.apply(this,arguments),u=+e.apply(this,arguments),c=v.apply(this,arguments)-h.g,o=p.apply(this,arguments)-h.g,l=Object(h.a)(o-c),y=o>c;if(_||(_=t=Object(s.a)()),u<i&&(r=u,u=i,i=r),u>h.f)if(l>h.m-h.f)_.moveTo(u*Object(h.e)(c),u*Object(h.k)(c)),_.arc(0,0,u,c,o,!y),i>h.f&&(_.moveTo(i*Object(h.e)(o),i*Object(h.k)(o)),_.arc(0,0,i,o,c,y));else{var m,O,j=c,x=o,w=c,M=o,k=l,T=l,N=g.apply(this,arguments)/2,S=N>h.f&&(b?+b.apply(this,arguments):Object(h.l)(i*i+u*u)),A=Object(h.i)(Object(h.a)(u-i)/2,+d.apply(this,arguments)),E=A,C=A;if(S>h.f){var z=Object(h.c)(S/i*Object(h.k)(N)),P=Object(h.c)(S/u*Object(h.k)(N));(k-=2*z)>h.f?(z*=y?1:-1,w+=z,M-=z):(k=0,w=M=(c+o)/2),(T-=2*P)>h.f?(P*=y?1:-1,j+=P,x-=P):(T=0,j=x=(c+o)/2)}var q=u*Object(h.e)(j),R=u*Object(h.k)(j),L=i*Object(h.e)(M),D=i*Object(h.k)(M);if(A>h.f){var U=u*Object(h.e)(x),F=u*Object(h.k)(x),I=i*Object(h.e)(w),Y=i*Object(h.k)(w);if(l<h.j){var B=k>h.f?a(q,R,I,Y,U,F,L,D):[L,D],H=q-B[0],X=R-B[1],V=U-B[0],W=F-B[1],G=1/Object(h.k)(Object(h.b)((H*V+X*W)/(Object(h.l)(H*H+X*X)*Object(h.l)(V*V+W*W)))/2),J=Object(h.l)(B[0]*B[0]+B[1]*B[1]);E=Object(h.i)(A,(i-J)/(G-1)),C=Object(h.i)(A,(u-J)/(G+1))}}T>h.f?C>h.f?(m=f(I,Y,q,R,u,C,y),O=f(U,F,L,D,u,C,y),_.moveTo(m.cx+m.x01,m.cy+m.y01),C<A?_.arc(m.cx,m.cy,C,Object(h.d)(m.y01,m.x01),Object(h.d)(O.y01,O.x01),!y):(_.arc(m.cx,m.cy,C,Object(h.d)(m.y01,m.x01),Object(h.d)(m.y11,m.x11),!y),_.arc(0,0,u,Object(h.d)(m.cy+m.y11,m.cx+m.x11),Object(h.d)(O.cy+O.y11,O.cx+O.x11),!y),_.arc(O.cx,O.cy,C,Object(h.d)(O.y11,O.x11),Object(h.d)(O.y01,O.x01),!y))):(_.moveTo(q,R),_.arc(0,0,u,j,x,!y)):_.moveTo(q,R),i>h.f&&k>h.f?E>h.f?(m=f(L,D,U,F,i,-E,y),O=f(q,R,I,Y,i,-E,y),_.lineTo(m.cx+m.x01,m.cy+m.y01),E<A?_.arc(m.cx,m.cy,E,Object(h.d)(m.y01,m.x01),Object(h.d)(O.y01,O.x01),!y):(_.arc(m.cx,m.cy,E,Object(h.d)(m.y01,m.x01),Object(h.d)(m.y11,m.x11),!y),_.arc(0,0,i,Object(h.d)(m.cy+m.y11,m.cx+m.x11),Object(h.d)(O.cy+O.y11,O.cx+O.x11),y),_.arc(O.cx,O.cy,E,Object(h.d)(O.y11,O.x11),Object(h.d)(O.y01,O.x01),!y))):_.arc(0,0,i,M,w,y):_.lineTo(L,D)}else _.moveTo(0,0);if(_.closePath(),t)return _=null,t+""||null}var n=r,e=i,d=Object(l.a)(0),b=null,v=u,p=c,g=o,_=null;return t.centroid=function(){var t=(+n.apply(this,arguments)+ +e.apply(this,arguments))/2,r=(+v.apply(this,arguments)+ +p.apply(this,arguments))/2-h.j/2;return[Object(h.e)(r)*t,Object(h.k)(r)*t]},t.innerRadius=function(e){return arguments.length?(n="function"==typeof e?e:Object(l.a)(+e),t):n},t.outerRadius=function(n){return arguments.length?(e="function"==typeof n?n:Object(l.a)(+n),t):e},t.cornerRadius=function(n){return arguments.length?(d="function"==typeof n?n:Object(l.a)(+n),t):d},t.padRadius=function(n){return arguments.length?(b=null==n?null:"function"==typeof n?n:Object(l.a)(+n),t):b},t.startAngle=function(n){return arguments.length?(v="function"==typeof n?n:Object(l.a)(+n),t):v},t.endAngle=function(n){return arguments.length?(p="function"==typeof n?n:Object(l.a)(+n),t):p},t.padAngle=function(n){return arguments.length?(g="function"==typeof n?n:Object(l.a)(+n),t):g},t.context=function(n){return arguments.length?(_=null==n?null:n,t):_},t}},function(t,n,e){"use strict";var r=e(16),i=e(441),u=e(442),c=e(29);n.a=function(){function t(t){var r,i,u,l,h,d=t.length,b=0,v=new Array(d),p=new Array(d),g=+a.apply(this,arguments),_=Math.min(c.m,Math.max(-c.m,f.apply(this,arguments)-g)),y=Math.min(Math.abs(_)/d,s.apply(this,arguments)),m=y*(_<0?-1:1);for(r=0;r<d;++r)(h=p[v[r]=r]=+n(t[r],r,t))>0&&(b+=h);for(null!=e?v.sort(function(t,n){return e(p[t],p[n])}):null!=o&&v.sort(function(n,e){return o(t[n],t[e])}),r=0,u=b?(_-d*m)/b:0;r<d;++r,g=l)i=v[r],l=g+((h=p[i])>0?h*u:0)+m,p[i]={data:t[i],index:r,value:h,startAngle:g,endAngle:l,padAngle:y};return p}var n=u.a,e=i.a,o=null,a=Object(r.a)(0),f=Object(r.a)(c.m),s=Object(r.a)(0);return t.value=function(e){return arguments.length?(n="function"==typeof e?e:Object(r.a)(+e),t):n},t.sortValues=function(n){return arguments.length?(e=n,o=null,t):e},t.sort=function(n){return arguments.length?(o=n,e=null,t):o},t.startAngle=function(n){return arguments.length?(a="function"==typeof n?n:Object(r.a)(+n),t):a},t.endAngle=function(n){return arguments.length?(f="function"==typeof n?n:Object(r.a)(+n),t):f},t.padAngle=function(n){return arguments.length?(s="function"==typeof n?n:Object(r.a)(+n),t):s},t}},function(t,n,e){"use strict";n.a=function(t,n){return n<t?-1:n>t?1:n>=t?0:NaN}},function(t,n,e){"use strict";n.a=function(t){return t}},function(t,n,e){"use strict";var r=e(157),i=e(156),u=e(158);n.a=function(){var t=Object(i.a)().curve(r.a),n=t.curve,e=t.lineX0,c=t.lineX1,o=t.lineY0,a=t.lineY1;return t.angle=t.x,delete t.x,t.startAngle=t.x0,delete t.x0,t.endAngle=t.x1,delete t.x1,t.radius=t.y,delete t.y,t.innerRadius=t.y0,delete t.y0,t.outerRadius=t.y1,delete t.y1,t.lineStartAngle=function(){return Object(u.b)(e())},delete t.lineX0,t.lineEndAngle=function(){return Object(u.b)(c())},delete t.lineX1,t.lineInnerRadius=function(){return Object(u.b)(o())},delete t.lineY0,t.lineOuterRadius=function(){return Object(u.b)(a())},delete t.lineY1,t.curve=function(t){return arguments.length?n(Object(r.b)(t)):n()._curve},t}},function(t,n,e){"use strict";function r(t){return t.source}function i(t){return t.target}function u(t){function n(){var n,r=s.a.call(arguments),i=e.apply(this,r),l=u.apply(this,r);if(a||(a=n=Object(f.a)()),t(a,+c.apply(this,(r[0]=i,r)),+o.apply(this,r),+c.apply(this,(r[0]=l,r)),+o.apply(this,r)),n)return a=null,n+""||null}var e=r,u=i,c=h.a,o=h.b,a=null;return n.source=function(t){return arguments.length?(e=t,n):e},n.target=function(t){return arguments.length?(u=t,n):u},n.x=function(t){return arguments.length?(c="function"==typeof t?t:Object(l.a)(+t),n):c},n.y=function(t){return arguments.length?(o="function"==typeof t?t:Object(l.a)(+t),n):o},n.context=function(t){return arguments.length?(a=null==t?null:t,n):a},n}function c(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n=(n+r)/2,e,n,i,r,i)}function o(t,n,e,r,i){t.moveTo(n,e),t.bezierCurveTo(n,e=(e+i)/2,r,e,r,i)}function a(t,n,e,r,i){var u=Object(d.a)(n,e),c=Object(d.a)(n,e=(e+i)/2),o=Object(d.a)(r,e),a=Object(d.a)(r,i);t.moveTo(u[0],u[1]),t.bezierCurveTo(c[0],c[1],o[0],o[1],a[0],a[1])}n.a=function(){return u(c)},n.c=function(){return u(o)},n.b=function(){var t=u(a);return t.angle=t.x,delete t.x,t.radius=t.y,delete t.y,t};var f=e(13),s=e(160),l=e(16),h=e(85),d=e(159)},function(t,n,e){"use strict";e.d(n,"b",function(){return h});var r=e(13),i=e(161),u=e(162),c=e(163),o=e(164),a=e(165),f=e(166),s=e(167),l=e(16),h=[i.a,u.a,c.a,a.a,o.a,f.a,s.a];n.a=function(){function t(){var t;if(u||(u=t=Object(r.a)()),n.apply(this,arguments).draw(u,+e.apply(this,arguments)),t)return u=null,t+""||null}var n=Object(l.a)(i.a),e=Object(l.a)(64),u=null;return t.type=function(e){return arguments.length?(n="function"==typeof e?e:Object(l.a)(e),t):n},t.size=function(n){return arguments.length?(e="function"==typeof n?n:Object(l.a)(+n),t):e},t.context=function(n){return arguments.length?(u=null==n?null:n,t):u},t}},function(t,n,e){"use strict";function r(t){this._context=t}var i=e(45),u=e(46);r.prototype={areaStart:i.a,areaEnd:i.a,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._y0=this._y1=this._y2=this._y3=this._y4=NaN,this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x2,this._y2),this._context.closePath();break;case 2:this._context.moveTo((this._x2+2*this._x3)/3,(this._y2+2*this._y3)/3),this._context.lineTo((this._x3+2*this._x2)/3,(this._y3+2*this._y2)/3),this._context.closePath();break;case 3:this.point(this._x2,this._y2),this.point(this._x3,this._y3),this.point(this._x4,this._y4)}},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._x2=t,this._y2=n;break;case 1:this._point=2,this._x3=t,this._y3=n;break;case 2:this._point=3,this._x4=t,this._y4=n,this._context.moveTo((this._x0+4*this._x1+t)/6,(this._y0+4*this._y1+n)/6);break;default:Object(u.c)(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n.a=function(t){return new r(t)}},function(t,n,e){"use strict";function r(t){this._context=t}var i=e(46);r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=NaN,this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3;var e=(this._x0+4*this._x1+t)/6,r=(this._y0+4*this._y1+n)/6;this._line?this._context.lineTo(e,r):this._context.moveTo(e,r);break;case 3:this._point=4;default:Object(i.c)(this,t,n)}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n}},n.a=function(t){return new r(t)}},function(t,n,e){"use strict";function r(t,n){this._basis=new i.a(t),this._beta=n}var i=e(46);r.prototype={lineStart:function(){this._x=[],this._y=[],this._basis.lineStart()},lineEnd:function(){var t=this._x,n=this._y,e=t.length-1;if(e>0)for(var r,i=t[0],u=n[0],c=t[e]-i,o=n[e]-u,a=-1;++a<=e;)r=a/e,this._basis.point(this._beta*t[a]+(1-this._beta)*(i+r*c),this._beta*n[a]+(1-this._beta)*(u+r*o));this._x=this._y=null,this._basis.lineEnd()},point:function(t,n){this._x.push(+t),this._y.push(+n)}},n.a=function t(n){function e(t){return 1===n?new i.a(t):new r(t,n)}return e.beta=function(n){return t(+n)},e}(.85)},function(t,n,e){"use strict";function r(t,n){this._context=t,this._alpha=n}var i=e(168),u=e(45),c=e(86);r.prototype={areaStart:u.a,areaEnd:u.a,lineStart:function(){this._x0=this._x1=this._x2=this._x3=this._x4=this._x5=this._y0=this._y1=this._y2=this._y3=this._y4=this._y5=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){switch(this._point){case 1:this._context.moveTo(this._x3,this._y3),this._context.closePath();break;case 2:this._context.lineTo(this._x3,this._y3),this._context.closePath();break;case 3:this.point(this._x3,this._y3),this.point(this._x4,this._y4),this.point(this._x5,this._y5)}},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1,this._x3=t,this._y3=n;break;case 1:this._point=2,this._context.moveTo(this._x4=t,this._y4=n);break;case 2:this._point=3,this._x5=t,this._y5=n;break;default:Object(c.b)(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.a=function t(n){function e(t){return n?new r(t,n):new i.a(t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},function(t,n,e){"use strict";function r(t,n){this._context=t,this._alpha=n}var i=e(169),u=e(86);r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._x2=this._y0=this._y1=this._y2=NaN,this._l01_a=this._l12_a=this._l23_a=this._l01_2a=this._l12_2a=this._l23_2a=this._point=0},lineEnd:function(){(this._line||0!==this._line&&3===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){if(t=+t,n=+n,this._point){var e=this._x2-t,r=this._y2-n;this._l23_a=Math.sqrt(this._l23_2a=Math.pow(e*e+r*r,this._alpha))}switch(this._point){case 0:this._point=1;break;case 1:this._point=2;break;case 2:this._point=3,this._line?this._context.lineTo(this._x2,this._y2):this._context.moveTo(this._x2,this._y2);break;case 3:this._point=4;default:Object(u.b)(this,t,n)}this._l01_a=this._l12_a,this._l12_a=this._l23_a,this._l01_2a=this._l12_2a,this._l12_2a=this._l23_2a,this._x0=this._x1,this._x1=this._x2,this._x2=t,this._y0=this._y1,this._y1=this._y2,this._y2=n}},n.a=function t(n){function e(t){return n?new r(t,n):new i.a(t,0)}return e.alpha=function(n){return t(+n)},e}(.5)},function(t,n,e){"use strict";function r(t){this._context=t}var i=e(45);r.prototype={areaStart:i.a,areaEnd:i.a,lineStart:function(){this._point=0},lineEnd:function(){this._point&&this._context.closePath()},point:function(t,n){t=+t,n=+n,this._point?this._context.lineTo(t,n):(this._point=1,this._context.moveTo(t,n))}},n.a=function(t){return new r(t)}},function(t,n,e){"use strict";function r(t){return t<0?-1:1}function i(t,n,e){var i=t._x1-t._x0,u=n-t._x1,c=(t._y1-t._y0)/(i||u<0&&-0),o=(e-t._y1)/(u||i<0&&-0),a=(c*u+o*i)/(i+u);return(r(c)+r(o))*Math.min(Math.abs(c),Math.abs(o),.5*Math.abs(a))||0}function u(t,n){var e=t._x1-t._x0;return e?(3*(t._y1-t._y0)/e-n)/2:n}function c(t,n,e){var r=t._x0,i=t._y0,u=t._x1,c=t._y1,o=(u-r)/3;t._context.bezierCurveTo(r+o,i+o*n,u-o,c-o*e,u,c)}function o(t){this._context=t}function a(t){this._context=new f(t)}function f(t){this._context=t}n.a=function(t){return new o(t)},n.b=function(t){return new a(t)},o.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x0=this._x1=this._y0=this._y1=this._t0=NaN,this._point=0},lineEnd:function(){switch(this._point){case 2:this._context.lineTo(this._x1,this._y1);break;case 3:c(this,this._t0,u(this,this._t0))}(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line},point:function(t,n){var e=NaN;if(t=+t,n=+n,t!==this._x1||n!==this._y1){switch(this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;break;case 2:this._point=3,c(this,u(this,e=i(this,t,n)),e);break;default:c(this,this._t0,e=i(this,t,n))}this._x0=this._x1,this._x1=t,this._y0=this._y1,this._y1=n,this._t0=e}}},(a.prototype=Object.create(o.prototype)).point=function(t,n){o.prototype.point.call(this,n,t)},f.prototype={moveTo:function(t,n){this._context.moveTo(n,t)},closePath:function(){this._context.closePath()},lineTo:function(t,n){this._context.lineTo(n,t)},bezierCurveTo:function(t,n,e,r,i,u){this._context.bezierCurveTo(n,t,r,e,u,i)}}},function(t,n,e){"use strict";function r(t){this._context=t}function i(t){var n,e,r=t.length-1,i=new Array(r),u=new Array(r),c=new Array(r);for(i[0]=0,u[0]=2,c[0]=t[0]+2*t[1],n=1;n<r-1;++n)i[n]=1,u[n]=4,c[n]=4*t[n]+2*t[n+1];for(i[r-1]=2,u[r-1]=7,c[r-1]=8*t[r-1]+t[r],n=1;n<r;++n)e=i[n]/u[n-1],u[n]-=e,c[n]-=e*c[n-1];for(i[r-1]=c[r-1]/u[r-1],n=r-2;n>=0;--n)i[n]=(c[n]-i[n+1])/u[n];for(u[r-1]=(t[r]+i[r-1])/2,n=0;n<r-1;++n)u[n]=2*t[n+1]-i[n+1];return[i,u]}r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=[],this._y=[]},lineEnd:function(){var t=this._x,n=this._y,e=t.length;if(e)if(this._line?this._context.lineTo(t[0],n[0]):this._context.moveTo(t[0],n[0]),2===e)this._context.lineTo(t[1],n[1]);else for(var r=i(t),u=i(n),c=0,o=1;o<e;++c,++o)this._context.bezierCurveTo(r[0][c],u[0][c],r[1][c],u[1][c],t[o],n[o]);(this._line||0!==this._line&&1===e)&&this._context.closePath(),this._line=1-this._line,this._x=this._y=null},point:function(t,n){this._x.push(+t),this._y.push(+n)}},n.a=function(t){return new r(t)}},function(t,n,e){"use strict";function r(t,n){this._context=t,this._t=n}n.c=function(t){return new r(t,0)},n.b=function(t){return new r(t,1)},r.prototype={areaStart:function(){this._line=0},areaEnd:function(){this._line=NaN},lineStart:function(){this._x=this._y=NaN,this._point=0},lineEnd:function(){0<this._t&&this._t<1&&2===this._point&&this._context.lineTo(this._x,this._y),(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line>=0&&(this._t=1-this._t,this._line=1-this._line)},point:function(t,n){switch(t=+t,n=+n,this._point){case 0:this._point=1,this._line?this._context.lineTo(t,n):this._context.moveTo(t,n);break;case 1:this._point=2;default:if(this._t<=0)this._context.lineTo(this._x,n),this._context.lineTo(t,n);else{var e=this._x*(1-this._t)+t*this._t;this._context.lineTo(e,this._y),this._context.lineTo(e,n)}}this._x=t,this._y=n}},n.a=function(t){return new r(t,.5)}},function(t,n,e){"use strict";function r(t,n){return t[n]}var i=e(160),u=e(16),c=e(30),o=e(31);n.a=function(){function t(t){var r,i,u=n.apply(this,arguments),c=t.length,o=u.length,s=new Array(o);for(r=0;r<o;++r){for(var l,h=u[r],d=s[r]=new Array(c),b=0;b<c;++b)d[b]=l=[0,+f(t[b],h,b,t)],l.data=t[b];d.key=h}for(r=0,i=e(s);r<o;++r)s[i[r]].index=r;return a(s,i),s}var n=Object(u.a)([]),e=o.a,a=c.a,f=r;return t.keys=function(e){return arguments.length?(n="function"==typeof e?e:Object(u.a)(i.a.call(e)),t):n},t.value=function(n){return arguments.length?(f="function"==typeof n?n:Object(u.a)(+n),t):f},t.order=function(n){return arguments.length?(e=null==n?o.a:"function"==typeof n?n:Object(u.a)(i.a.call(n)),t):e},t.offset=function(n){return arguments.length?(a=null==n?c.a:n,t):a},t}},function(t,n,e){"use strict";var r=e(30);n.a=function(t,n){if((i=t.length)>0){for(var e,i,u,c=0,o=t[0].length;c<o;++c){for(u=e=0;e<i;++e)u+=t[e][c][1]||0;if(u)for(e=0;e<i;++e)t[e][c][1]/=u}Object(r.a)(t,n)}}},function(t,n,e){"use strict";n.a=function(t,n){if((o=t.length)>1)for(var e,r,i,u,c,o,a=0,f=t[n[0]].length;a<f;++a)for(u=c=0,e=0;e<o;++e)(i=(r=t[n[e]][a])[1]-r[0])>=0?(r[0]=u,r[1]=u+=i):i<0?(r[1]=c,r[0]=c+=i):r[0]=u}},function(t,n,e){"use strict";var r=e(30);n.a=function(t,n){if((e=t.length)>0){for(var e,i=0,u=t[n[0]],c=u.length;i<c;++i){for(var o=0,a=0;o<e;++o)a+=t[o][i][1]||0;u[i][1]+=u[i][0]=-a/2}Object(r.a)(t,n)}}},function(t,n,e){"use strict";var r=e(30);n.a=function(t,n){if((u=t.length)>0&&(i=(e=t[n[0]]).length)>0){for(var e,i,u,c=0,o=1;o<i;++o){for(var a=0,f=0,s=0;a<u;++a){for(var l=t[n[a]],h=l[o][1]||0,d=(h-(l[o-1][1]||0))/2,b=0;b<a;++b){var v=t[n[b]];d+=(v[o][1]||0)-(v[o-1][1]||0)}f+=h,s+=d*h}e[o-1][1]+=e[o-1][0]=c,f&&(c-=s/f)}e[o-1][1]+=e[o-1][0]=c,Object(r.a)(t,n)}}},function(t,n,e){"use strict";var r=e(87);n.a=function(t){return Object(r.a)(t).reverse()}},function(t,n,e){"use strict";var r=e(31),i=e(87);n.a=function(t){var n,e,u=t.length,c=t.map(i.b),o=Object(r.a)(t).sort(function(t,n){return c[n]-c[t]}),a=0,f=0,s=[],l=[];for(n=0;n<u;++n)e=o[n],a<f?(a+=c[e],s.push(e)):(f+=c[e],l.push(e));return l.reverse().concat(s)}},function(t,n,e){"use strict";var r=e(31);n.a=function(t){return Object(r.a)(t).reverse()}},function(t,n,e){"use strict";var r=e(464);e.d(n,"a",function(){return r.a})},function(t,n,e){"use strict";var r=e(465),i=e(466),u=e(32);n.a=function(){function t(t){return new u.d(t.map(function(r,i){var c=[Math.round(n(r,i,t)/u.f)*u.f,Math.round(e(r,i,t)/u.f)*u.f];return c.index=i,c.data=r,c}),c)}var n=i.a,e=i.b,c=null;return t.polygons=function(n){return t(n).polygons()},t.links=function(n){return t(n).links()},t.triangles=function(n){return t(n).triangles()},t.x=function(e){return arguments.length?(n="function"==typeof e?e:Object(r.a)(+e),t):n},t.y=function(n){return arguments.length?(e="function"==typeof n?n:Object(r.a)(+n),t):e},t.extent=function(n){return arguments.length?(c=null==n?null:[[+n[0][0],+n[0][1]],[+n[1][0],+n[1][1]]],t):c&&[[c[0][0],c[0][1]],[c[1][0],c[1][1]]]},t.size=function(n){return arguments.length?(c=null==n?null:[[0,0],[+n[0],+n[1]]],t):c&&[c[1][0]-c[0][0],c[1][1]-c[0][1]]},t}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";n.a=function(t){return t[0]},n.b=function(t){return t[1]}},function(t,n,e){"use strict";function r(){Object(a.a)(this),this.edge=this.site=this.circle=null}function i(t){var n=d.pop()||new r;return n.site=t,n}function u(t){Object(s.b)(t),h.a.remove(t),d.push(t),Object(a.a)(t)}function c(t,n){var e=t.site,r=e[0],i=e[1],u=i-n;if(!u)return r;var c=t.P;if(!c)return-1/0;var o=(e=c.site)[0],a=e[1],f=a-n;if(!f)return o;var s=o-r,l=1/u-1/f,h=s/f;return l?(-h+Math.sqrt(h*h-2*l*(s*s/(-2*f)-a+f/2+i-u/2)))/l+r:(r+o)/2}function o(t,n){var e=t.N;if(e)return c(e,n);var r=t.site;return r[1]===n?r[0]:1/0}n.b=function(t){var n=t.circle,e=n.x,r=n.cy,i=[e,r],c=t.P,o=t.N,a=[t];u(t);for(var f=c;f.circle&&Math.abs(e-f.circle.x)<h.f&&Math.abs(r-f.circle.cy)<h.f;)c=f.P,a.unshift(f),u(f),f=c;a.unshift(f),Object(s.b)(f);for(var d=o;d.circle&&Math.abs(e-d.circle.x)<h.f&&Math.abs(r-d.circle.cy)<h.f;)o=d.N,a.push(d),u(d),d=o;a.push(d),Object(s.b)(d);var b,v=a.length;for(b=1;b<v;++b)d=a[b],f=a[b-1],Object(l.d)(d.edge,f.site,d.site,i);f=a[0],(d=a[v-1]).edge=Object(l.c)(f.site,d.site,null,i),Object(s.a)(f),Object(s.a)(d)},n.a=function(t){for(var n,e,r,u,a=t[0],d=t[1],b=h.a._;b;)if((r=c(b,d)-a)>h.f)b=b.L;else{if(!((u=a-o(b,d))>h.f)){r>-h.f?(n=b.P,e=b):u>-h.f?(n=b,e=b.N):n=e=b;break}if(!b.R){n=b;break}b=b.R}Object(f.c)(t);var v=i(t);if(h.a.insert(n,v),n||e){if(n===e)return Object(s.b)(n),e=i(n.site),h.a.insert(v,e),v.edge=e.edge=Object(l.c)(n.site,v.site),Object(s.a)(n),void Object(s.a)(e);if(e){Object(s.b)(n),Object(s.b)(e);var p=n.site,g=p[0],_=p[1],y=t[0]-g,m=t[1]-_,O=e.site,j=O[0]-g,x=O[1]-_,w=2*(y*x-m*j),M=y*y+m*m,k=j*j+x*x,T=[(x*M-m*k)/w+g,(y*k-j*M)/w+_];Object(l.d)(e.edge,p,O,T),v.edge=Object(l.c)(p,t,null,T),e.edge=Object(l.c)(t,O,null,T),Object(s.a)(n),Object(s.a)(e)}else v.edge=Object(l.c)(n.site,v.site)}};var a=e(88),f=e(170),s=e(171),l=e(89),h=e(32),d=[]},function(t,n,e){"use strict";var r=e(469);e.d(n,"a",function(){return r.a});var i=e(172);e.d(n,"c",function(){return i.b}),e.d(n,"b",function(){return i.c})},function(t,n,e){"use strict";function r(){return!l.c.button}function i(){var t,n,e=this;return e instanceof SVGElement?(t=(e=e.ownerSVGElement||e).width.baseVal.value,n=e.height.baseVal.value):(t=e.clientWidth,n=e.clientHeight),[[0,0],[t,n]]}function u(){return this.__zoom||v.c}function c(){return-l.c.deltaY*(l.c.deltaMode?120:1)/500}function o(){return"ontouchstart"in this}var a=e(12),f=e(49),s=e(5),l=e(1),h=e(62),d=e(470),b=e(471),v=e(172),p=e(472);n.a=function(){function t(t){t.property("__zoom",u).on("wheel.zoom",j).on("mousedown.zoom",x).on("dblclick.zoom",w).filter(z).on("touchstart.zoom",M).on("touchmove.zoom",k).on("touchend.zoom touchcancel.zoom",T).style("touch-action","none").style("-webkit-tap-highlight-color","rgba(0,0,0,0)")}function n(t,n){return(n=Math.max(P,Math.min(q,n)))===t.k?t:new v.a(n,t.x,t.y)}function e(t,n,e){var r=n[0]-e[0]*t.k,i=n[1]-e[1]*t.k;return r===t.x&&i===t.y?t:new v.a(t.k,r,i)}function g(t,n){var e=t.invertX(n[0][0])-R,r=t.invertX(n[1][0])-L,i=t.invertY(n[0][1])-D,u=t.invertY(n[1][1])-U;return t.translate(r>e?(e+r)/2:Math.min(0,e)||Math.max(0,r),u>i?(i+u)/2:Math.min(0,i)||Math.max(0,u))}function _(t){return[(+t[0][0]+ +t[1][0])/2,(+t[0][1]+ +t[1][1])/2]}function y(t,n,e){t.on("start.zoom",function(){m(this,arguments).start()}).on("interrupt.zoom end.zoom",function(){m(this,arguments).end()}).tween("zoom",function(){var t=this,r=arguments,i=m(t,r),u=E.apply(t,r),c=e||_(u),o=Math.max(u[1][0]-u[0][0],u[1][1]-u[0][1]),a=t.__zoom,f="function"==typeof n?n.apply(t,r):n,s=I(a.invert(c).concat(o/a.k),f.invert(c).concat(o/f.k));return function(t){if(1===t)t=f;else{var n=s(t),e=o/n[2];t=new v.a(e,c[0]-n[0]*e,c[1]-n[1]*e)}i.zoom(null,t)}})}function m(t,n){for(var e,r=0,i=Y.length;r<i;++r)if((e=Y[r]).that===t)return e;return new O(t,n)}function O(t,n){this.that=t,this.args=n,this.index=-1,this.active=0,this.extent=E.apply(t,n)}function j(){if(A.apply(this,arguments)){var t=m(this,arguments),r=this.__zoom,i=Math.max(P,Math.min(q,r.k*Math.pow(2,C.apply(this,arguments)))),u=Object(l.f)(this);if(t.wheel)t.mouse[0][0]===u[0]&&t.mouse[0][1]===u[1]||(t.mouse[1]=r.invert(t.mouse[0]=u)),clearTimeout(t.wheel);else{if(r.k===i)return;t.mouse=[u,r.invert(u)],Object(h.b)(this),t.start()}Object(p.a)(),t.wheel=setTimeout(function(){t.wheel=null,t.end()},X),t.zoom("mouse",g(e(n(r,i),t.mouse[0],t.mouse[1]),t.extent))}}function x(){if(!S&&A.apply(this,arguments)){var t=m(this,arguments),n=Object(l.i)(l.c.view).on("mousemove.zoom",function(){if(Object(p.a)(),!t.moved){var n=l.c.clientX-i,r=l.c.clientY-u;t.moved=n*n+r*r>V}t.zoom("mouse",g(e(t.that.__zoom,t.mouse[0]=Object(l.f)(t.that),t.mouse[1]),t.extent))},!0).on("mouseup.zoom",function(){n.on("mousemove.zoom mouseup.zoom",null),Object(f.c)(l.c.view,t.moved),Object(p.a)(),t.end()},!0),r=Object(l.f)(this),i=l.c.clientX,u=l.c.clientY;Object(f.b)(l.c.view),Object(p.b)(),t.mouse=[r,this.__zoom.invert(r)],Object(h.b)(this),t.start()}}function w(){if(A.apply(this,arguments)){var r=this.__zoom,i=Object(l.f)(this),u=r.invert(i),c=g(e(n(r,r.k*(l.c.shiftKey?.5:2)),i,u),E.apply(this,arguments));Object(p.a)(),F>0?Object(l.i)(this).transition().duration(F).call(y,c,i):Object(l.i)(this).call(t.transform,c)}}function M(){if(A.apply(this,arguments)){var t,n,e,r,i=m(this,arguments),u=l.c.changedTouches,c=u.length;for(Object(p.b)(),n=0;n<c;++n)e=u[n],r=[r=Object(l.o)(this,u,e.identifier),this.__zoom.invert(r),e.identifier],i.touch0?i.touch1||(i.touch1=r):(i.touch0=r,t=!0);if(N&&(N=clearTimeout(N),!i.touch1))return i.end(),void((r=Object(l.i)(this).on("dblclick.zoom"))&&r.apply(this,arguments));t&&(N=setTimeout(function(){N=null},H),Object(h.b)(this),i.start())}}function k(){var t,r,i,u,c=m(this,arguments),o=l.c.changedTouches,a=o.length;for(Object(p.a)(),N&&(N=clearTimeout(N)),t=0;t<a;++t)r=o[t],i=Object(l.o)(this,o,r.identifier),c.touch0&&c.touch0[2]===r.identifier?c.touch0[0]=i:c.touch1&&c.touch1[2]===r.identifier&&(c.touch1[0]=i);if(r=c.that.__zoom,c.touch1){var f=c.touch0[0],s=c.touch0[1],h=c.touch1[0],d=c.touch1[1],b=(b=h[0]-f[0])*b+(b=h[1]-f[1])*b,v=(v=d[0]-s[0])*v+(v=d[1]-s[1])*v;r=n(r,Math.sqrt(b/v)),i=[(f[0]+h[0])/2,(f[1]+h[1])/2],u=[(s[0]+d[0])/2,(s[1]+d[1])/2]}else{if(!c.touch0)return;i=c.touch0[0],u=c.touch0[1]}c.zoom("touch",g(e(r,i,u),c.extent))}function T(){var t,n,e=m(this,arguments),r=l.c.changedTouches,i=r.length;for(Object(p.b)(),S&&clearTimeout(S),S=setTimeout(function(){S=null},H),t=0;t<i;++t)n=r[t],e.touch0&&e.touch0[2]===n.identifier?delete e.touch0:e.touch1&&e.touch1[2]===n.identifier&&delete e.touch1;e.touch1&&!e.touch0&&(e.touch0=e.touch1,delete e.touch1),e.touch0?e.touch0[1]=this.__zoom.invert(e.touch0[0]):e.end()}var N,S,A=r,E=i,C=c,z=o,P=0,q=1/0,R=-q,L=q,D=R,U=L,F=250,I=s.v,Y=[],B=Object(a.a)("start","zoom","end"),H=500,X=150,V=0;return t.transform=function(t,n){var e=t.selection?t.selection():t;e.property("__zoom",u),t!==e?y(t,n):e.interrupt().each(function(){m(this,arguments).start().zoom(null,"function"==typeof n?n.apply(this,arguments):n).end()})},t.scaleBy=function(n,e){t.scaleTo(n,function(){return this.__zoom.k*("function"==typeof e?e.apply(this,arguments):e)})},t.scaleTo=function(r,i){t.transform(r,function(){var t=E.apply(this,arguments),r=this.__zoom,u=_(t),c=r.invert(u);return g(e(n(r,"function"==typeof i?i.apply(this,arguments):i),u,c),t)})},t.translateBy=function(n,e,r){t.transform(n,function(){return g(this.__zoom.translate("function"==typeof e?e.apply(this,arguments):e,"function"==typeof r?r.apply(this,arguments):r),E.apply(this,arguments))})},t.translateTo=function(n,e,r){t.transform(n,function(){var t=E.apply(this,arguments),n=this.__zoom,i=_(t);return g(v.c.translate(i[0],i[1]).scale(n.k).translate("function"==typeof e?-e.apply(this,arguments):-e,"function"==typeof r?-r.apply(this,arguments):-r),t)})},O.prototype={start:function(){return 1==++this.active&&(this.index=Y.push(this)-1,this.emit("start")),this},zoom:function(t,n){return this.mouse&&"mouse"!==t&&(this.mouse[1]=n.invert(this.mouse[0])),this.touch0&&"touch"!==t&&(this.touch0[1]=n.invert(this.touch0[0])),this.touch1&&"touch"!==t&&(this.touch1[1]=n.invert(this.touch1[0])),this.that.__zoom=n,this.emit("zoom"),this},end:function(){return 0==--this.active&&(Y.splice(this.index,1),this.index=-1,this.emit("end")),this},emit:function(n){Object(l.b)(new b.a(t,n,this.that.__zoom),B.apply,B,[n,this.that,this.args])}},t.wheelDelta=function(n){return arguments.length?(C="function"==typeof n?n:Object(d.a)(+n),t):C},t.filter=function(n){return arguments.length?(A="function"==typeof n?n:Object(d.a)(!!n),t):A},t.touchable=function(n){return arguments.length?(z="function"==typeof n?n:Object(d.a)(!!n),t):z},t.extent=function(n){return arguments.length?(E="function"==typeof n?n:Object(d.a)([[+n[0][0],+n[0][1]],[+n[1][0],+n[1][1]]]),t):E},t.scaleExtent=function(n){return arguments.length?(P=+n[0],q=+n[1],t):[P,q]},t.translateExtent=function(n){return arguments.length?(R=+n[0][0],L=+n[1][0],D=+n[0][1],U=+n[1][1],t):[[R,D],[L,U]]},t.duration=function(n){return arguments.length?(F=+n,t):F},t.interpolate=function(n){return arguments.length?(I=n,t):I},t.on=function(){var n=B.on.apply(B,arguments);return n===B?t:n},t.clickDistance=function(n){return arguments.length?(V=(n=+n)*n,t):Math.sqrt(V)},t}},function(t,n,e){"use strict";n.a=function(t){return function(){return t}}},function(t,n,e){"use strict";n.a=function(t,n,e){this.target=t,this.type=n,this.transform=e}},function(t,n,e){"use strict";n.b=function(){r.c.stopImmediatePropagation()};var r=e(1);n.a=function(){r.c.preventDefault(),r.c.stopImmediatePropagation()}},function(t,n,e){t.exports=e(91)}],[473]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,